class SearchAutoComplete
!!!2432898.java!!!	SearchAutoComplete(inout context : Context)
            super(context);
            mThreshold = getThreshold();
!!!2433026.java!!!	SearchAutoComplete(inout context : Context, inout attrs : AttributeSet)
            super(context, attrs);
            mThreshold = getThreshold();
!!!2433154.java!!!	SearchAutoComplete(inout context : Context, inout attrs : AttributeSet, in defStyleAttrs : int)
            super(context, attrs, defStyleAttrs);
            mThreshold = getThreshold();
!!!2433282.java!!!	SearchAutoComplete(inout context : Context, inout attrs : AttributeSet, in defStyleAttrs : int, in defStyleRes : int)
            super(context, attrs, defStyleAttrs, defStyleRes);
            mThreshold = getThreshold();
!!!2433410.java!!!	setSearchView(inout searchView : SearchView) : void
            mSearchView = searchView;
!!!2433538.java!!!	setThreshold(in threshold : int) : void
            super.setThreshold(threshold);
            mThreshold = threshold;
!!!2433666.java!!!	isEmpty() : boolean
            return TextUtils.getTrimmedLength(getText()) == 0;
!!!2434050.java!!!	onWindowFocusChanged(inout hasWindowFocus : boolean) : void
            super.onWindowFocusChanged(hasWindowFocus);

            if (hasWindowFocus && mSearchView.hasFocus() && getVisibility() == VISIBLE) {
                InputMethodManager inputManager = (InputMethodManager) getContext()
                        .getSystemService(Context.INPUT_METHOD_SERVICE);
                inputManager.showSoftInput(this, 0);
                // If in landscape mode, then make sure that
                // the ime is in front of the dropdown.
                if (isLandscapeMode(getContext())) {
                    ensureImeVisible(true);
                }
            }
!!!2434178.java!!!	onFocusChanged(inout focused : boolean, in direction : int, inout previouslyFocusedRect : Rect) : void
            super.onFocusChanged(focused, direction, previouslyFocusedRect);
            mSearchView.onTextFocusChanged();
!!!2434306.java!!!	enoughToFilter() : boolean
            return mThreshold <= 0 || super.enoughToFilter();
!!!2434434.java!!!	onKeyPreIme(in keyCode : int, inout event : KeyEvent) : boolean
            if (keyCode == KeyEvent.KEYCODE_BACK) {
                // special case for the back key, we do not even try to send it
                // to the drop down list but instead, consume it immediately
                if (event.getAction() == KeyEvent.ACTION_DOWN && event.getRepeatCount() == 0) {
                    KeyEvent.DispatcherState state = getKeyDispatcherState();
                    if (state != null) {
                        state.startTracking(event, this);
                    }
                    return true;
                } else if (event.getAction() == KeyEvent.ACTION_UP) {
                    KeyEvent.DispatcherState state = getKeyDispatcherState();
                    if (state != null) {
                        state.handleUpEvent(event);
                    }
                    if (event.isTracking() && !event.isCanceled()) {
                        mSearchView.clearFocus();
                        mSearchView.setImeVisibility(false);
                        return true;
                    }
                }
            }
            return super.onKeyPreIme(keyCode, event);
