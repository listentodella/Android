class FileBackupHelperBase
!!!1792386.java!!!	FileBackupHelperBase(inout context : Context)
        mPtr = ctor();
        mContext = context;
!!!1792514.java!!!	finalize() : void
        try {
            dtor(mPtr);
        } finally {
            super.finalize();
        }
!!!1792642.java!!!	performBackup_checked(inout oldState : ParcelFileDescriptor, inout data : BackupDataOutput, inout newState : ParcelFileDescriptor, inout files : String, inout keys : String) : void
        if (files.length == 0) {
            return;
        }
        // files must be all absolute paths
        for (String f: files) {
            if (f.charAt(0) != '/') {
                throw new RuntimeException("files must have all absolute paths: " + f);
            }
        }
        // the length of files and keys must be the same
        if (files.length != keys.length) {
            throw new RuntimeException("files.length=" + files.length
                    + " keys.length=" + keys.length);
        }
        // oldStateFd can be null
        FileDescriptor oldStateFd = oldState != null ? oldState.getFileDescriptor() : null;
        FileDescriptor newStateFd = newState.getFileDescriptor();
        if (newStateFd == null) {
            throw new NullPointerException();
        }

        int err = performBackup_native(oldStateFd, data.mBackupWriter, newStateFd, files, keys);

        if (err != 0) {
            // TODO: more here
            throw new RuntimeException("Backup failed 0x" + Integer.toHexString(err));
        }
!!!1792770.java!!!	writeFile(inout f : File, inout in : BackupDataInputStream) : boolean
        int result = -1;

        // Create the enclosing directory.
        File parent = f.getParentFile();
        parent.mkdirs();

        result = writeFile_native(mPtr, f.getAbsolutePath(), in.mData.mBackupReader);
        if (result != 0) {
            // Bail on this entity.  Only log one failure per helper object.
            if (!mExceptionLogged) {
                Log.e(TAG, "Failed restoring file '" + f + "' for app '"
                        + mContext.getPackageName() + "\' result=0x"
                        + Integer.toHexString(result));
                mExceptionLogged = true;
            }
        }
        return (result == 0);
!!!1792898.java!!!	writeNewStateDescription(inout fd : ParcelFileDescriptor) : void
        int result = writeSnapshot_native(mPtr, fd.getFileDescriptor());
        // TODO: Do something with the error.
!!!1793026.java!!!	isKeyInList(in key : String, inout list : String) : boolean
        for (String s: list) {
            if (s.equals(key)) {
                return true;
            }
        }
        return false;
