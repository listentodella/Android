format 76
"backup" // app::backup
  revision 1
  modified_by 2 "thisway_diy"
  // class settings
  //class diagram settings
  draw_all_relations default hide_attributes default hide_operations default hide_getset_operations default show_members_full_definition default show_members_visibility default show_members_stereotype default show_members_context default show_members_multiplicity default show_members_initialization default show_attribute_modifiers default member_max_width 0 show_parameter_dir default show_parameter_name default package_name_in_tab default class_drawing_mode default drawing_language default show_context_mode default auto_label_position default show_relation_modifiers default show_relation_visibility default show_infonote default shadow default show_stereotype_properties default
  //use case diagram settings
  package_name_in_tab default show_context default auto_label_position default draw_all_relations default class_drawing_mode default shadow default show_stereotype_properties default
  //sequence diagram settings
  show_full_operations_definition default write_horizontally default class_drawing_mode default drawing_language default draw_all_relations default shadow default show_stereotype_properties default show_class_context_mode default show_msg_context_mode default
  //collaboration diagram settings
  show_full_operations_definition default show_hierarchical_rank default write_horizontally default class_drawing_mode default drawing_language default package_name_in_tab default show_context default show_msg_context default draw_all_relations default shadow default show_stereotype_properties default
  //object diagram settings
   write_horizontally default package_name_in_tab default show_context default auto_label_position default draw_all_relations default shadow default show_stereotype_properties default
  //component diagram settings
  package_name_in_tab default show_context default auto_label_position default draw_all_relations default shadow default
  draw_component_as_icon default show_component_req_prov default show_component_rea default show_stereotype_properties default
  //deployment diagram settings
  package_name_in_tab default show_context default write_horizontally default auto_label_position default draw_all_relations default shadow default
  draw_component_as_icon default show_component_req_prov default show_component_rea default show_stereotype_properties default
  //state diagram settings
  package_name_in_tab default show_context default auto_label_position default write_trans_label_horizontally default show_trans_definition default draw_all_relations default shadow default
  show_activities default region_horizontally default drawing_language default show_stereotype_properties default
  //activity diagram settings
  package_name_in_tab default show_context default show_opaque_action_definition default auto_label_position default write_flow_label_horizontally default draw_all_relations default shadow default
  show_infonote default drawing_language default show_stereotype_properties default
  
  java_dir "l:/android_projects/uml_tmp_file/app/backup/"
  java_package "android.app.backup"
  classview 153090 "backup"
    //class diagram settings
    draw_all_relations default hide_attributes default hide_operations default hide_getset_operations default show_members_full_definition default show_members_visibility default show_members_stereotype default show_members_context default show_members_multiplicity default show_members_initialization default show_attribute_modifiers default member_max_width 0 show_parameter_dir default show_parameter_name default package_name_in_tab default class_drawing_mode default drawing_language default show_context_mode default auto_label_position default show_relation_modifiers default show_relation_visibility default show_infonote default shadow default show_stereotype_properties default
    //collaboration diagram settings
    show_full_operations_definition default show_hierarchical_rank default write_horizontally default class_drawing_mode default drawing_language default package_name_in_tab default show_context default show_msg_context default draw_all_relations default shadow default show_stereotype_properties default
    //object diagram settings
     write_horizontally default package_name_in_tab default show_context default auto_label_position default draw_all_relations default shadow default show_stereotype_properties default
    //sequence diagram settings
    show_full_operations_definition default write_horizontally default class_drawing_mode default drawing_language default draw_all_relations default shadow default show_stereotype_properties default show_class_context_mode default show_msg_context_mode default
    //state diagram settings
    package_name_in_tab default show_context default auto_label_position default write_trans_label_horizontally default show_trans_definition default draw_all_relations default shadow default
    show_activities default region_horizontally default drawing_language default show_stereotype_properties default
    //class settings
    //activity diagram settings
    package_name_in_tab default show_context default show_opaque_action_definition default auto_label_position default write_flow_label_horizontally default draw_all_relations default shadow default
    show_infonote default drawing_language default show_stereotype_properties default
    class 279938 "BackupAgent"
      abstract visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Provides the central interface between an
application and Android's data backup infrastructure.  An application that wishes
to participate in the backup and restore mechanism will declare a subclass of
{@link android.app.backup.BackupAgent}, implement the
{@link #onBackup(ParcelFileDescriptor, BackupDataOutput, ParcelFileDescriptor) onBackup()}
and {@link #onRestore(BackupDataInput, int, ParcelFileDescriptor) onRestore()} methods,
and provide the name of its backup agent class in its {@code AndroidManifest.xml} file via
the <code>
<a href=\"{@docRoot}guide/topics/manifest/application-element.html\">&lt;application&gt;</a></code>
tag's {@code android:backupAgent} attribute.

<div class=\"special reference\">
<h3>Developer Guides</h3>
<p>For more information about using BackupAgent, read the
<a href=\"{@docRoot}guide/topics/data/backup.html\">Data Backup</a> developer guide.</p></div>

<h3>Basic Operation</h3>
<p>
When the application makes changes to data that it wishes to keep backed up,
it should call the
{@link android.app.backup.BackupManager#dataChanged() BackupManager.dataChanged()} method.
This notifies the Android Backup Manager that the application needs an opportunity
to update its backup image.  The Backup Manager, in turn, schedules a
backup pass to be performed at an opportune time.
<p>
Restore operations are typically performed only when applications are first
installed on a device.  At that time, the operating system checks to see whether
there is a previously-saved data set available for the application being installed, and if so,
begins an immediate restore pass to deliver the backup data as part of the installation
process.
<p>
When a backup or restore pass is run, the application's process is launched
(if not already running), the manifest-declared backup agent class (in the {@code
android:backupAgent} attribute) is instantiated within
that process, and the agent's {@link #onCreate()} method is invoked.  This prepares the
agent instance to run the actual backup or restore logic.  At this point the
agent's
{@link #onBackup(ParcelFileDescriptor, BackupDataOutput, ParcelFileDescriptor) onBackup()} or
{@link #onRestore(BackupDataInput, int, ParcelFileDescriptor) onRestore()} method will be
invoked as appropriate for the operation being performed.
<p>
A backup data set consists of one or more \"entities,\" flattened binary data
records that are each identified with a key string unique within the data set.  Adding a
record to the active data set or updating an existing record is done by simply
writing new entity data under the desired key.  Deleting an entity from the data set
is done by writing an entity under that key with header specifying a negative data
size, and no actual entity data.
<p>
<b>Helper Classes</b>
<p>
An extensible agent based on convenient helper classes is available in
{@link android.app.backup.BackupAgentHelper}.  That class is particularly
suited to handling of simple file or {@link android.content.SharedPreferences}
backup and restore.

@see android.app.backup.BackupManager
@see android.app.backup.BackupAgentHelper
@see android.app.backup.BackupDataInput
@see android.app.backup.BackupDataOutput"
      classrelation 392450 // <generalisation>
	relation 391554 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 392450 // <generalisation>
	  b parent class_ref 213250 // ContextWrapper
      end

      attribute 1196290 "TAG"
	class_attribute const_attribute private explicit_type "String"
	init_value " \"BackupAgent\""
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 1196418 "DEBUG"
	class_attribute const_attribute private explicit_type "boolean"
	init_value " true"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 1196546 "TYPE_EOF"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " @hide "
      end

      attribute 1196674 "TYPE_FILE"
	class_attribute const_attribute public explicit_type "int"
	init_value " 1"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "During a full restore, indicates that the file system object being restored
is an ordinary file.
"
      end

      attribute 1196802 "TYPE_DIRECTORY"
	class_attribute const_attribute public explicit_type "int"
	init_value " 2"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "During a full restore, indicates that the file system object being restored
is a directory.
"
      end

      attribute 1196930 "TYPE_SYMLINK"
	class_attribute const_attribute public explicit_type "int"
	init_value " 3"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " @hide "
      end

      attribute 1197058 "mHandler"
	package explicit_type "Handler"
	init_value " null"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      operation 1794562 "getHandler"
	package explicit_return_type "Handler"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      class 308866 "SharedPrefsSynchronizer"
	visibility package 
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	classrelation 392578 // <realization>
	  relation 391682 -_-|>
	    a public
	      cpp default "${type}"
	      java "${type}"
	      classrelation_ref 392578 // <realization>
	    b parent class_ref 205826 // Runnable
	end

	attribute 1197186 "mLatch"
	  const_attribute public explicit_type "CountDownLatch"
	  init_value " new CountDownLatch(1)"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	operation 1794690 "run"
	  public explicit_return_type "void"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end
      end

      operation 1794818 "waitForSharedPrefs"
	private explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Syncing shared preferences deferred writes needs to happen on the main looper thread"
      end

      operation 1794946 "BackupAgent"
	public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1795074 "onCreate"
	public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Provided as a convenience for agent implementations that need an opportunity
to do one-time initialization before the actual backup or restore operation
is begun.
<p>
Agents do not need to override this method."
      end

      operation 1795202 "onDestroy"
	public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Provided as a convenience for agent implementations that need to do some
sort of shutdown process after backup or restore is completed.
<p>
Agents do not need to override this method."
      end

      operation 1795330 "onBackup"
	abstract public explicit_return_type "void"
	nparams 3
	  param inout name "oldState" explicit_type "ParcelFileDescriptor"
	  param inout name "data" type class_ref 308482 // BackupDataOutput
	  param inout name "newState" explicit_type "ParcelFileDescriptor"
	nexceptions 1
	  explicit_exception "IOException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "The application is being asked to write any data changed since the last
time it performed a backup operation. The state data recorded during the
last backup pass is provided in the <code>oldState</code> file
descriptor. If <code>oldState</code> is <code>null</code>, no old state
is available and the application should perform a full backup. In both
cases, a representation of the final backup state after this pass should
be written to the file pointed to by the file descriptor wrapped in
<code>newState</code>.
<p>
Each entity written to the {@link android.app.backup.BackupDataOutput}
<code>data</code> stream will be transmitted
over the current backup transport and stored in the remote data set under
the key supplied as part of the entity.  Writing an entity with a negative
data size instructs the transport to delete whatever entity currently exists
under that key from the remote data set.

@param oldState An open, read-only ParcelFileDescriptor pointing to the
           last backup state provided by the application. May be
           <code>null</code>, in which case no prior state is being
           provided and the application should perform a full backup.
@param data A structured wrapper around an open, read/write
           file descriptor pointing to the backup data destination.
           Typically the application will use backup helper classes to
           write to this file.
@param newState An open, read/write ParcelFileDescriptor pointing to an
           empty file. The application should record the final backup
           state here after writing the requested data to the <code>data</code>
           output stream."
      end

      operation 1795458 "onRestore"
	abstract public explicit_return_type "void"
	nparams 3
	  param inout name "data" type class_ref 308994 // BackupDataInput
	  param in name "appVersionCode" explicit_type "int"
	  param inout name "newState" explicit_type "ParcelFileDescriptor"
	nexceptions 1
	  explicit_exception "IOException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "The application is being restored from backup and should replace any
existing data with the contents of the backup. The backup data is
provided through the <code>data</code> parameter. Once
the restore is finished, the application should write a representation of
the final state to the <code>newState</code> file descriptor.
<p>
The application is responsible for properly erasing its old data and
replacing it with the data supplied to this method. No \"clear user data\"
operation will be performed automatically by the operating system. The
exception to this is in the case of a failed restore attempt: if
onRestore() throws an exception, the OS will assume that the
application's data may now be in an incoherent state, and will clear it
before proceeding.

@param data A structured wrapper around an open, read-only
           file descriptor pointing to a full snapshot of the
           application's data.  The application should consume every
           entity represented in this data stream.
@param appVersionCode The value of the <a
href=\"{@docRoot}guide/topics/manifest/manifest-element.html#vcode\">{@code
           android:versionCode}</a> manifest attribute,
           from the application that backed up this particular data set. This
           makes it possible for an application's agent to distinguish among any
           possible older data versions when asked to perform the restore
           operation.
@param newState An open, read/write ParcelFileDescriptor pointing to an
           empty file. The application should record the final backup
           state here after restoring its data from the <code>data</code> stream.
           When a full-backup dataset is being restored, this will be <code>null</code>."
      end

      operation 1795586 "onFullBackup"
	public explicit_return_type "void"
	nparams 1
	  param inout name "data" type class_ref 309122 // FullBackupDataOutput
	nexceptions 1
	  explicit_exception "IOException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "The application is having its entire file system contents backed up.  {@code data}
points to the backup destination, and the app has the opportunity to choose which
files are to be stored.  To commit a file as part of the backup, call the
{@link #fullBackupFile(File, FullBackupDataOutput)} helper method.  After all file
data is written to the output, the agent returns from this method and the backup
operation concludes.

<p>Certain parts of the app's data are never backed up even if the app explicitly
sends them to the output:

<ul>
<li>The contents of the {@link #getCacheDir()} directory</li>
<li>The contents of the {@link #getNoBackupFilesDir()} directory</li>
<li>The contents of the app's shared library directory</li>
</ul>

<p>The default implementation of this method backs up the entirety of the
application's \"owned\" file system trees to the output other than the few exceptions
listed above.  Apps only need to override this method if they need to impose special
limitations on which files are being stored beyond the control that
{@link #getNoBackupFilesDir()} offers.

@param data A structured wrapper pointing to the backup destination.
@throws IOException

@see Context#getNoBackupFilesDir()
@see #fullBackupFile(File, FullBackupDataOutput)
@see #onRestoreFile(ParcelFileDescriptor, long, File, int, long, long)"
      end

      operation 1795714 "fullBackupFile"
	public explicit_return_type "void"
	nparams 2
	  param inout name "file" explicit_type "File"
	  param inout name "output" type class_ref 309122 // FullBackupDataOutput
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Write an entire file as part of a full-backup operation.  The file's contents
will be delivered to the backup destination along with the metadata necessary
to place it with the proper location and permissions on the device where the
data is restored.

<p class=\"note\">It is safe to explicitly back up files underneath your application's
{@link #getNoBackupFilesDir()} directory, and they will be restored to that
location correctly.

@param file The file to be backed up.  The file must exist and be readable by
    the caller.
@param output The destination to which the backed-up file data will be sent."
      end

      operation 1795842 "fullBackupFileTree"
	protected explicit_return_type "void"
	nparams 5
	  param in name "packageName" explicit_type "String"
	  param in name "domain" explicit_type "String"
	  param in name "rootPath" explicit_type "String"
	  param inout name "excludes" explicit_type "HashSet<String>"
	  param inout name "output" type class_ref 309122 // FullBackupDataOutput
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Scan the dir tree (if it actually exists) and process each entry we find.  If the
'excludes' parameter is non-null, it is consulted each time a new file system entity
is visited to see whether that entity (and its subtree, if appropriate) should be
omitted from the backup process.

@hide"
      end

      operation 1795970 "onRestoreFile"
	public explicit_return_type "void"
	nparams 6
	  param inout name "data" explicit_type "ParcelFileDescriptor"
	  param in name "size" explicit_type "long"
	  param inout name "destination" explicit_type "File"
	  param in name "type" explicit_type "int"
	  param in name "mode" explicit_type "long"
	  param in name "mtime" explicit_type "long"
	nexceptions 1
	  explicit_exception "IOException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Handle the data delivered via the given file descriptor during a full restore
operation.  The agent is given the path to the file's original location as well
as its size and metadata.
<p>
The file descriptor can only be read for {@code size} bytes; attempting to read
more data has undefined behavior.
<p>
The default implementation creates the destination file/directory and populates it
with the data from the file descriptor, then sets the file's access mode and
modification time to match the restore arguments.

@param data A read-only file descriptor from which the agent can read {@code size}
    bytes of file data.
@param size The number of bytes of file content to be restored to the given
    destination.  If the file system object being restored is a directory, {@code size}
    will be zero.
@param destination The File on disk to be restored with the given data.
@param type The kind of file system object being restored.  This will be either
    {@link BackupAgent#TYPE_FILE} or {@link BackupAgent#TYPE_DIRECTORY}.
@param mode The access mode to be assigned to the destination after its data is
    written.  This is in the standard format used by {@code chmod()}.
@param mtime The modification time of the file when it was backed up, suitable to
    be assigned to the file after its data is written.
@throws IOException"
      end

      operation 1796098 "onRestoreFile"
	protected explicit_return_type "void"
	nparams 7
	  param inout name "data" explicit_type "ParcelFileDescriptor"
	  param in name "size" explicit_type "long"
	  param in name "type" explicit_type "int"
	  param in name "domain" explicit_type "String"
	  param in name "path" explicit_type "String"
	  param in name "mode" explicit_type "long"
	  param in name "mtime" explicit_type "long"
	nexceptions 1
	  explicit_exception "IOException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}, ${t6} ${p6}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Only specialized platform agents should overload this entry point to support
restores to crazy non-app locations.
@hide"
      end

      operation 1796226 "onRestoreFinished"
	public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "The application's restore operation has completed.  This method is called after
all available data has been delivered to the application for restore (via either
the {@link #onRestore(BackupDataInput, int, ParcelFileDescriptor) onRestore()} or
{@link #onRestoreFile(ParcelFileDescriptor, long, File, int, long, long) onRestoreFile()}
callbacks).  This provides the app with a stable end-of-restore opportunity to
perform any appropriate post-processing on the data that was just delivered.

@see #onRestore(BackupDataInput, int, ParcelFileDescriptor)
@see #onRestoreFile(ParcelFileDescriptor, long, File, int, long, long)"
      end

      operation 1796354 "onBind"
	public explicit_return_type "IBinder"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " ----- Core implementation -----
 @hide "
      end

      attribute 1197314 "mBinder"
	const_attribute private explicit_type "IBinder"
	init_value " new BackupServiceBinder().asBinder()"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      operation 1796482 "attach"
	public explicit_return_type "void"
	nparams 1
	  param inout name "context" explicit_type "Context"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " @hide "
      end

      class 309250 "BackupServiceBinder"
	visibility private 
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	classrelation 392706 // <generalisation>
	  relation 391810 ---|>
	    a public
	      cpp default "${type}"
	      java "${type}"
	      classrelation_ref 392706 // <generalisation>
	    b parent class_ref 309378 // Stub
	end

	attribute 1197442 "TAG"
	  class_attribute const_attribute private explicit_type "String"
	  init_value " \"BackupServiceBinder\""
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	operation 1796610 "doBackup"
	  public explicit_return_type "void"
	  nparams 5
	    param inout name "oldState" explicit_type "ParcelFileDescriptor"
	    param inout name "data" explicit_type "ParcelFileDescriptor"
	    param inout name "newState" explicit_type "ParcelFileDescriptor"
	    param in name "token" explicit_type "int"
	    param inout name "callbackBinder" explicit_type "IBackupManager"
	  nexceptions 1
	    explicit_exception "RemoteException"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 1796738 "doRestore"
	  public explicit_return_type "void"
	  nparams 5
	    param inout name "data" explicit_type "ParcelFileDescriptor"
	    param in name "appVersionCode" explicit_type "int"
	    param inout name "newState" explicit_type "ParcelFileDescriptor"
	    param in name "token" explicit_type "int"
	    param inout name "callbackBinder" explicit_type "IBackupManager"
	  nexceptions 1
	    explicit_exception "RemoteException"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 1796866 "doFullBackup"
	  public explicit_return_type "void"
	  nparams 3
	    param inout name "data" explicit_type "ParcelFileDescriptor"
	    param in name "token" explicit_type "int"
	    param inout name "callbackBinder" explicit_type "IBackupManager"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 1796994 "doRestoreFile"
	  public explicit_return_type "void"
	  nparams 9
	    param inout name "data" explicit_type "ParcelFileDescriptor"
	    param in name "size" explicit_type "long"
	    param in name "type" explicit_type "int"
	    param in name "domain" explicit_type "String"
	    param in name "path" explicit_type "String"
	    param in name "mode" explicit_type "long"
	    param in name "mtime" explicit_type "long"
	    param in name "token" explicit_type "int"
	    param inout name "callbackBinder" explicit_type "IBackupManager"
	  nexceptions 1
	    explicit_exception "RemoteException"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}, ${t6} ${p6}, ${t7} ${p7}, ${t8} ${p8}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 1797122 "doRestoreFinished"
	  public explicit_return_type "void"
	  nparams 2
	    param in name "token" explicit_type "int"
	    param inout name "callbackBinder" explicit_type "IBackupManager"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 1797250 "fail"
	  public explicit_return_type "void"
	  nparams 1
	    param in name "message" explicit_type "String"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end
      end

      class 309506 "FailRunnable"
	visibility package 
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	classrelation 392834 // <realization>
	  relation 391938 -_-|>
	    a public
	      cpp default "${type}"
	      java "${type}"
	      classrelation_ref 392834 // <realization>
	    b parent class_ref 205826 // Runnable
	end

	attribute 1197570 "mMessage"
	  private explicit_type "String"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	operation 1797378 "FailRunnable"
	  package explicit_return_type ""
	  nparams 1
	    param in name "message" explicit_type "String"
	  cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	  cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 1797506 "run"
	  public explicit_return_type "void"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end
      end
    end

    class 308226 "AbsoluteFileBackupHelper"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Like FileBackupHelper, but takes absolute paths for the files instead of
subpaths of getFilesDir()

@hide"
      classrelation 392194 // <generalisation>
	relation 391298 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 392194 // <generalisation>
	  b parent class_ref 308354 // FileBackupHelperBase
      end

      classrelation 392322 // <realization>
	relation 391426 -_-|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 392322 // <realization>
	  b parent class_ref 308738 // BackupHelper
      end

      attribute 1195778 "TAG"
	class_attribute const_attribute private explicit_type "String"
	init_value " \"AbsoluteFileBackupHelper\""
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 1195906 "DEBUG"
	class_attribute const_attribute private explicit_type "boolean"
	init_value " false"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 1196034 "mContext"
	package explicit_type "Context"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 1196162 "mFiles"
	package explicit_type "String"
	multiplicity "[]"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      operation 1794178 "AbsoluteFileBackupHelper"
	public explicit_return_type ""
	nparams 2
	  param inout name "context" explicit_type "Context"
	  param inout name "" explicit_type "String...files"
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Construct a helper for backing up / restoring the files at the given absolute locations
within the file system.

@param context
@param files"
      end

      operation 1794306 "performBackup"
	public explicit_return_type "void"
	nparams 3
	  param inout name "oldState" explicit_type "ParcelFileDescriptor"
	  param inout name "data" type class_ref 308482 // BackupDataOutput
	  param inout name "newState" explicit_type "ParcelFileDescriptor"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Based on oldState, determine which of the files from the application's data directory
need to be backed up, write them to the data stream, and fill in newState with the
state as it exists now."
      end

      operation 1794434 "restoreEntity"
	public explicit_return_type "void"
	nparams 1
	  param inout name "data" type class_ref 308610 // BackupDataInputStream
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Restore one absolute file entity from the restore stream"
      end
    end

    class 308354 "FileBackupHelperBase"
      visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Base class for the {@link android.app.backup.FileBackupHelper} implementation."
      attribute 1195266 "TAG"
	class_attribute const_attribute private explicit_type "String"
	init_value " \"FileBackupHelperBase\""
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 1195394 "mPtr"
	package explicit_type "long"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 1195522 "mContext"
	package explicit_type "Context"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 1195650 "mExceptionLogged"
	package explicit_type "boolean"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      operation 1792386 "FileBackupHelperBase"
	package explicit_return_type ""
	nparams 1
	  param inout name "context" explicit_type "Context"
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1792514 "finalize"
	protected explicit_return_type "void"
	nparams 0
	nexceptions 1
	  explicit_exception "Throwable"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1792642 "performBackup_checked"
	class_operation package explicit_return_type "void"
	nparams 5
	  param inout name "oldState" explicit_type "ParcelFileDescriptor"
	  param inout name "data" type class_ref 308482 // BackupDataOutput
	  param inout name "newState" explicit_type "ParcelFileDescriptor"
	  param inout name "files" explicit_type "String"
	  param inout name "keys" explicit_type "String"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3}[] ${p3}, ${t4}[] ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Check the parameters so the native code doesn't have to throw all the exceptions
since it's easier to do that from Java."
      end

      operation 1792770 "writeFile"
	package explicit_return_type "boolean"
	nparams 2
	  param inout name "f" explicit_type "File"
	  param inout name "in" type class_ref 308610 // BackupDataInputStream
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1792898 "writeNewStateDescription"
	public explicit_return_type "void"
	nparams 1
	  param inout name "fd" explicit_type "ParcelFileDescriptor"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1793026 "isKeyInList"
	package explicit_return_type "boolean"
	nparams 2
	  param in name "key" explicit_type "String"
	  param inout name "list" explicit_type "String"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1}[] ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1793154 "ctor"
	class_operation private explicit_return_type "long"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${)}${throws};
"
	
	
	
      end

      operation 1793282 "dtor"
	class_operation private explicit_return_type "void"
	nparams 1
	  param in name "ptr" explicit_type "long"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}${)}${throws};
"
	
	
	
      end

      operation 1793410 "performBackup_native"
	class_operation private explicit_return_type "int"
	nparams 5
	  param inout name "oldState" explicit_type "FileDescriptor"
	  param in name "data" explicit_type "long"
	  param inout name "newState" explicit_type "FileDescriptor"
	  param inout name "files" explicit_type "String"
	  param inout name "keys" explicit_type "String"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3}[] ${p3}, ${t4}[] ${p4}${)}${throws};
"
	
	
	
      end

      operation 1793538 "writeFile_native"
	class_operation private explicit_return_type "int"
	nparams 3
	  param in name "ptr" explicit_type "long"
	  param in name "filename" explicit_type "String"
	  param in name "backupReader" explicit_type "long"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws};
"
	
	
	
      end

      operation 1793666 "writeSnapshot_native"
	class_operation private explicit_return_type "int"
	nparams 2
	  param in name "ptr" explicit_type "long"
	  param inout name "fd" explicit_type "FileDescriptor"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws};
"
	
	
	
      end
    end

    class 308482 "BackupDataOutput"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Provides the structured interface through which a {@link BackupAgent} commits
information to the backup data set, via its {@link
BackupAgent#onBackup(ParcelFileDescriptor,BackupDataOutput,ParcelFileDescriptor)
onBackup()} method.  Data written for backup is presented
as a set of \"entities,\" key/value pairs in which each binary data record \"value\" is
named with a string \"key.\"
<p>
To commit a data record to the backup transport, the agent's
{@link BackupAgent#onBackup(ParcelFileDescriptor,BackupDataOutput,ParcelFileDescriptor)
onBackup()} method first writes an \"entity header\" that supplies the key string for the record
and the total size of the binary value for the record.  After the header has been
written, the agent then writes the binary entity value itself.  The entity value can
be written in multiple chunks if desired, as long as the total count of bytes written
matches what was supplied to {@link #writeEntityHeader(String, int) writeEntityHeader()}.
<p>
Entity key strings are considered to be unique within a given application's backup
data set. If a backup agent writes a new entity under an existing key string, its value will
replace any previous value in the transport's remote data store.  You can remove a record
entirely from the remote data set by writing a new entity header using the
existing record's key, but supplying a negative <code>dataSize</code> parameter.
When you do so, the agent does not need to call {@link #writeEntityData(byte[], int)}.
<h3>Example</h3>
<p>
Here is an example illustrating a way to back up the value of a String variable
called <code>mStringToBackUp</code>:
<pre>
static final String MY_STRING_KEY = \"storedstring\";

public void {@link BackupAgent#onBackup(ParcelFileDescriptor, BackupDataOutput, ParcelFileDescriptor) onBackup(ParcelFileDescriptor oldState, BackupDataOutput data, ParcelFileDescriptor newState)}
        throws IOException {
    ...
    byte[] stringBytes = mStringToBackUp.getBytes();
    data.writeEntityHeader(MY_STRING_KEY, stringBytes.length);
    data.writeEntityData(stringBytes, stringBytes.length);
    ...
}</pre>

@see BackupAgent"
      attribute 1198722 "mBackupWriter"
	package explicit_type "long"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      operation 1800450 "BackupDataOutput"
	public explicit_return_type ""
	nparams 1
	  param inout name "fd" explicit_type "FileDescriptor"
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@SystemApi
"
	
	
	
	comment " @hide "
      end

      operation 1800578 "writeEntityHeader"
	public explicit_return_type "int"
	nparams 2
	  param in name "key" explicit_type "String"
	  param in name "dataSize" explicit_type "int"
	nexceptions 1
	  explicit_exception "IOException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Mark the beginning of one record in the backup data stream. This must be called before
{@link #writeEntityData}.
@param key A string key that uniquely identifies the data record within the application.
   Keys whose first character is \\uFF00 or higher are not valid.
@param dataSize The size in bytes of this record's data.  Passing a dataSize
   of -1 indicates that the record under this key should be deleted.
@return The number of bytes written to the backup stream
@throws IOException if the write failed"
      end

      operation 1800706 "writeEntityData"
	public explicit_return_type "int"
	nparams 2
	  param inout name "data" explicit_type "byte"
	  param in name "size" explicit_type "int"
	nexceptions 1
	  explicit_exception "IOException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Write a chunk of data under the current entity to the backup transport.
@param data A raw data buffer to send
@param size The number of bytes to be sent in this chunk
@return the number of bytes written
@throws IOException if the write failed"
      end

      operation 1800834 "setKeyPrefix"
	public explicit_return_type "void"
	nparams 1
	  param in name "keyPrefix" explicit_type "String"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " @hide "
      end

      operation 1800962 "finalize"
	protected explicit_return_type "void"
	nparams 0
	nexceptions 1
	  explicit_exception "Throwable"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment " @hide "
      end

      operation 1801090 "ctor"
	class_operation private explicit_return_type "long"
	nparams 1
	  param inout name "fd" explicit_type "FileDescriptor"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}${)}${throws};
"
	
	
	
      end

      operation 1801218 "dtor"
	class_operation private explicit_return_type "void"
	nparams 1
	  param in name "mBackupWriter" explicit_type "long"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}${)}${throws};
"
	
	
	
      end

      operation 1801346 "writeEntityHeader_native"
	class_operation private explicit_return_type "int"
	nparams 3
	  param in name "mBackupWriter" explicit_type "long"
	  param in name "key" explicit_type "String"
	  param in name "dataSize" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws};
"
	
	
	
      end

      operation 1801474 "writeEntityData_native"
	class_operation private explicit_return_type "int"
	nparams 3
	  param in name "mBackupWriter" explicit_type "long"
	  param inout name "data" explicit_type "byte"
	  param in name "size" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}, ${t1}[] ${p1}, ${t2} ${p2}${)}${throws};
"
	
	
	
      end

      operation 1801602 "setKeyPrefix_native"
	class_operation private explicit_return_type "void"
	nparams 2
	  param in name "mBackupWriter" explicit_type "long"
	  param in name "keyPrefix" explicit_type "String"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws};
"
	
	
	
      end
    end

    class 308610 "BackupDataInputStream"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Provides an {@link java.io.InputStream}-like interface for accessing an
entity's data during a restore operation. Used by {@link BackupHelper} classes within the {@link
BackupAgentHelper} mechanism.
<p>
When {@link BackupHelper#restoreEntity(BackupDataInputStream) BackupHelper.restoreEntity()}
is called, the current entity's header has already been read from the underlying
{@link BackupDataInput}.  The entity's key string and total data size are available
through this class's {@link #getKey()} and {@link #size()} methods, respectively.
<p class=\"note\">
<strong>Note:</strong> The caller should take care not to seek or close the underlying data
source, nor read more than {@link #size()} bytes from the stream.</p>

@see BackupAgentHelper
@see BackupHelper"
      classrelation 393346 // <generalisation>
	relation 392450 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 393346 // <generalisation>
	  b parent class_ref 310018 // InputStream
      end

      attribute 1198338 "key"
	package explicit_type "String"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 1198466 "dataSize"
	package explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 393474 // mData (<unidirectional association>)
	relation 392578 --->
	  a role_name "mData" package
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 393474 // mData (<unidirectional association>)
	  b parent class_ref 308994 // BackupDataInput
      end

      attribute 1198594 "mOneByte"
	package explicit_type "byte"
	multiplicity "[]"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      operation 1799682 "BackupDataInputStream"
	package explicit_return_type ""
	nparams 1
	  param inout name "data" type class_ref 308994 // BackupDataInput
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " @hide "
      end

      operation 1799810 "read"
	public explicit_return_type "int"
	nparams 0
	nexceptions 1
	  explicit_exception "IOException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Read one byte of entity data from the stream, returning it as
an integer value.  If more than {@link #size()} bytes of data
are read from the stream, the output of this method is undefined.

@return The byte read, or undefined if the end of the stream has been reached."
      end

      operation 1799938 "read"
	public explicit_return_type "int"
	nparams 3
	  param inout name "b" explicit_type "byte"
	  param in name "offset" explicit_type "int"
	  param in name "size" explicit_type "int"
	nexceptions 1
	  explicit_exception "IOException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Read up to {@code size} bytes of data into a byte array, beginning at position
{@code offset} within the array.

@param b Byte array into which the data will be read
@param offset The data will be stored in {@code b} beginning at this index
  within the array.
@param size The number of bytes to read in this operation.  If insufficient
  data exists within the entity to fulfill this request, only as much data
  will be read as is available.
@return The number of bytes of data read, or zero if all of the entity's
  data has already been read."
      end

      operation 1800066 "read"
	public explicit_return_type "int"
	nparams 1
	  param inout name "b" explicit_type "byte"
	nexceptions 1
	  explicit_exception "IOException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Read enough entity data into a byte array to fill the array.

@param b Byte array to fill with data from the stream.  If the stream does not
  have sufficient data to fill the array, then the contents of the remainder of
  the array will be undefined.
@return The number of bytes of data read, or zero if all of the entity's
  data has already been read."
      end

      operation 1800194 "getKey"
	public explicit_return_type "String"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Report the key string associated with this entity within the backup data set.

@return The key string for this entity, equivalent to calling
  {@link BackupDataInput#getKey()} on the underlying {@link BackupDataInput}."
      end

      operation 1800322 "size"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Report the total number of bytes of data available for the current entity.

@return The number of data bytes available, equivalent to calling
  {@link BackupDataInput#getDataSize()} on the underlying {@link BackupDataInput}."
      end
    end

    class 308738 "BackupHelper"
      visibility public stereotype "interface"
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Defines the calling interface that {@link BackupAgentHelper} uses
when dispatching backup and restore operations to the installed helpers.
Applications can define and install their own helpers as well as using those
provided as part of the Android framework.
<p>
Although multiple helper objects may be installed simultaneously, each helper
is responsible only for handling its own data, and will not see entities
created by other components within the backup system.  Invocations of multiple
helpers are performed sequentially by the {@link BackupAgentHelper}, with each
helper given a chance to access its own saved state from within the state record
produced during the previous backup operation.

@see BackupAgentHelper
@see FileBackupHelper
@see SharedPreferencesBackupHelper"
      operation 1793794 "performBackup"
	public explicit_return_type "void"
	nparams 3
	  param inout name "oldState" explicit_type "ParcelFileDescriptor"
	  param inout name "data" type class_ref 308482 // BackupDataOutput
	  param inout name "newState" explicit_type "ParcelFileDescriptor"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Based on <code>oldState</code>, determine what application content
needs to be backed up, write it to <code>data</code>, and fill in
<code>newState</code> with the complete state as it exists now.
<p>
Implementing this method is much like implementing
{@link BackupAgent#onBackup(ParcelFileDescriptor, BackupDataOutput, ParcelFileDescriptor)
onBackup()} &mdash; the method parameters are the same.  When this method is invoked the
{@code oldState} descriptor points to the beginning of the state data
written during this helper's previous backup operation, and the {@code newState}
descriptor points to the file location at which the helper should write its
new state after performing the backup operation.
<p class=\"note\">
<strong>Note:</strong> The helper should not close or seek either the {@code oldState} or
the {@code newState} file descriptors.</p>

@param oldState An open, read-only {@link android.os.ParcelFileDescriptor} pointing to the
           last backup state provided by the application. May be
           <code>null</code>, in which case no prior state is being
           provided and the application should perform a full backup.
@param data An open, read/write {@link BackupDataOutput}
           pointing to the backup data destination.
           Typically the application will use backup helper classes to
           write to this file.
@param newState An open, read/write {@link android.os.ParcelFileDescriptor} pointing to an
           empty file. The application should record the final backup
           state here after writing the requested data to the <code>data</code>
           output stream."
      end

      operation 1793922 "restoreEntity"
	public explicit_return_type "void"
	nparams 1
	  param inout name "data" type class_ref 308610 // BackupDataInputStream
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Called by {@link android.app.backup.BackupAgentHelper BackupAgentHelper}
to restore a single entity from the restore data set.  This method will be
called for each entity in the data set that belongs to this handler.
<p class=\"note\">
<strong>Note:</strong> Do not close the <code>data</code> stream.  Do not read more than
{@link android.app.backup.BackupDataInputStream#size() size()} bytes from
<code>data</code>.</p>

@param data An open {@link BackupDataInputStream} from which the backup data can be read."
      end

      operation 1794050 "writeNewStateDescription"
	public explicit_return_type "void"
	nparams 1
	  param inout name "newState" explicit_type "ParcelFileDescriptor"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Called by {@link android.app.backup.BackupAgentHelper BackupAgentHelper}
after a restore operation to write the backup state file corresponding to
the data as processed by the helper.  The data written here will be
available to the helper during the next call to its
{@link #performBackup(ParcelFileDescriptor, BackupDataOutput, ParcelFileDescriptor)
performBackup()} method.
<p>
This method will be called even if the handler's
{@link #restoreEntity(BackupDataInputStream) restoreEntity()} method was never invoked during
the restore operation.
<p class=\"note\">
<strong>Note:</strong> The helper should not close or seek the {@code newState}
file descriptor.</p>

@param newState A {@link android.os.ParcelFileDescriptor} to which the new state will be
written."
      end
    end

    class 308994 "BackupDataInput"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Provides the structured interface through which a {@link BackupAgent} reads
information from the backup data set, via its
{@link BackupAgent#onRestore(BackupDataInput, int, android.os.ParcelFileDescriptor) onRestore()}
method.  The data is presented as a set of \"entities,\" each
representing one named record as previously stored by the agent's
{@link BackupAgent#onBackup(ParcelFileDescriptor,BackupDataOutput,ParcelFileDescriptor)
onBackup()} implementation.  An entity is composed of a descriptive header plus a
byte array that holds the raw data saved in the remote backup.
<p>
The agent must consume every entity in the data stream, otherwise the
restored state of the application will be incomplete.
<h3>Example</h3>
<p>
A typical
{@link BackupAgent#onRestore(BackupDataInput,int,ParcelFileDescriptor)
onRestore()} implementation might be structured something like this:
<pre>
public void onRestore(BackupDataInput data, int appVersionCode,
                      ParcelFileDescriptor newState) {
    while (data.readNextHeader()) {
        String key = data.getKey();
        int dataSize = data.getDataSize();

        if (key.equals(MY_BACKUP_KEY_ONE)) {
            // process this kind of record here
            byte[] buffer = new byte[dataSize];
            data.readEntityData(buffer, 0, dataSize); // reads the entire entity at once

            // now 'buffer' holds the raw data and can be processed however
            // the agent wishes
            processBackupKeyOne(buffer);
        } else if (key.equals(MY_BACKUP_KEY_TO_IGNORE) {
            // a key we recognize but wish to discard
            data.skipEntityData();
        } // ... etc.
   }
}</pre>"
      attribute 1197826 "mBackupReader"
	package explicit_type "long"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      class 309890 "EntityHeader"
	visibility private 
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	attribute 1198082 "key"
	  package explicit_type "String"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 1198210 "dataSize"
	  package explicit_type "int"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end
      end

      classrelation 393218 // mHeader (<unidirectional association>)
	relation 392322 --->
	  a role_name "mHeader" init_value " new EntityHeader()" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 393218 // mHeader (<unidirectional association>)
	  b parent class_ref 309890 // EntityHeader
      end

      attribute 1197954 "mHeaderReady"
	private explicit_type "boolean"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      operation 1798146 "BackupDataInput"
	public explicit_return_type ""
	nparams 1
	  param inout name "fd" explicit_type "FileDescriptor"
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@SystemApi
"
	
	
	
	comment " @hide "
      end

      operation 1798274 "finalize"
	protected explicit_return_type "void"
	nparams 0
	nexceptions 1
	  explicit_exception "Throwable"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment " @hide "
      end

      operation 1798402 "readNextHeader"
	public explicit_return_type "boolean"
	nparams 0
	nexceptions 1
	  explicit_exception "IOException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Extract the next entity header from the restore stream.  After this method
return success, the {@link #getKey()} and {@link #getDataSize()} methods can
be used to inspect the entity that is now available for processing.

@return <code>true</code> when there is an entity ready for consumption from the
   restore stream, <code>false</code> if the restore stream has been fully consumed.
@throws IOException if an error occurred while reading the restore stream"
      end

      operation 1798530 "getKey"
	public explicit_return_type "String"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Report the key associated with the current entity in the restore stream
@return the current entity's key string
@throws IllegalStateException if the next record header has not yet been read"
      end

      operation 1798658 "getDataSize"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Report the size in bytes of the data associated with the current entity in the
restore stream.

@return The size of the record's raw data, in bytes
@throws IllegalStateException if the next record header has not yet been read"
      end

      operation 1798786 "readEntityData"
	public explicit_return_type "int"
	nparams 3
	  param inout name "data" explicit_type "byte"
	  param in name "offset" explicit_type "int"
	  param in name "size" explicit_type "int"
	nexceptions 1
	  explicit_exception "IOException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Read a record's raw data from the restore stream.  The record's header must first
have been processed by the {@link #readNextHeader()} method.  Multiple calls to
this method may be made in order to process the data in chunks; not all of it
must be read in a single call.  Once all of the raw data for the current entity
has been read, further calls to this method will simply return zero.

@param data An allocated byte array of at least 'size' bytes
@param offset Offset within the 'data' array at which the data will be placed
   when read from the stream
@param size The number of bytes to read in this pass
@return The number of bytes of data read.  Once all of the data for this entity
   has been read, further calls to this method will return zero.
@throws IOException if an error occurred when trying to read the restore data stream"
      end

      operation 1798914 "skipEntityData"
	public explicit_return_type "void"
	nparams 0
	nexceptions 1
	  explicit_exception "IOException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Consume the current entity's data without extracting it into a buffer
for further processing.  This allows a {@link android.app.backup.BackupAgent} to
efficiently discard obsolete or otherwise uninteresting records during the
restore operation.

@throws IOException if an error occurred when trying to read the restore data stream"
      end

      operation 1799042 "ctor"
	class_operation private explicit_return_type "long"
	nparams 1
	  param inout name "fd" explicit_type "FileDescriptor"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}${)}${throws};
"
	
	
	
      end

      operation 1799170 "dtor"
	class_operation private explicit_return_type "void"
	nparams 1
	  param in name "mBackupReader" explicit_type "long"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}${)}${throws};
"
	
	
	
      end

      operation 1799298 "readNextHeader_native"
	private explicit_return_type "int"
	nparams 2
	  param in name "mBackupReader" explicit_type "long"
	  param inout name "entity" type class_ref 309890 // EntityHeader
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws};
"
	
	
	
      end

      operation 1799426 "readEntityData_native"
	private explicit_return_type "int"
	nparams 4
	  param in name "mBackupReader" explicit_type "long"
	  param inout name "data" explicit_type "byte"
	  param in name "offset" explicit_type "int"
	  param in name "size" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}, ${t1}[] ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws};
"
	
	
	
      end

      operation 1799554 "skipEntityData_native"
	private explicit_return_type "int"
	nparams 1
	  param in name "mBackupReader" explicit_type "long"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}${)}${throws};
"
	
	
	
      end
    end

    class 309122 "FullBackupDataOutput"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Provides the interface through which a {@link BackupAgent} writes entire files
to a full backup data set, via its {@link BackupAgent#onFullBackup(FullBackupDataOutput)}
method."
      classrelation 394242 // mData (<unidirectional association>)
	relation 393346 --->
	  a role_name "mData" private
	    comment " Currently a name-scoping shim around BackupDataOutput
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 394242 // mData (<unidirectional association>)
	  b parent class_ref 308482 // BackupDataOutput
      end

      operation 1811458 "FullBackupDataOutput"
	public explicit_return_type ""
	nparams 1
	  param inout name "fd" explicit_type "ParcelFileDescriptor"
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " @hide "
      end

      operation 1811586 "getData"
	public return_type class_ref 308482 // BackupDataOutput
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " @hide "
      end
    end

    class 309634 "BackupAgentHelper"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "A convenient {@link BackupAgent} wrapper class that automatically manages
heterogeneous data sets within the backup data, each identified by a unique
key prefix.  When processing a backup or restore operation, the BackupAgentHelper
dispatches to one or more installed {@link BackupHelper} objects, each
of which is responsible for a defined subset of the data being processed.
<p>
An application will typically extend this class in its own
backup agent. Then, within the agent's {@link BackupAgent#onCreate() onCreate()}
method, it will call {@link #addHelper(String, BackupHelper) addHelper()} one or more times to
install the handlers for each kind of data it wishes to manage within its backups.
<p>
The Android framework currently provides two predefined {@link BackupHelper} classes:</p>
<ul><li>{@link FileBackupHelper} - Manages the backup and restore of entire files
within an application's data directory hierarchy.</li>
<li>{@link SharedPreferencesBackupHelper} - Manages the backup and restore of an
application's {@link android.content.SharedPreferences} data.</li></ul>
<p>
An application can also implement its own helper classes to work within the
{@link BackupAgentHelper} framework.  See the {@link BackupHelper} interface
documentation for details.

<div class=\"special reference\">
<h3>Developer Guides</h3>
<p>For more information about using BackupAgentHelper, read the
<a href=\"{@docRoot}guide/topics/data/backup.html\">Data Backup</a> developer guide.</p>
</div>

@see BackupHelper
@see FileBackupHelper
@see SharedPreferencesBackupHelper"
      classrelation 392962 // <generalisation>
	relation 392066 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 392962 // <generalisation>
	  b parent class_ref 279938 // BackupAgent
      end

      attribute 1197698 "TAG"
	class_attribute const_attribute package explicit_type "String"
	init_value " \"BackupAgentHelper\""
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 393090 // mDispatcher (<unidirectional association>)
	relation 392194 --->
	  a role_name "mDispatcher" init_value " new BackupHelperDispatcher()" package
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 393090 // mDispatcher (<unidirectional association>)
	  b parent class_ref 309762 // BackupHelperDispatcher
      end

      operation 1797634 "onBackup"
	public explicit_return_type "void"
	nparams 3
	  param inout name "oldState" explicit_type "ParcelFileDescriptor"
	  param inout name "data" type class_ref 308482 // BackupDataOutput
	  param inout name "newState" explicit_type "ParcelFileDescriptor"
	nexceptions 1
	  explicit_exception "IOException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Run the backup process on each of the configured handlers."
      end

      operation 1797762 "onRestore"
	public explicit_return_type "void"
	nparams 3
	  param inout name "data" type class_ref 308994 // BackupDataInput
	  param in name "appVersionCode" explicit_type "int"
	  param inout name "newState" explicit_type "ParcelFileDescriptor"
	nexceptions 1
	  explicit_exception "IOException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Run the restore process on each of the configured handlers."
      end

      operation 1797890 "getDispatcher"
	public return_type class_ref 309762 // BackupHelperDispatcher
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " @hide "
      end

      operation 1798018 "addHelper"
	public explicit_return_type "void"
	nparams 2
	  param in name "keyPrefix" explicit_type "String"
	  param inout name "helper" type class_ref 308738 // BackupHelper
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Add a helper for a given data subset to the agent's configuration.  Each helper
must have a prefix string that is unique within this backup agent's set of
helpers.

@param keyPrefix A string used to disambiguate the various helpers within this agent
@param helper A backup/restore helper object to be invoked during backup and restore
   operations."
      end
    end

    class 309762 "BackupHelperDispatcher"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment " @hide "
      attribute 1198850 "TAG"
	class_attribute const_attribute private explicit_type "String"
	init_value " \"BackupHelperDispatcher\""
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      class 310146 "Header"
	visibility private 
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	attribute 1198978 "chunkSize"
	  package explicit_type "int"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  comment " not including the header"
	end

	attribute 1199106 "keyPrefix"
	  package explicit_type "String"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end
      end

      classrelation 393602 // mHelpers (<unidirectional association>)
	relation 392706 --->
	  stereotype "TreeMap"
	  a role_name "mHelpers" init_value " new TreeMap<String,BackupHelper>()" package
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${stereotype}<String,${type}> ${name}${value};
"
	    classrelation_ref 393602 // mHelpers (<unidirectional association>)
	  b parent class_ref 308738 // BackupHelper
      end

      operation 1801730 "BackupHelperDispatcher"
	public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1801858 "addHelper"
	public explicit_return_type "void"
	nparams 2
	  param in name "keyPrefix" explicit_type "String"
	  param inout name "helper" type class_ref 308738 // BackupHelper
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1801986 "performBackup"
	public explicit_return_type "void"
	nparams 3
	  param inout name "oldState" explicit_type "ParcelFileDescriptor"
	  param inout name "data" type class_ref 308482 // BackupDataOutput
	  param inout name "newState" explicit_type "ParcelFileDescriptor"
	nexceptions 1
	  explicit_exception "IOException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1802114 "doOneBackup"
	private explicit_return_type "void"
	nparams 5
	  param inout name "oldState" explicit_type "ParcelFileDescriptor"
	  param inout name "data" type class_ref 308482 // BackupDataOutput
	  param inout name "newState" explicit_type "ParcelFileDescriptor"
	  param inout name "header" type class_ref 310146 // Header
	  param inout name "helper" type class_ref 308738 // BackupHelper
	nexceptions 1
	  explicit_exception "IOException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1802242 "performRestore"
	public explicit_return_type "void"
	nparams 3
	  param inout name "input" type class_ref 308994 // BackupDataInput
	  param in name "appVersionCode" explicit_type "int"
	  param inout name "newState" explicit_type "ParcelFileDescriptor"
	nexceptions 1
	  explicit_exception "IOException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1802370 "readHeader_native"
	class_operation private explicit_return_type "int"
	nparams 2
	  param inout name "h" type class_ref 310146 // Header
	  param inout name "fd" explicit_type "FileDescriptor"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws};
"
	
	
	
      end

      operation 1802498 "skipChunk_native"
	class_operation private explicit_return_type "int"
	nparams 2
	  param inout name "fd" explicit_type "FileDescriptor"
	  param in name "bytesToSkip" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws};
"
	
	
	
      end

      operation 1802626 "allocateHeader_native"
	class_operation private explicit_return_type "int"
	nparams 2
	  param inout name "h" type class_ref 310146 // Header
	  param inout name "fd" explicit_type "FileDescriptor"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws};
"
	
	
	
      end

      operation 1802754 "writeHeader_native"
	class_operation private explicit_return_type "int"
	nparams 3
	  param inout name "h" type class_ref 310146 // Header
	  param inout name "fd" explicit_type "FileDescriptor"
	  param in name "pos" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws};
"
	
	
	
      end
    end

    class 310274 "BackupManager"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "The interface through which an application interacts with the Android backup service to
request backup and restore operations.
Applications instantiate it using the constructor and issue calls through that instance.
<p>
When an application has made changes to data which should be backed up, a
call to {@link #dataChanged()} will notify the backup service. The system
will then schedule a backup operation to occur in the near future. Repeated
calls to {@link #dataChanged()} have no further effect until the backup
operation actually occurs.
<p>
A backup or restore operation for your application begins when the system launches the
{@link android.app.backup.BackupAgent} subclass you've declared in your manifest. See the
documentation for {@link android.app.backup.BackupAgent} for a detailed description
of how the operation then proceeds.
<p>
Several attributes affecting the operation of the backup and restore mechanism
can be set on the <code>
<a href=\"{@docRoot}guide/topics/manifest/application-element.html\">&lt;application&gt;</a></code>
tag in your application's AndroidManifest.xml file.

<div class=\"special reference\">
<h3>Developer Guides</h3>
<p>For more information about using BackupManager, read the
<a href=\"{@docRoot}guide/topics/data/backup.html\">Data Backup</a> developer guide.</p></div>

@attr ref android.R.styleable#AndroidManifestApplication_allowBackup
@attr ref android.R.styleable#AndroidManifestApplication_backupAgent
@attr ref android.R.styleable#AndroidManifestApplication_killAfterRestore
@attr ref android.R.styleable#AndroidManifestApplication_restoreAnyVersion"
      attribute 1199234 "TAG"
	class_attribute const_attribute private explicit_type "String"
	init_value " \"BackupManager\""
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 1199362 "mContext"
	private explicit_type "Context"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 1199490 "sService"
	class_attribute private explicit_type "IBackupManager"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      operation 1802882 "checkServiceBinder"
	class_operation private explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1803010 "BackupManager"
	public explicit_return_type ""
	nparams 1
	  param inout name "context" explicit_type "Context"
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a BackupManager object through which the application can
communicate with the Android backup system.

@param context The {@link android.content.Context} that was provided when
               one of your application's {@link android.app.Activity Activities}
               was created."
      end

      operation 1803138 "dataChanged"
	public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Notifies the Android backup system that your application wishes to back up
new changes to its data.  A backup operation using your application's
{@link android.app.backup.BackupAgent} subclass will be scheduled when you
call this method."
      end

      operation 1803266 "dataChanged"
	class_operation public explicit_return_type "void"
	nparams 1
	  param in name "packageName" explicit_type "String"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Convenience method for callers who need to indicate that some other package
needs a backup pass.  This can be useful in the case of groups of packages
that share a uid.
<p>
This method requires that the application hold the \"android.permission.BACKUP\"
permission if the package named in the argument does not run under the same uid
as the caller.

@param packageName The package name identifying the application to back up."
      end

      operation 1803394 "requestRestore"
	public explicit_return_type "int"
	nparams 1
	  param inout name "observer" type class_ref 310402 // RestoreObserver
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Restore the calling application from backup.  The data will be restored from the
current backup dataset if the application has stored data there, or from
the dataset used during the last full device setup operation if the current
backup dataset has no matching data.  If no backup data exists for this application
in either source, a nonzero value will be returned.

<p>If this method returns zero (meaning success), the OS will attempt to retrieve
a backed-up dataset from the remote transport, instantiate the application's
backup agent, and pass the dataset to the agent's
{@link android.app.backup.BackupAgent#onRestore(BackupDataInput, int, android.os.ParcelFileDescriptor) onRestore()}
method.

@param observer The {@link RestoreObserver} to receive callbacks during the restore
operation. This must not be null.

@return Zero on success; nonzero on error."
      end

      operation 1803522 "beginRestoreSession"
	public return_type class_ref 310530 // RestoreSession
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@SystemApi
"
	
	
	
	comment " system APIs start here

Begin the process of restoring data from backup.  See the
{@link android.app.backup.RestoreSession} class for documentation on that process.
@hide"
      end

      operation 1803650 "setBackupEnabled"
	public explicit_return_type "void"
	nparams 1
	  param inout name "isEnabled" explicit_type "boolean"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@SystemApi
"
	
	
	
	comment "Enable/disable the backup service entirely.  When disabled, no backup
or restore operations will take place.  Data-changed notifications will
still be observed and collected, however, so that changes made while the
mechanism was disabled will still be backed up properly if it is enabled
at some point in the future.

<p>Callers must hold the android.permission.BACKUP permission to use this method.

@hide"
      end

      operation 1803778 "isBackupEnabled"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@SystemApi
"
	
	
	
	comment "Report whether the backup mechanism is currently enabled.

<p>Callers must hold the android.permission.BACKUP permission to use this method.

@hide"
      end

      operation 1803906 "setAutoRestore"
	public explicit_return_type "void"
	nparams 1
	  param inout name "isEnabled" explicit_type "boolean"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@SystemApi
"
	
	
	
	comment "Enable/disable data restore at application install time.  When enabled, app
installation will include an attempt to fetch the app's historical data from
the archival restore dataset (if any).  When disabled, no such attempt will
be made.

<p>Callers must hold the android.permission.BACKUP permission to use this method.

@hide"
      end

      operation 1804034 "getCurrentTransport"
	public explicit_return_type "String"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@SystemApi
"
	
	
	
	comment "Identify the currently selected transport.  Callers must hold the
android.permission.BACKUP permission to use this method.
@return The name of the currently active backup transport.  In case of
  failure or if no transport is currently active, this method returns {@code null}.

@hide"
      end

      operation 1804162 "listAllTransports"
	public explicit_return_type "String"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@SystemApi
"
	
	
	
	comment "Request a list of all available backup transports' names.  Callers must
hold the android.permission.BACKUP permission to use this method.

@hide"
      end

      operation 1804290 "selectBackupTransport"
	public explicit_return_type "String"
	nparams 1
	  param in name "transport" explicit_type "String"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@SystemApi
"
	
	
	
	comment "Specify the current backup transport.  Callers must hold the
android.permission.BACKUP permission to use this method.

@param transport The name of the transport to select.  This should be one
  of the names returned by {@link #listAllTransports()}.
@return The name of the previously selected transport.  If the given transport
  name is not one of the currently available transports, no change is made to
  the current transport setting and the method returns null.

@hide"
      end

      operation 1804418 "backupNow"
	public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@SystemApi
"
	
	
	
	comment "Schedule an immediate backup attempt for all pending key/value updates.  This
is primarily intended for transports to use when they detect a suitable
opportunity for doing a backup pass.  If there are no pending updates to
be sent, no action will be taken.  Even if some updates are pending, the
transport will still be asked to confirm via the usual requestBackupTime()
method.

<p>Callers must hold the android.permission.BACKUP permission to use this method.

@hide"
      end
    end

    class 310402 "RestoreObserver"
      abstract visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Callback class for receiving progress reports during a restore operation.  These
methods will all be called on your application's main thread."
      operation 1812610 "restoreSetsAvailable"
	public explicit_return_type "void"
	nparams 1
	  param inout name "result" type class_ref 310786 // RestoreSet
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@SystemApi
"
	
	
	
	comment "Supply a list of the restore datasets available from the current transport.  This
method is invoked as a callback following the application's use of the
{@link android.app.backup.IRestoreSession.getAvailableRestoreSets} method.

@param result An array of {@link android.app.backup.RestoreSet RestoreSet} objects
  describing all of the available datasets that are candidates for restoring to
  the current device.  If no applicable datasets exist, {@code result} will be
  {@code null}.

@hide"
      end

      operation 1812738 "restoreStarting"
	public explicit_return_type "void"
	nparams 1
	  param in name "numPackages" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "The restore operation has begun.

@param numPackages The total number of packages being processed in
  this restore operation."
      end

      operation 1812866 "onUpdate"
	public explicit_return_type "void"
	nparams 2
	  param in name "nowBeingRestored" explicit_type "int"
	  param in name "currentPackage" explicit_type "String"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "An indication of which package is being restored currently, out of the
total number provided in the {@link #restoreStarting(int)} callback.  This method
is not guaranteed to be called: if the transport is unable to obtain
data for one or more of the requested packages, no onUpdate() call will
occur for those packages.

@param nowBeingRestored The index, between 1 and the numPackages parameter
  to the {@link #restoreStarting(int)} callback, of the package now being
  restored.  This may be non-monotonic; it is intended purely as a rough
  indication of the backup manager's progress through the overall restore process.
@param currentPackage The name of the package now being restored."
      end

      operation 1812994 "restoreFinished"
	public explicit_return_type "void"
	nparams 1
	  param in name "error" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "The restore process has completed.  This method will always be called,
even if no individual package restore operations were attempted.

@param error Zero on success; a nonzero error code if the restore operation
  as a whole failed."
      end
    end

    class 310530 "RestoreSession"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      java_annotation "@SystemApi
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Interface for managing a restore session.
@hide"
      attribute 1203970 "TAG"
	class_attribute const_attribute package explicit_type "String"
	init_value " \"RestoreSession\""
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 1204098 "mContext"
	const_attribute package explicit_type "Context"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 1204226 "mBinder"
	package explicit_type "IRestoreSession"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      class 311682 "RestoreObserverWrapper"
	visibility private 
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	classrelation 394882 // <generalisation>
	  relation 393986 ---|>
	    a public
	      cpp default "${type}"
	      java "${type}"
	      classrelation_ref 394882 // <generalisation>
	    b parent class_ref 311810 // Stub
	end

	attribute 1204354 "mHandler"
	  const_attribute package explicit_type "Handler"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	classrelation 395010 // mAppObserver (<unidirectional association>)
	  relation 394114 --->
	    a role_name "mAppObserver" const_relation package
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 395010 // mAppObserver (<unidirectional association>)
	    b parent class_ref 310402 // RestoreObserver
	end

	attribute 1204482 "MSG_RESTORE_STARTING"
	  class_attribute const_attribute package explicit_type "int"
	  init_value " 1"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 1204610 "MSG_UPDATE"
	  class_attribute const_attribute package explicit_type "int"
	  init_value " 2"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 1204738 "MSG_RESTORE_FINISHED"
	  class_attribute const_attribute package explicit_type "int"
	  init_value " 3"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 1204866 "MSG_RESTORE_SETS_AVAILABLE"
	  class_attribute const_attribute package explicit_type "int"
	  init_value " 4"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	operation 1813890 "RestoreObserverWrapper"
	  package explicit_return_type ""
	  nparams 2
	    param inout name "context" explicit_type "Context"
	    param inout name "appObserver" type class_ref 310402 // RestoreObserver
	  cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	  cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 1814018 "restoreSetsAvailable"
	  public explicit_return_type "void"
	  nparams 1
	    param inout name "result" type class_ref 310786 // RestoreSet
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment " Binder calls into this object just enqueue on the main-thread handler"
	end

	operation 1814146 "restoreStarting"
	  public explicit_return_type "void"
	  nparams 1
	    param in name "numPackages" explicit_type "int"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 1814274 "onUpdate"
	  public explicit_return_type "void"
	  nparams 2
	    param in name "nowBeingRestored" explicit_type "int"
	    param in name "currentPackage" explicit_type "String"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 1814402 "restoreFinished"
	  public explicit_return_type "void"
	  nparams 1
	    param in name "error" explicit_type "int"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      classrelation 394754 // mObserver (<unidirectional association>)
	relation 393858 --->
	  a role_name "mObserver" init_value " null" package
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 394754 // mObserver (<unidirectional association>)
	  b parent class_ref 311682 // RestoreObserverWrapper
      end

      operation 1813122 "getAvailableRestoreSets"
	public explicit_return_type "int"
	nparams 1
	  param inout name "observer" type class_ref 310402 // RestoreObserver
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Ask the current transport what the available restore sets are.

@param observer a RestoreObserver object whose restoreSetsAvailable() method will
  be called on the application's main thread in order to supply the results of
  the restore set lookup by the backup transport.  This parameter must not be
  null.
@return Zero on success, nonzero on error.  The observer's restoreSetsAvailable()
  method will only be called if this method returned zero."
      end

      operation 1813250 "restoreAll"
	public explicit_return_type "int"
	nparams 2
	  param in name "token" explicit_type "long"
	  param inout name "observer" type class_ref 310402 // RestoreObserver
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Restore the given set onto the device, replacing the current data of any app
contained in the restore set with the data previously backed up.

<p>Callers must hold the android.permission.BACKUP permission to use this method.

@return Zero on success; nonzero on error.  The observer will only receive
  progress callbacks if this method returned zero.
@param token The token from {@link #getAvailableRestoreSets()} corresponding to
  the restore set that should be used.
@param observer If non-null, this binder points to an object that will receive
  progress callbacks during the restore operation."
      end

      operation 1813378 "restoreSome"
	public explicit_return_type "int"
	nparams 3
	  param in name "token" explicit_type "long"
	  param inout name "observer" type class_ref 310402 // RestoreObserver
	  param inout name "packages" explicit_type "String"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2}[] ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Restore select packages from the given set onto the device, replacing the
current data of any app contained in the set with the data previously
backed up.

<p>Callers must hold the android.permission.BACKUP permission to use this method.

@return Zero on success, nonzero on error. The observer will only receive
  progress callbacks if this method returned zero.
@param token The token from {@link getAvailableRestoreSets()} corresponding to
  the restore set that should be used.
@param observer If non-null, this binder points to an object that will receive
  progress callbacks during the restore operation.
@param packages The set of packages for which to attempt a restore.  Regardless of
  the contents of the actual back-end dataset named by {@code token}, only
  applications mentioned in this list will have their data restored.

@hide"
      end

      operation 1813506 "restorePackage"
	public explicit_return_type "int"
	nparams 2
	  param in name "packageName" explicit_type "String"
	  param inout name "observer" type class_ref 310402 // RestoreObserver
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Restore a single application from backup.  The data will be restored from the
current backup dataset if the given package has stored data there, or from
the dataset used during the last full device setup operation if the current
backup dataset has no matching data.  If no backup data exists for this package
in either source, a nonzero value will be returned.

@return Zero on success; nonzero on error.  The observer will only receive
  progress callbacks if this method returned zero.
@param packageName The name of the package whose data to restore.  If this is
  not the name of the caller's own package, then the android.permission.BACKUP
  permission must be held.
@param observer If non-null, this binder points to an object that will receive
  progress callbacks during the restore operation."
      end

      operation 1813634 "endRestoreSession"
	public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "End this restore session.  After this method is called, the RestoreSession
object is no longer valid.

<p><b>Note:</b> The caller <i>must</i> invoke this method to end the restore session,
  even if {@link #restorePackage(String, RestoreObserver)} failed."
      end

      operation 1813762 "RestoreSession"
	package explicit_return_type ""
	nparams 2
	  param inout name "context" explicit_type "Context"
	  param inout name "binder" explicit_type "IRestoreSession"
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Nonpublic implementation here"
      end
    end

    class 310658 "BackupTransport"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      java_annotation "@SystemApi
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Concrete class that provides a stable-API bridge between IBackupTransport
and its implementations.

@hide"
      attribute 1199618 "TRANSPORT_OK"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Zero return always means things are okay.  If returned from
 getNextFullRestoreDataChunk(), it means that no data could be delivered at
 this time, but the restore is still running and the caller should simply
 retry."
      end

      attribute 1199746 "NO_MORE_DATA"
	class_attribute const_attribute public explicit_type "int"
	init_value " -1"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " -1 is special; it is used in getNextFullRestoreDataChunk() to indicate that
 we've delivered the entire data stream for the current restore target."
      end

      attribute 1199874 "TRANSPORT_ERROR"
	class_attribute const_attribute public explicit_type "int"
	init_value " -1000"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Result codes that indicate real errors are negative and not -1"
      end

      attribute 1200002 "TRANSPORT_NOT_INITIALIZED"
	class_attribute const_attribute public explicit_type "int"
	init_value " -1001"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 1200130 "TRANSPORT_PACKAGE_REJECTED"
	class_attribute const_attribute public explicit_type "int"
	init_value " -1002"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 1200258 "AGENT_ERROR"
	class_attribute const_attribute public explicit_type "int"
	init_value " -1003"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 1200386 "AGENT_UNKNOWN"
	class_attribute const_attribute public explicit_type "int"
	init_value " -1004"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 1200514 "mBinderImpl"
	package explicit_type "IBackupTransport"
	init_value " new TransportImpl()"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      operation 1804546 "getBinder"
	public explicit_return_type "IBinder"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1804674 "name"
	public explicit_return_type "String"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " ------------------------------------------------------------------------------------
 Transport self-description and general configuration interfaces


Ask the transport for the name under which it should be registered.  This will
typically be its host service's component name, but need not be."
      end

      operation 1804802 "configurationIntent"
	public explicit_return_type "Intent"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Ask the transport for an Intent that can be used to launch any internal
configuration Activity that it wishes to present.  For example, the transport
may offer a UI for allowing the user to supply login credentials for the
transport's off-device backend.

<p>If the transport does not supply any user-facing configuration UI, it should
return {@code null} from this method.

@return An Intent that can be passed to Context.startActivity() in order to
        launch the transport's configuration UI.  This method will return {@code null}
        if the transport does not offer any user-facing configuration UI."
      end

      operation 1804930 "currentDestinationString"
	public explicit_return_type "String"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "On demand, supply a one-line string that can be shown to the user that
describes the current backend destination.  For example, a transport that
can potentially associate backup data with arbitrary user accounts should
include the name of the currently-active account here.

@return A string describing the destination to which the transport is currently
        sending data.  This method should not return null."
      end

      operation 1805058 "dataManagementIntent"
	public explicit_return_type "Intent"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Ask the transport for an Intent that can be used to launch a more detailed
secondary data management activity.  For example, the configuration intent might
be one for allowing the user to select which account they wish to associate
their backups with, and the management intent might be one which presents a
UI for managing the data on the backend.

<p>In the Settings UI, the configuration intent will typically be invoked
when the user taps on the preferences item labeled with the current
destination string, and the management intent will be placed in an overflow
menu labelled with the management label string.

<p>If the transport does not supply any user-facing data management
UI, then it should return {@code null} from this method.

@return An intent that can be passed to Context.startActivity() in order to
        launch the transport's data-management UI.  This method will return
        {@code null} if the transport does not offer any user-facing data
        management UI."
      end

      operation 1805186 "dataManagementLabel"
	public explicit_return_type "String"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "On demand, supply a short string that can be shown to the user as the label
on an overflow menu item used to invoked the data management UI.

@return A string to be used as the label for the transport's data management
        affordance.  If the transport supplies a data management intent, this
        method must not return {@code null}."
      end

      operation 1805314 "transportDirName"
	public explicit_return_type "String"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Ask the transport where, on local device storage, to keep backup state blobs.
This is per-transport so that mock transports used for testing can coexist with
\"live\" backup services without interfering with the live bookkeeping.  The
returned string should be a name that is expected to be unambiguous among all
available backup transports; the name of the class implementing the transport
is a good choice.

@return A unique name, suitable for use as a file or directory name, that the
        Backup Manager could use to disambiguate state files associated with
        different backup transports."
      end

      operation 1805442 "initializeDevice"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " ------------------------------------------------------------------------------------
 Device-level operations common to both key/value and full-data storage

Initialize the server side storage for this device, erasing all stored data.
The transport may send the request immediately, or may buffer it.  After
this is called, {@link #finishBackup} will be called to ensure the request
is sent and received successfully.

@return One of {@link BackupTransport#TRANSPORT_OK} (OK so far) or
  {@link BackupTransport#TRANSPORT_ERROR} (on network error or other failure)."
      end

      operation 1805570 "clearBackupData"
	public explicit_return_type "int"
	nparams 1
	  param inout name "packageInfo" explicit_type "PackageInfo"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Erase the given application's data from the backup destination.  This clears
out the given package's data from the current backup set, making it as though
the app had never yet been backed up.  After this is called, {@link finishBackup}
must be called to ensure that the operation is recorded successfully.

@return the same error codes as {@link #performBackup}."
      end

      operation 1805698 "finishBackup"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Finish sending application data to the backup destination.  This must be
called after {@link #performBackup}, {@link #performFullBackup}, or {@link clearBackupData}
to ensure that all data is sent and the operation properly finalized.  Only when this
method returns true can a backup be assumed to have succeeded.

@return the same error codes as {@link #performBackup} or {@link #performFullBackup}."
      end

      operation 1805826 "requestBackupTime"
	public explicit_return_type "long"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " ------------------------------------------------------------------------------------
 Key/value incremental backup support interfaces

Verify that this is a suitable time for a key/value backup pass.  This should return zero
if a backup is reasonable right now, some positive value otherwise.  This method
will be called outside of the {@link #performBackup}/{@link #finishBackup} pair.

<p>If this is not a suitable time for a backup, the transport should return a
backoff delay, in milliseconds, after which the Backup Manager should try again.

@return Zero if this is a suitable time for a backup pass, or a positive time delay
  in milliseconds to suggest deferring the backup pass for a while."
      end

      operation 1805954 "performBackup"
	public explicit_return_type "int"
	nparams 2
	  param inout name "packageInfo" explicit_type "PackageInfo"
	  param inout name "inFd" explicit_type "ParcelFileDescriptor"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Send one application's key/value data update to the backup destination.  The
transport may send the data immediately, or may buffer it.  After this is called,
{@link #finishBackup} will be called to ensure the data is sent and recorded successfully.

@param packageInfo The identity of the application whose data is being backed up.
  This specifically includes the signature list for the package.
@param data The data stream that resulted from invoking the application's
  BackupService.doBackup() method.  This may be a pipe rather than a file on
  persistent media, so it may not be seekable.
@param wipeAllFirst When true, <i>all</i> backed-up data for the current device/account
  must be erased prior to the storage of the data provided here.  The purpose of this
  is to provide a guarantee that no stale data exists in the restore set when the
  device begins providing incremental backups.
@return one of {@link BackupTransport#TRANSPORT_OK} (OK so far),
 {@link BackupTransport#TRANSPORT_ERROR} (on network error or other failure), or
 {@link BackupTransport#TRANSPORT_NOT_INITIALIZED} (if the backend dataset has
 become lost due to inactivity purge or some other reason and needs re-initializing)"
      end

      operation 1806082 "getAvailableRestoreSets"
	public return_type class_ref 310786 // RestoreSet
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " ------------------------------------------------------------------------------------
 Key/value dataset restore interfaces

Get the set of all backups currently available over this transport.

@return Descriptions of the set of restore images available for this device,
  or null if an error occurred (the attempt should be rescheduled)."
      end

      operation 1806210 "getCurrentRestoreSet"
	public explicit_return_type "long"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get the identifying token of the backup set currently being stored from
this device.  This is used in the case of applications wishing to restore
their last-known-good data.

@return A token that can be passed to {@link #startRestore}, or 0 if there
  is no backup set available corresponding to the current device state."
      end

      operation 1806338 "startRestore"
	public explicit_return_type "int"
	nparams 2
	  param in name "token" explicit_type "long"
	  param inout name "packages" explicit_type "PackageInfo"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1}[] ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Start restoring application data from backup.  After calling this function,
alternate calls to {@link #nextRestorePackage} and {@link #nextRestoreData}
to walk through the actual application data.

@param token A backup token as returned by {@link #getAvailableRestoreSets}
  or {@link #getCurrentRestoreSet}.
@param packages List of applications to restore (if data is available).
  Application data will be restored in the order given.
@return One of {@link BackupTransport#TRANSPORT_OK} (OK so far, call
  {@link #nextRestorePackage}) or {@link BackupTransport#TRANSPORT_ERROR}
  (an error occurred, the restore should be aborted and rescheduled)."
      end

      operation 1806466 "nextRestorePackage"
	public return_type class_ref 310914 // RestoreDescription
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get the package name of the next application with data in the backup store, plus
a description of the structure of the restored archive: either TYPE_KEY_VALUE for
an original-API key/value dataset, or TYPE_FULL_STREAM for a tarball-type archive stream.

<p>If the package name in the returned RestoreDescription object is the singleton
{@link RestoreDescription#NO_MORE_PACKAGES}, it indicates that no further data is available
in the current restore session: all packages described in startRestore() have been
processed.

<p>If this method returns {@code null}, it means that a transport-level error has
occurred and the entire restore operation should be abandoned.

<p class=\"note\">The OS may call {@link #nextRestorePackage()} multiple times
before calling either {@link #getRestoreData(ParcelFileDescriptor) getRestoreData()}
or {@link #getNextFullRestoreDataChunk(ParcelFileDescriptor) getNextFullRestoreDataChunk()}.
It does this when it has determined that it needs to skip restore of one or more
packages.  The transport should not actually transfer any restore data for
the given package in response to {@link #nextRestorePackage()}, but rather wait
for an explicit request before doing so.

@return A RestoreDescription object containing the name of one of the packages
  supplied to {@link #startRestore} plus an indicator of the data type of that
  restore data; or {@link RestoreDescription#NO_MORE_PACKAGES} to indicate that
  no more packages can be restored in this session; or {@code null} to indicate
  a transport-level error."
      end

      operation 1806594 "getRestoreData"
	public explicit_return_type "int"
	nparams 1
	  param inout name "outFd" explicit_type "ParcelFileDescriptor"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get the data for the application returned by {@link #nextRestorePackage}, if that
method reported {@link RestoreDescription#TYPE_KEY_VALUE} as its delivery type.
If the package has only TYPE_FULL_STREAM data, then this method will return an
error.

@param data An open, writable file into which the key/value backup data should be stored.
@return the same error codes as {@link #startRestore}."
      end

      operation 1806722 "finishRestore"
	public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "End a restore session (aborting any in-process data transfer as necessary),
freeing any resources and connections used during the restore process."
      end

      operation 1806850 "requestFullBackupTime"
	public explicit_return_type "long"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " ------------------------------------------------------------------------------------
 Full backup interfaces

Verify that this is a suitable time for a full-data backup pass.  This should return zero
if a backup is reasonable right now, some positive value otherwise.  This method
will be called outside of the {@link #performFullBackup}/{@link #finishBackup} pair.

<p>If this is not a suitable time for a backup, the transport should return a
backoff delay, in milliseconds, after which the Backup Manager should try again.

@return Zero if this is a suitable time for a backup pass, or a positive time delay
  in milliseconds to suggest deferring the backup pass for a while.

@see #requestBackupTime()"
      end

      operation 1806978 "performFullBackup"
	public explicit_return_type "int"
	nparams 2
	  param inout name "targetPackage" explicit_type "PackageInfo"
	  param inout name "socket" explicit_type "ParcelFileDescriptor"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Begin the process of sending an application's full-data archive to the backend.
The description of the package whose data will be delivered is provided, as well as
the socket file descriptor on which the transport will receive the data itself.

<p>If the package is not eligible for backup, the transport should return
{@link BackupTransport#TRANSPORT_PACKAGE_REJECTED}.  In this case the system will
simply proceed with the next candidate if any, or finish the full backup operation
if all apps have been processed.

<p>After the transport returns {@link BackupTransport#TRANSPORT_OK} from this
method, the OS will proceed to call {@link #sendBackupData()} one or more times
to deliver the application's data as a streamed tarball.  The transport should not
read() from the socket except as instructed to via the {@link #sendBackupData(int)}
method.

<p>After all data has been delivered to the transport, the system will call
{@link #finishBackup()}.  At this point the transport should commit the data to
its datastore, if appropriate, and close the socket that had been provided in
{@link #performFullBackup(PackageInfo, ParcelFileDescriptor)}.

<p class=\"note\">If the transport returns TRANSPORT_OK from this method, then the
OS will always provide a matching call to {@link #finishBackup()} even if sending
data via {@link #sendBackupData(int)} failed at some point.

@param targetPackage The package whose data is to follow.
@param socket The socket file descriptor through which the data will be provided.
   If the transport returns {@link #TRANSPORT_PACKAGE_REJECTED} here, it must still
   close this file descriptor now; otherwise it should be cached for use during
   succeeding calls to {@link #sendBackupData(int)}, and closed in response to
   {@link #finishBackup()}.
@return TRANSPORT_PACKAGE_REJECTED to indicate that the stated application is not
   to be backed up; TRANSPORT_OK to indicate that the OS may proceed with delivering
   backup data; TRANSPORT_ERROR to indicate a fatal error condition that precludes
   performing a backup at this time."
      end

      operation 1807106 "sendBackupData"
	public explicit_return_type "int"
	nparams 1
	  param in name "numBytes" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Tells the transport to read {@code numBytes} bytes of data from the socket file
descriptor provided in the {@link #performFullBackup(PackageInfo, ParcelFileDescriptor)}
call, and deliver those bytes to the datastore.

@param numBytes The number of bytes of tarball data available to be read from the
   socket.
@return TRANSPORT_OK on successful processing of the data; TRANSPORT_ERROR to
   indicate a fatal error situation.  If an error is returned, the system will
   call finishBackup() and stop attempting backups until after a backoff and retry
   interval."
      end

      operation 1807234 "cancelFullBackup"
	public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Tells the transport to cancel the currently-ongoing full backup operation.  This
will happen between {@link #performFullBackup()} and {@link #finishBackup()}
if the OS needs to abort the backup operation for any reason, such as a crash in
the application undergoing backup.

<p>When it receives this call, the transport should discard any partial archive
that it has stored so far.  If possible it should also roll back to the previous
known-good archive in its datastore.

<p>If the transport receives this callback, it will <em>not</em> receive a
call to {@link #finishBackup()}.  It needs to tear down any ongoing backup state
here."
      end

      operation 1807362 "getNextFullRestoreDataChunk"
	public explicit_return_type "int"
	nparams 1
	  param inout name "socket" explicit_type "ParcelFileDescriptor"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " ------------------------------------------------------------------------------------
 Full restore interfaces

Ask the transport to provide data for the \"current\" package being restored.  This
is the package that was just reported by {@link #nextRestorePackage()} as having
{@link RestoreDescription#TYPE_FULL_STREAM} data.

The transport writes some data to the socket supplied to this call, and returns
the number of bytes written.  The system will then read that many bytes and
stream them to the application's agent for restore, then will call this method again
to receive the next chunk of the archive.  This sequence will be repeated until the
transport returns zero indicating that all of the package's data has been delivered
(or returns a negative value indicating some sort of hard error condition at the
transport level).

<p>After this method returns zero, the system will then call
{@link #getNextFullRestorePackage()} to begin the restore process for the next
application, and the sequence begins again.

<p>The transport should always close this socket when returning from this method.
Do not cache this socket across multiple calls or you may leak file descriptors.

@param socket The file descriptor that the transport will use for delivering the
   streamed archive.  The transport must close this socket in all cases when returning
   from this method.
@return {@link #NO_MORE_DATA} when no more data for the current package is available.
   A positive value indicates the presence of that many bytes to be delivered to the app.
   A value of zero indicates that no data was deliverable at this time, but the restore
   is still running and the caller should retry.  {@link #TRANSPORT_PACKAGE_REJECTED}
   means that the current package's restore operation should be aborted, but that
   the transport itself is still in a good state and so a multiple-package restore
   sequence can still be continued.  Any other negative return value is treated as a
   fatal error condition that aborts all further restore operations on the current dataset."
      end

      operation 1807490 "abortFullRestore"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "If the OS encounters an error while processing {@link RestoreDescription#TYPE_FULL_STREAM}
data for restore, it will invoke this method to tell the transport that it should
abandon the data download for the current package.  The OS will then either call
{@link #nextRestorePackage()} again to move on to restoring the next package in the
set being iterated over, or will call {@link #finishRestore()} to shut down the restore
operation.

@return {@link #TRANSPORT_OK} if the transport was successful in shutting down the
   current stream cleanly, or {@link #TRANSPORT_ERROR} to indicate a serious
   transport-level failure.  If the transport reports an error here, the entire restore
   operation will immediately be finished with no further attempts to restore app data."
      end

      class 311042 "TransportImpl"
	visibility package 
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	classrelation 393730 // <generalisation>
	  relation 392834 ---|>
	    a public
	      cpp default "${type}"
	      java "${type}"
	      classrelation_ref 393730 // <generalisation>
	    b parent class_ref 311170 // Stub
	end

	operation 1807618 "name"
	  public explicit_return_type "String"
	  nparams 0
	  nexceptions 1
	    explicit_exception "RemoteException"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 1807746 "configurationIntent"
	  public explicit_return_type "Intent"
	  nparams 0
	  nexceptions 1
	    explicit_exception "RemoteException"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 1807874 "currentDestinationString"
	  public explicit_return_type "String"
	  nparams 0
	  nexceptions 1
	    explicit_exception "RemoteException"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 1808002 "dataManagementIntent"
	  public explicit_return_type "Intent"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 1808130 "dataManagementLabel"
	  public explicit_return_type "String"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 1808258 "transportDirName"
	  public explicit_return_type "String"
	  nparams 0
	  nexceptions 1
	    explicit_exception "RemoteException"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 1808386 "requestBackupTime"
	  public explicit_return_type "long"
	  nparams 0
	  nexceptions 1
	    explicit_exception "RemoteException"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 1808514 "initializeDevice"
	  public explicit_return_type "int"
	  nparams 0
	  nexceptions 1
	    explicit_exception "RemoteException"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 1808642 "performBackup"
	  public explicit_return_type "int"
	  nparams 2
	    param inout name "packageInfo" explicit_type "PackageInfo"
	    param inout name "inFd" explicit_type "ParcelFileDescriptor"
	  nexceptions 1
	    explicit_exception "RemoteException"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 1808770 "clearBackupData"
	  public explicit_return_type "int"
	  nparams 1
	    param inout name "packageInfo" explicit_type "PackageInfo"
	  nexceptions 1
	    explicit_exception "RemoteException"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 1808898 "finishBackup"
	  public explicit_return_type "int"
	  nparams 0
	  nexceptions 1
	    explicit_exception "RemoteException"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 1809026 "getAvailableRestoreSets"
	  public return_type class_ref 310786 // RestoreSet
	  nparams 0
	  nexceptions 1
	    explicit_exception "RemoteException"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 1809154 "getCurrentRestoreSet"
	  public explicit_return_type "long"
	  nparams 0
	  nexceptions 1
	    explicit_exception "RemoteException"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 1809282 "startRestore"
	  public explicit_return_type "int"
	  nparams 2
	    param in name "token" explicit_type "long"
	    param inout name "packages" explicit_type "PackageInfo"
	  nexceptions 1
	    explicit_exception "RemoteException"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1}[] ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 1809410 "nextRestorePackage"
	  public return_type class_ref 310914 // RestoreDescription
	  nparams 0
	  nexceptions 1
	    explicit_exception "RemoteException"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 1809538 "getRestoreData"
	  public explicit_return_type "int"
	  nparams 1
	    param inout name "outFd" explicit_type "ParcelFileDescriptor"
	  nexceptions 1
	    explicit_exception "RemoteException"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 1809666 "finishRestore"
	  public explicit_return_type "void"
	  nparams 0
	  nexceptions 1
	    explicit_exception "RemoteException"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 1809794 "requestFullBackupTime"
	  public explicit_return_type "long"
	  nparams 0
	  nexceptions 1
	    explicit_exception "RemoteException"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 1809922 "performFullBackup"
	  public explicit_return_type "int"
	  nparams 2
	    param inout name "targetPackage" explicit_type "PackageInfo"
	    param inout name "socket" explicit_type "ParcelFileDescriptor"
	  nexceptions 1
	    explicit_exception "RemoteException"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 1810050 "sendBackupData"
	  public explicit_return_type "int"
	  nparams 1
	    param in name "numBytes" explicit_type "int"
	  nexceptions 1
	    explicit_exception "RemoteException"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 1810178 "cancelFullBackup"
	  public explicit_return_type "void"
	  nparams 0
	  nexceptions 1
	    explicit_exception "RemoteException"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 1810306 "getNextFullRestoreDataChunk"
	  public explicit_return_type "int"
	  nparams 1
	    param inout name "socket" explicit_type "ParcelFileDescriptor"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 1810434 "abortFullRestore"
	  public explicit_return_type "int"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end
      end
    end

    class 310786 "RestoreSet"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      java_annotation "@SystemApi
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Descriptive information about a set of backed-up app data available for restore.
Used by IRestoreSession clients.

@hide"
      classrelation 395138 // <realization>
	relation 394242 -_-|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 395138 // <realization>
	  b parent class_ref 203266 // Parcelable
      end

      attribute 1204994 "name"
	public explicit_type "String"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Name of this restore set.  May be user generated, may simply be the name
of the handset model, e.g. \"T-Mobile G1\".
"
      end

      attribute 1205122 "device"
	public explicit_type "String"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Identifier of the device whose data this is.  This will be as unique as
is practically possible; for example, it might be an IMEI.
"
      end

      attribute 1205250 "token"
	public explicit_type "long"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Token that identifies this backup set unambiguously to the backup/restore
transport.  This is guaranteed to be valid for the duration of a restore
session, but is meaningless once the session has ended.
"
      end

      operation 1814530 "RestoreSet"
	public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1814658 "RestoreSet"
	public explicit_return_type ""
	nparams 3
	  param in name "_name" explicit_type "String"
	  param in name "_dev" explicit_type "String"
	  param in name "_token" explicit_type "long"
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1814786 "describeContents"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Parcelable implementation"
      end

      operation 1814914 "writeToParcel"
	public explicit_return_type "void"
	nparams 2
	  param inout name "out" explicit_type "Parcel"
	  param in name "flags" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      classrelation 395266 // CREATOR (<unidirectional association>)
	relation 394370 --->
	  stereotype "Parcelable.Creator"
	  a role_name "CREATOR" init_value " new Parcelable.Creator<RestoreSet>() {
        public RestoreSet createFromParcel(Parcel in) {
            return new RestoreSet(in);
        }

        public RestoreSet[] newArray(int size) {
            return new RestoreSet[size];
        }
    }" class_relation const_relation public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${stereotype}<${type}> ${name}${value};
"
	    classrelation_ref 395266 // CREATOR (<unidirectional association>)
	  b parent class_ref 310786 // RestoreSet
      end

      operation 1815042 "RestoreSet"
	private explicit_return_type ""
	nparams 1
	  param inout name "in" explicit_type "Parcel"
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 310914 "RestoreDescription"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      java_annotation "@SystemApi
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Description of the available restore data for a given package.  Returned by a
BackupTransport in response to a request about the next available restorable
package.

@see BackupTransport#nextRestorePackage()

@hide"
      classrelation 394370 // <realization>
	relation 393474 -_-|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 394370 // <realization>
	  b parent class_ref 203266 // Parcelable
      end

      attribute 1203330 "mPackageName"
	const_attribute private explicit_type "String"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 1203458 "mDataType"
	const_attribute private explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 1203586 "NO_MORE_PACKAGES_SENTINEL"
	class_attribute const_attribute private explicit_type "String"
	init_value " \"\""
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 394498 // NO_MORE_PACKAGES (<unidirectional association>)
	relation 393602 --->
	  a role_name "NO_MORE_PACKAGES" init_value "
            new RestoreDescription(NO_MORE_PACKAGES_SENTINEL, 0)" class_relation const_relation public
	    comment "
Return this constant RestoreDescription from BackupTransport.nextRestorePackage()
to indicate that no more package data is available in the current restore operation.

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 394498 // NO_MORE_PACKAGES (<unidirectional association>)
	  b parent class_ref 310914 // RestoreDescription
      end

      attribute 1203714 "TYPE_KEY_VALUE"
	class_attribute const_attribute public explicit_type "int"
	init_value " 1"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " ---------------------------------------
 Data type identifiers
 This package's restore data is an original-style key/value dataset "
      end

      attribute 1203842 "TYPE_FULL_STREAM"
	class_attribute const_attribute public explicit_type "int"
	init_value " 2"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " This package's restore data is a tarball-type full data stream "
      end

      operation 1811714 "toString"
	public explicit_return_type "String"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 1811842 "RestoreDescription"
	public explicit_return_type ""
	nparams 2
	  param in name "packageName" explicit_type "String"
	  param in name "dataType" explicit_type "int"
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " ---------------------------------------
 API"
      end

      operation 1811970 "getPackageName"
	public explicit_return_type "String"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1812098 "getDataType"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1812226 "describeContents"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment " ---------------------------------------
 Parcelable implementation - not used by transport"
      end

      operation 1812354 "writeToParcel"
	public explicit_return_type "void"
	nparams 2
	  param inout name "out" explicit_type "Parcel"
	  param in name "flags" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      classrelation 394626 // CREATOR (<unidirectional association>)
	relation 393730 --->
	  stereotype "Parcelable.Creator"
	  a role_name "CREATOR" init_value " new Parcelable.Creator<RestoreDescription>() {
        public RestoreDescription createFromParcel(Parcel in) {
            final RestoreDescription unparceled = new RestoreDescription(in);
            return (NO_MORE_PACKAGES_SENTINEL.equals(unparceled.mPackageName))
                    ? NO_MORE_PACKAGES
                    : unparceled;
        }

        public RestoreDescription[] newArray(int size) {
            return new RestoreDescription[size];
        }
    }" class_relation const_relation public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${stereotype}<${type}> ${name}${value};
"
	    classrelation_ref 394626 // CREATOR (<unidirectional association>)
	  b parent class_ref 310914 // RestoreDescription
      end

      operation 1812482 "RestoreDescription"
	private explicit_return_type ""
	nparams 1
	  param inout name "in" explicit_type "Parcel"
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 311298 "FileBackupHelper"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "A helper class that can be used in conjunction with
{@link android.app.backup.BackupAgentHelper} to manage the backup of a set of
files. Whenever backup is performed, all files changed since the last backup
will be saved in their entirety. When backup first occurs,
every file in the list provided to {@link #FileBackupHelper} will be backed up.
<p>
During restore, if the helper encounters data for a file that was not
specified when the FileBackupHelper object was constructed, that data
will be ignored.
<p class=\"note\"><strong>Note:</strong> This should be
used only with small configuration files, not large binary files."
      classrelation 393858 // <generalisation>
	relation 392962 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 393858 // <generalisation>
	  b parent class_ref 308354 // FileBackupHelperBase
      end

      classrelation 393986 // <realization>
	relation 393090 -_-|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 393986 // <realization>
	  b parent class_ref 308738 // BackupHelper
      end

      attribute 1200642 "TAG"
	class_attribute const_attribute private explicit_type "String"
	init_value " \"FileBackupHelper\""
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 1200770 "DEBUG"
	class_attribute const_attribute private explicit_type "boolean"
	init_value " false"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 1200898 "mContext"
	package explicit_type "Context"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 1201026 "mFilesDir"
	package explicit_type "File"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 1201154 "mFiles"
	package explicit_type "String"
	multiplicity "[]"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      operation 1810562 "FileBackupHelper"
	public explicit_return_type ""
	nparams 2
	  param inout name "context" explicit_type "Context"
	  param inout name "" explicit_type "String...files"
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Construct a helper to manage backup/restore of entire files within the
application's data directory hierarchy.

@param context The backup agent's Context object
@param files A list of the files to be backed up or restored."
      end

      operation 1810690 "performBackup"
	public explicit_return_type "void"
	nparams 3
	  param inout name "oldState" explicit_type "ParcelFileDescriptor"
	  param inout name "data" type class_ref 308482 // BackupDataOutput
	  param inout name "newState" explicit_type "ParcelFileDescriptor"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Based on <code>oldState</code>, determine which of the files from the
application's data directory need to be backed up, write them to the data
stream, and fill in <code>newState</code> with the state as it exists
now. When <code>oldState</code> is <code>null</code>, all the files will
be backed up.
<p>
This should only be called directly from within the {@link BackupAgentHelper}
implementation. See
{@link android.app.backup.BackupAgent#onBackup(ParcelFileDescriptor, BackupDataOutput, ParcelFileDescriptor)}
for a description of parameter meanings."
      end

      operation 1810818 "restoreEntity"
	public explicit_return_type "void"
	nparams 1
	  param inout name "data" type class_ref 308610 // BackupDataInputStream
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Restore one record [representing a single file] from the restore dataset.
<p>
This should only be called directly from within the {@link BackupAgentHelper}
implementation."
      end
    end

    class 311426 "FullBackup"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Global constant definitions et cetera related to the full-backup-to-fd
binary format.  Nothing in this namespace is part of any API; it's all
hidden details of the current implementation gathered into one location.

@hide"
      attribute 1201282 "TAG"
	class_attribute const_attribute package explicit_type "String"
	init_value " \"FullBackup\""
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 1201410 "APK_TREE_TOKEN"
	class_attribute const_attribute public explicit_type "String"
	init_value " \"a\""
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 1201538 "OBB_TREE_TOKEN"
	class_attribute const_attribute public explicit_type "String"
	init_value " \"obb\""
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 1201666 "ROOT_TREE_TOKEN"
	class_attribute const_attribute public explicit_type "String"
	init_value " \"r\""
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 1201794 "DATA_TREE_TOKEN"
	class_attribute const_attribute public explicit_type "String"
	init_value " \"f\""
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 1201922 "NO_BACKUP_TREE_TOKEN"
	class_attribute const_attribute public explicit_type "String"
	init_value " \"nb\""
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 1202050 "DATABASE_TREE_TOKEN"
	class_attribute const_attribute public explicit_type "String"
	init_value " \"db\""
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 1202178 "SHAREDPREFS_TREE_TOKEN"
	class_attribute const_attribute public explicit_type "String"
	init_value " \"sp\""
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 1202306 "MANAGED_EXTERNAL_TREE_TOKEN"
	class_attribute const_attribute public explicit_type "String"
	init_value " \"ef\""
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 1202434 "CACHE_TREE_TOKEN"
	class_attribute const_attribute public explicit_type "String"
	init_value " \"c\""
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 1202562 "SHARED_STORAGE_TOKEN"
	class_attribute const_attribute public explicit_type "String"
	init_value " \"shared\""
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 1202690 "APPS_PREFIX"
	class_attribute const_attribute public explicit_type "String"
	init_value " \"apps/\""
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 1202818 "SHARED_PREFIX"
	class_attribute const_attribute public explicit_type "String"
	init_value " SHARED_STORAGE_TOKEN + \"/\""
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 1202946 "FULL_BACKUP_INTENT_ACTION"
	class_attribute const_attribute public explicit_type "String"
	init_value " \"fullback\""
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 1203074 "FULL_RESTORE_INTENT_ACTION"
	class_attribute const_attribute public explicit_type "String"
	init_value " \"fullrest\""
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 1203202 "CONF_TOKEN_INTENT_EXTRA"
	class_attribute const_attribute public explicit_type "String"
	init_value " \"conftoken\""
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      operation 1810946 "backupToTar"
	class_operation public explicit_return_type "int"
	nparams 6
	  param in name "packageName" explicit_type "String"
	  param in name "domain" explicit_type "String"
	  param in name "linkdomain" explicit_type "String"
	  param in name "rootpath" explicit_type "String"
	  param in name "path" explicit_type "String"
	  param inout name "output" type class_ref 308482 // BackupDataOutput
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}${)}${throws};
"
	
	
	
	comment "@hide"
      end

      operation 1811074 "restoreFile"
	class_operation public explicit_return_type "void"
	nparams 6
	  param inout name "data" explicit_type "ParcelFileDescriptor"
	  param in name "size" explicit_type "long"
	  param in name "type" explicit_type "int"
	  param in name "mode" explicit_type "long"
	  param in name "mtime" explicit_type "long"
	  param inout name "outFile" explicit_type "File"
	nexceptions 1
	  explicit_exception "IOException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Copy data from a socket to the given File location on permanent storage.  The
modification time and access mode of the resulting file will be set if desired,
although group/all rwx modes will be stripped: the restored file will not be
accessible from outside the target application even if the original file was.
If the {@code type} parameter indicates that the result should be a directory,
the socket parameter may be {@code null}; even if it is valid, no data will be
read from it in this case.
<p>
If the {@code mode} argument is negative, then the resulting output file will not
have its access mode or last modification time reset as part of this operation.

@param data Socket supplying the data to be copied to the output file.  If the
   output is a directory, this may be {@code null}.
@param size Number of bytes of data to copy from the socket to the file.  At least
   this much data must be available through the {@code data} parameter.
@param type Must be either {@link BackupAgent#TYPE_FILE} for ordinary file data
   or {@link BackupAgent#TYPE_DIRECTORY} for a directory.
@param mode Unix-style file mode (as used by the chmod(2) syscall) to be set on
   the output file or directory.  group/all rwx modes are stripped even if set
   in this parameter.  If this parameter is negative then neither
   the mode nor the mtime values will be applied to the restored file.
@param mtime A timestamp in the standard Unix epoch that will be imposed as the
   last modification time of the output file.  if the {@code mode} parameter is
   negative then this parameter will be ignored.
@param outFile Location within the filesystem to place the data.  This must point
   to a location that is writeable by the caller, preferably using an absolute path.
@throws IOException"
      end
    end

    class 311554 "FullBackupAgent"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Simple concrete class that merely provides the default BackupAgent full backup/restore
implementations for applications that do not supply their own.

{@hide}"
      classrelation 394114 // <generalisation>
	relation 393218 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 394114 // <generalisation>
	  b parent class_ref 279938 // BackupAgent
      end

      operation 1811202 "onBackup"
	public explicit_return_type "void"
	nparams 3
	  param inout name "oldState" explicit_type "ParcelFileDescriptor"
	  param inout name "data" type class_ref 308482 // BackupDataOutput
	  param inout name "newState" explicit_type "ParcelFileDescriptor"
	nexceptions 1
	  explicit_exception "IOException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 1811330 "onRestore"
	public explicit_return_type "void"
	nparams 3
	  param inout name "data" type class_ref 308994 // BackupDataInput
	  param in name "appVersionCode" explicit_type "int"
	  param inout name "newState" explicit_type "ParcelFileDescriptor"
	nexceptions 1
	  explicit_exception "IOException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end
    end

    class 311938 "SharedPreferencesBackupHelper"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "A helper class that can be used in conjunction with
{@link android.app.backup.BackupAgentHelper} to manage the backup of
{@link android.content.SharedPreferences}. Whenever a backup is performed, it
will back up all named shared preferences that have changed since the last
backup operation.
<p>
To use this class, the application's backup agent class should extend
{@link android.app.backup.BackupAgentHelper}.  Then, in the agent's
{@link BackupAgent#onCreate()} method, an instance of this class should be
allocated and installed as a backup/restore handler within the BackupAgentHelper
framework.  For example, an agent supporting backup and restore for
an application with two groups of {@link android.content.SharedPreferences}
data might look something like this:
<pre>
import android.app.backup.BackupAgentHelper;
import android.app.backup.SharedPreferencesBackupHelper;

public class MyBackupAgent extends BackupAgentHelper {
    // The names of the SharedPreferences groups that the application maintains.  These
    // are the same strings that are passed to {@link Context#getSharedPreferences(String, int)}.
    static final String PREFS_DISPLAY = \"displayprefs\";
    static final String PREFS_SCORES = \"highscores\";

    // An arbitrary string used within the BackupAgentHelper implementation to
    // identify the SharedPreferenceBackupHelper's data.
    static final String MY_PREFS_BACKUP_KEY = \"myprefs\";

    // Simply allocate a helper and install it
    void onCreate() {
        SharedPreferencesBackupHelper helper =
                new SharedPreferencesBackupHelper(this, PREFS_DISPLAY, PREFS_SCORES);
        addHelper(MY_PREFS_BACKUP_KEY, helper);
    }
}</pre>
<p>
No further implementation is needed; the {@link BackupAgentHelper} mechanism automatically
dispatches the
{@link BackupAgent#onBackup(android.os.ParcelFileDescriptor, BackupDataOutput, android.os.ParcelFileDescriptor) BackupAgent.onBackup()}
and
{@link BackupAgent#onRestore(BackupDataInput, int, android.os.ParcelFileDescriptor) BackupAgent.onRestore()}
callbacks to the SharedPreferencesBackupHelper as appropriate."
      classrelation 395394 // <generalisation>
	relation 394498 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 395394 // <generalisation>
	  b parent class_ref 308354 // FileBackupHelperBase
      end

      classrelation 395522 // <realization>
	relation 394626 -_-|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 395522 // <realization>
	  b parent class_ref 308738 // BackupHelper
      end

      attribute 1205378 "TAG"
	class_attribute const_attribute private explicit_type "String"
	init_value " \"SharedPreferencesBackupHelper\""
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 1205506 "DEBUG"
	class_attribute const_attribute private explicit_type "boolean"
	init_value " false"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 1205634 "mContext"
	private explicit_type "Context"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 1205762 "mPrefGroups"
	private explicit_type "String"
	multiplicity "[]"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      operation 1815170 "SharedPreferencesBackupHelper"
	public explicit_return_type ""
	nparams 2
	  param inout name "context" explicit_type "Context"
	  param inout name "" explicit_type "String...prefGroups"
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Construct a helper for backing up and restoring the
{@link android.content.SharedPreferences} under the given names.

@param context The application {@link android.content.Context}
@param prefGroups The names of each {@link android.content.SharedPreferences} file to
back up"
      end

      operation 1815298 "performBackup"
	public explicit_return_type "void"
	nparams 3
	  param inout name "oldState" explicit_type "ParcelFileDescriptor"
	  param inout name "data" type class_ref 308482 // BackupDataOutput
	  param inout name "newState" explicit_type "ParcelFileDescriptor"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Backs up the configured {@link android.content.SharedPreferences} groups."
      end

      operation 1815426 "restoreEntity"
	public explicit_return_type "void"
	nparams 1
	  param inout name "data" type class_ref 308610 // BackupDataInputStream
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Restores one entity from the restore data stream to its proper shared
preferences file store."
      end
    end

    class 312066 "WallpaperBackupHelper"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Helper for backing up / restoring wallpapers.  Basically an AbsoluteFileBackupHelper,
but with logic for deciding what to do with restored wallpaper images.

@hide"
      classrelation 395650 // <generalisation>
	relation 394754 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 395650 // <generalisation>
	  b parent class_ref 308354 // FileBackupHelperBase
      end

      classrelation 395778 // <realization>
	relation 394882 -_-|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 395778 // <realization>
	  b parent class_ref 308738 // BackupHelper
      end

      attribute 1205890 "TAG"
	class_attribute const_attribute private explicit_type "String"
	init_value " \"WallpaperBackupHelper\""
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 1206018 "DEBUG"
	class_attribute const_attribute private explicit_type "boolean"
	init_value " false"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 1206146 "REJECT_OUTSIZED_RESTORE"
	class_attribute const_attribute private explicit_type "boolean"
	init_value " true"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " If 'true', then apply an acceptable-size heuristic at restore time, dropping back
 to the factory default wallpaper if the restored one differs \"too much\" from the
 device's preferred wallpaper image dimensions."
      end

      attribute 1206274 "MAX_HEIGHT_RATIO"
	class_attribute const_attribute private explicit_type "double"
	init_value " 1.35"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " When outsized restore rejection is enabled, this is the maximum ratio between the
 source and target image heights that will be permitted.  The ratio is checked both
 ways (i.e. >= MAX, or <= 1/MAX) to validate restores from both largeer-than-target
 and smaller-than-target sources."
      end

      attribute 1206402 "MIN_HEIGHT_RATIO"
	class_attribute const_attribute private explicit_type "double"
	init_value " 0"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " The height ratio check when applying larger images on smaller screens is separate;
 in current policy we accept any such restore regardless of the relative dimensions."
      end

      attribute 1206530 "WALLPAPER_IMAGE"
	class_attribute const_attribute public explicit_type "String"
	init_value "
            new File(Environment.getUserSystemDirectory(UserHandle.USER_OWNER),
                    \"wallpaper\").getAbsolutePath()"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " This path must match what the WallpaperManagerService uses
 TODO: Will need to change if backing up non-primary user's wallpaper"
      end

      attribute 1206658 "WALLPAPER_INFO"
	class_attribute const_attribute public explicit_type "String"
	init_value "
            new File(Environment.getUserSystemDirectory(UserHandle.USER_OWNER),
                    \"wallpaper_info.xml\").getAbsolutePath()"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 1206786 "WALLPAPER_IMAGE_KEY"
	class_attribute const_attribute public explicit_type "String"
	init_value "
            \"/data/data/com.android.settings/files/wallpaper\""
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Use old keys to keep legacy data compatibility and avoid writing two wallpapers"
      end

      attribute 1206914 "WALLPAPER_INFO_KEY"
	class_attribute const_attribute public explicit_type "String"
	init_value " \"/data/system/wallpaper_info.xml\""
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 1207042 "STAGE_FILE"
	class_attribute const_attribute private explicit_type "String"
	init_value "
            new File(Environment.getUserSystemDirectory(UserHandle.USER_OWNER),
                    \"wallpaper-tmp\").getAbsolutePath()"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Stage file - should be adjacent to the WALLPAPER_IMAGE location.  The wallpapers
 will be saved to this file from the restore stream, then renamed to the proper
 location if it's deemed suitable.
 TODO: Will need to change if backing up non-primary user's wallpaper"
      end

      attribute 1207170 "mContext"
	package explicit_type "Context"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 1207298 "mFiles"
	package explicit_type "String"
	multiplicity "[]"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 1207426 "mKeys"
	package explicit_type "String"
	multiplicity "[]"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 1207554 "mDesiredMinWidth"
	package explicit_type "double"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 1207682 "mDesiredMinHeight"
	package explicit_type "double"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      operation 1815554 "WallpaperBackupHelper"
	public explicit_return_type ""
	nparams 3
	  param inout name "context" explicit_type "Context"
	  param inout name "files" explicit_type "String"
	  param inout name "keys" explicit_type "String"
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1}[] ${p1}, ${t2}[] ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Construct a helper for backing up / restoring the files at the given absolute locations
within the file system.

@param context
@param files"
      end

      operation 1815682 "performBackup"
	public explicit_return_type "void"
	nparams 3
	  param inout name "oldState" explicit_type "ParcelFileDescriptor"
	  param inout name "data" type class_ref 308482 // BackupDataOutput
	  param inout name "newState" explicit_type "ParcelFileDescriptor"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Based on oldState, determine which of the files from the application's data directory
need to be backed up, write them to the data stream, and fill in newState with the
state as it exists now."
      end

      operation 1815810 "restoreEntity"
	public explicit_return_type "void"
	nparams 1
	  param inout name "data" type class_ref 308610 // BackupDataInputStream
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Restore one absolute file entity from the restore stream.  If we're restoring the
magic wallpaper file, take specific action to determine whether it is suitable for
the current device."
      end
    end
  end

  deploymentview 150146 "backup"
    //deployment diagram settings
    package_name_in_tab default show_context default write_horizontally default auto_label_position default draw_all_relations default shadow default
    draw_component_as_icon default show_component_req_prov default show_component_rea default show_stereotype_properties default
    artifact 197506 "FileBackupHelperBase"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.content.Context;
import android.os.ParcelFileDescriptor;
import android.util.Log;
import java.io.File;
import java.io.FileDescriptor;
${definition}"
      associated_classes
	class_ref 308354 // FileBackupHelperBase
      end
      comment "Copyright (C) 2009 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 197634 "BackupHelper"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.os.ParcelFileDescriptor;
${definition}"
      associated_classes
	class_ref 308738 // BackupHelper
      end
      comment "Copyright (C) 2009 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 197762 "AbsoluteFileBackupHelper"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.content.Context;
import android.os.ParcelFileDescriptor;
import android.util.Log;
import java.io.File;
${definition}"
      associated_classes
	class_ref 308226 // AbsoluteFileBackupHelper
      end
      comment "Copyright (C) 2009 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 197890 "BackupAgent"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.app.IBackupAgent;
import android.app.QueuedWork;
import android.app.backup.IBackupManager;
import android.content.Context;
import android.content.ContextWrapper;
import android.content.pm.ApplicationInfo;
import android.os.Binder;
import android.os.Handler;
import android.os.IBinder;
import android.os.Looper;
import android.os.ParcelFileDescriptor;
import android.os.Process;
import android.os.RemoteException;
import android.system.ErrnoException;
import android.system.Os;
import android.system.OsConstants;
import android.system.StructStat;
import android.util.Log;
import java.io.File;
import java.io.FileOutputStream;
import java.io.IOException;
import java.util.HashSet;
import java.util.LinkedList;
import java.util.concurrent.CountDownLatch;
${definition}"
      associated_classes
	class_ref 279938 // BackupAgent
      end
      comment "Copyright (C) 2009 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 198018 "BackupAgentHelper"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.os.ParcelFileDescriptor;
import java.io.IOException;
${definition}"
      associated_classes
	class_ref 309634 // BackupAgentHelper
      end
      comment "Copyright (C) 2009 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 198146 "BackupDataInput"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.annotation.SystemApi;
import java.io.FileDescriptor;
import java.io.IOException;
${definition}"
      associated_classes
	class_ref 308994 // BackupDataInput
      end
      comment "Copyright (C) 2009 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 198274 "BackupDataInputStream"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import java.io.InputStream;
import java.io.IOException;
${definition}"
      associated_classes
	class_ref 308610 // BackupDataInputStream
      end
      comment "Copyright (C) 2009 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 198402 "BackupDataOutput"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.annotation.SystemApi;
import android.os.ParcelFileDescriptor;
import android.os.Process;
import java.io.FileDescriptor;
import java.io.IOException;
${definition}"
      associated_classes
	class_ref 308482 // BackupDataOutput
      end
      comment "Copyright (C) 2009 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 198530 "BackupHelperDispatcher"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.os.ParcelFileDescriptor;
import android.util.Log;
import java.io.FileDescriptor;
import java.io.IOException;
import java.util.Map;
import java.util.TreeMap;
${definition}"
      associated_classes
	class_ref 309762 // BackupHelperDispatcher
      end
      comment "Copyright (C) 2009 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 198658 "BackupManager"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.annotation.SystemApi;
import android.app.backup.RestoreSession;
import android.app.backup.IBackupManager;
import android.app.backup.IRestoreSession;
import android.content.Context;
import android.os.RemoteException;
import android.os.ServiceManager;
import android.util.Log;
${definition}"
      associated_classes
	class_ref 310274 // BackupManager
      end
      comment "Copyright (C) 2009 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 198786 "BackupTransport"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.annotation.SystemApi;
import android.content.Intent;
import android.content.pm.PackageInfo;
import android.os.IBinder;
import android.os.ParcelFileDescriptor;
import android.os.RemoteException;
import com.android.internal.backup.IBackupTransport;
${definition}"
      associated_classes
	class_ref 310658 // BackupTransport
      end
      comment "Copyright (C) 2014 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 198914 "FileBackupHelper"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.content.Context;
import android.os.ParcelFileDescriptor;
import android.util.Log;
import java.io.File;
${definition}"
      associated_classes
	class_ref 311298 // FileBackupHelper
      end
      comment "Copyright (C) 2009 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 199042 "FullBackup"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.os.ParcelFileDescriptor;
import android.system.ErrnoException;
import android.system.Os;
import android.util.Log;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.IOException;
${definition}"
      associated_classes
	class_ref 311426 // FullBackup
      end
      comment "Copyright (C) 2011 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 199170 "FullBackupAgent"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.os.ParcelFileDescriptor;
import java.io.IOException;
${definition}"
      associated_classes
	class_ref 311554 // FullBackupAgent
      end
      comment "Copyright (C) 2009 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 199298 "FullBackupDataOutput"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.os.ParcelFileDescriptor;
${definition}"
      associated_classes
	class_ref 309122 // FullBackupDataOutput
      end
    end

    artifact 199426 "RestoreDescription"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.annotation.SystemApi;
import android.os.Parcel;
import android.os.Parcelable;
${definition}"
      associated_classes
	class_ref 310914 // RestoreDescription
      end
      comment "Copyright (C) 2014 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 199554 "RestoreObserver"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import java.lang.String;
import android.annotation.SystemApi;
import android.app.backup.RestoreSet;
${definition}"
      associated_classes
	class_ref 310402 // RestoreObserver
      end
      comment "Copyright (C) 2010 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 199682 "RestoreSession"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.annotation.SystemApi;
import android.app.backup.RestoreObserver;
import android.app.backup.RestoreSet;
import android.app.backup.IRestoreObserver;
import android.app.backup.IRestoreSession;
import android.content.Context;
import android.os.Handler;
import android.os.Message;
import android.os.RemoteException;
import android.util.Log;
${definition}"
      associated_classes
	class_ref 310530 // RestoreSession
      end
      comment "Copyright (C) 2010 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 199810 "RestoreSet"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.annotation.SystemApi;
import android.os.Parcel;
import android.os.Parcelable;
${definition}"
      associated_classes
	class_ref 310786 // RestoreSet
      end
      comment "Copyright (C) 2009 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 199938 "SharedPreferencesBackupHelper"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.app.QueuedWork;
import android.content.Context;
import android.os.ParcelFileDescriptor;
import android.util.Log;
import java.io.File;
${definition}"
      associated_classes
	class_ref 311938 // SharedPreferencesBackupHelper
      end
      comment "Copyright (C) 2009 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 200066 "WallpaperBackupHelper"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.app.WallpaperManager;
import android.content.Context;
import android.graphics.BitmapFactory;
import android.graphics.Point;
import android.os.Environment;
import android.os.ParcelFileDescriptor;
import android.os.UserHandle;
import android.util.Slog;
import android.view.Display;
import android.view.WindowManager;
import java.io.File;
${definition}"
      associated_classes
	class_ref 312066 // WallpaperBackupHelper
      end
      comment "Copyright (C) 2010 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end
  end
end
