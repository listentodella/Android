class SequentialFocusComparator
!!!579330.java!!!	recycle() : void
            mRoot = null;
!!!579458.java!!!	setRoot(inout root : ViewGroup) : void
            mRoot = root;
!!!579586.java!!!	setIsLayoutRtl(inout b : boolean) : void
            mIsLayoutRtl = b;
!!!579714.java!!!	compare(inout first : View, inout second : View) : int
            if (first == second) {
                return 0;
            }

            getRect(first, mFirstRect);
            getRect(second, mSecondRect);

            if (mFirstRect.top < mSecondRect.top) {
                return -1;
            } else if (mFirstRect.top > mSecondRect.top) {
                return 1;
            } else if (mFirstRect.left < mSecondRect.left) {
                return mIsLayoutRtl ? 1 : -1;
            } else if (mFirstRect.left > mSecondRect.left) {
                return mIsLayoutRtl ? -1 : 1;
            } else if (mFirstRect.bottom < mSecondRect.bottom) {
                return -1;
            } else if (mFirstRect.bottom > mSecondRect.bottom) {
                return 1;
            } else if (mFirstRect.right < mSecondRect.right) {
                return mIsLayoutRtl ? 1 : -1;
            } else if (mFirstRect.right > mSecondRect.right) {
                return mIsLayoutRtl ? -1 : 1;
            } else {
                // The view are distinct but completely coincident so we consider
                // them equal for our purposes.  Since the sort is stable, this
                // means that the views will retain their layout order relative to one another.
                return 0;
            }
!!!579842.java!!!	getRect(inout view : View, inout rect : Rect) : void
            view.getDrawingRect(rect);
            mRoot.offsetDescendantRectToMyCoords(view, rect);
