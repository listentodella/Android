class WeeksAdapter
!!!2145282.java!!!	WeeksAdapter(inout context : Context)
                mContext = context;
                mGestureDetector = new GestureDetector(mContext, new CalendarGestureListener());
                init();
!!!2145410.java!!!	init() : void
                mSelectedWeek = getWeeksSinceMinDate(mSelectedDate);
                mTotalWeekCount = getWeeksSinceMinDate(mMaxDate);
                if (mMinDate.get(Calendar.DAY_OF_WEEK) != mFirstDayOfWeek
                        || mMaxDate.get(Calendar.DAY_OF_WEEK) != mFirstDayOfWeek) {
                    mTotalWeekCount++;
                }
                notifyDataSetChanged();
!!!2145538.java!!!	setSelectedDay(inout selectedDay : Calendar) : void
                if (selectedDay.get(Calendar.DAY_OF_YEAR) == mSelectedDate.get(Calendar.DAY_OF_YEAR)
                        && selectedDay.get(Calendar.YEAR) == mSelectedDate.get(Calendar.YEAR)) {
                    return;
                }
                mSelectedDate.setTimeInMillis(selectedDay.getTimeInMillis());
                mSelectedWeek = getWeeksSinceMinDate(mSelectedDate);
                mFocusedMonth = mSelectedDate.get(Calendar.MONTH);
                notifyDataSetChanged();
!!!2145666.java!!!	getSelectedDay() : Calendar
                return mSelectedDate;
!!!2145794.java!!!	getCount() : int
                return mTotalWeekCount;
!!!2145922.java!!!	getItem(in position : int) : Object
                return null;
!!!2146050.java!!!	getItemId(in position : int) : long
                return position;
!!!2146178.java!!!	getView(in position : int, inout convertView : View, inout parent : ViewGroup) : View
                WeekView weekView = null;
                if (convertView != null) {
                    weekView = (WeekView) convertView;
                } else {
                    weekView = new WeekView(mContext);
                    android.widget.AbsListView.LayoutParams params =
                            new android.widget.AbsListView.LayoutParams(LayoutParams.WRAP_CONTENT,
                                    LayoutParams.WRAP_CONTENT);
                    weekView.setLayoutParams(params);
                    weekView.setClickable(true);
                    weekView.setOnTouchListener(this);
                }

                int selectedWeekDay = (mSelectedWeek == position) ? mSelectedDate.get(
                        Calendar.DAY_OF_WEEK) : -1;
                weekView.init(position, selectedWeekDay, mFocusedMonth);

                return weekView;
!!!2146306.java!!!	setFocusMonth(in month : int) : void
                if (mFocusedMonth == month) {
                    return;
                }
                mFocusedMonth = month;
                notifyDataSetChanged();
!!!2146434.java!!!	onTouch(inout v : View, inout event : MotionEvent) : boolean
                if (mListView.isEnabled() && mGestureDetector.onTouchEvent(event)) {
                    WeekView weekView = (WeekView) v;
                    // if we cannot find a day for the given location we are done
                    if (!weekView.getDayFromLocation(event.getX(), mTempDate)) {
                        return true;
                    }
                    // it is possible that the touched day is outside the valid range
                    // we draw whole weeks but range end can fall not on the week end
                    if (mTempDate.before(mMinDate) || mTempDate.after(mMaxDate)) {
                        return true;
                    }
                    onDateTapped(mTempDate);
                    return true;
                }
                return false;
!!!2146562.java!!!	onDateTapped(inout day : Calendar) : void
                setSelectedDay(day);
                setMonthDisplayed(day);
