class ExpandableListPosition
!!!2266114.java!!!	resetState() : void
        groupPos = 0;
        childPos = 0;
        flatListPos = 0;
        type = 0;
!!!2266370.java!!!	getPackedPosition() : long
        if (type == CHILD) return ExpandableListView.getPackedPositionForChild(groupPos, childPos);
        else return ExpandableListView.getPackedPositionForGroup(groupPos);
!!!2266498.java!!!	obtainGroupPosition(in groupPosition : int) : ExpandableListPosition
        return obtain(GROUP, groupPosition, 0, 0);
!!!2266626.java!!!	obtainChildPosition(in groupPosition : int, in childPosition : int) : ExpandableListPosition
        return obtain(CHILD, groupPosition, childPosition, 0);
!!!2266754.java!!!	obtainPosition(in packedPosition : long) : ExpandableListPosition
        if (packedPosition == ExpandableListView.PACKED_POSITION_VALUE_NULL) {
            return null;
        }
        
        ExpandableListPosition elp = getRecycledOrCreate(); 
        elp.groupPos = ExpandableListView.getPackedPositionGroup(packedPosition);
        if (ExpandableListView.getPackedPositionType(packedPosition) ==
                ExpandableListView.PACKED_POSITION_TYPE_CHILD) {
            elp.type = CHILD;
            elp.childPos = ExpandableListView.getPackedPositionChild(packedPosition);
        } else {
            elp.type = GROUP;
        }
        return elp;
!!!2266882.java!!!	obtain(in type : int, in groupPos : int, in childPos : int, in flatListPos : int) : ExpandableListPosition
        ExpandableListPosition elp = getRecycledOrCreate(); 
        elp.type = type;
        elp.groupPos = groupPos;
        elp.childPos = childPos;
        elp.flatListPos = flatListPos;
        return elp;
!!!2267010.java!!!	getRecycledOrCreate() : ExpandableListPosition
        ExpandableListPosition elp;
        synchronized (sPool) {
            if (sPool.size() > 0) {
                elp = sPool.remove(0);
            } else {
                return new ExpandableListPosition();
            }
        }
        elp.resetState();
        return elp;
!!!2267138.java!!!	recycle() : void
        synchronized (sPool) {
            if (sPool.size() < MAX_POOL_SIZE) {
                sPool.add(this);
            }
        }
