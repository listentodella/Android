class CursorTreeAdapter
!!!2164738.java!!!	CursorTreeAdapter(inout cursor : Cursor, inout context : Context)
        init(cursor, context, true);
!!!2164866.java!!!	CursorTreeAdapter(inout cursor : Cursor, inout context : Context, inout autoRequery : boolean)
        init(cursor, context, autoRequery);
!!!2164994.java!!!	init(inout cursor : Cursor, inout context : Context, inout autoRequery : boolean) : void
        mContext = context;
        mHandler = new Handler();
        mAutoRequery = autoRequery;
        
        mGroupCursorHelper = new MyCursorHelper(cursor);
        mChildrenCursorHelpers = new SparseArray<MyCursorHelper>();
!!!2165122.java!!!	getChildrenCursorHelper(in groupPosition : int, inout requestCursor : boolean) : CursorTreeAdapter::MyCursorHelper
        MyCursorHelper cursorHelper = mChildrenCursorHelpers.get(groupPosition);
        
        if (cursorHelper == null) {
            if (mGroupCursorHelper.moveTo(groupPosition) == null) return null;
            
            final Cursor cursor = getChildrenCursor(mGroupCursorHelper.getCursor());
            cursorHelper = new MyCursorHelper(cursor);
            mChildrenCursorHelpers.put(groupPosition, cursorHelper);
        }
        
        return cursorHelper;
!!!2165378.java!!!	setGroupCursor(inout cursor : Cursor) : void
        mGroupCursorHelper.changeCursor(cursor, false);
!!!2165506.java!!!	setChildrenCursor(in groupPosition : int, inout childrenCursor : Cursor) : void
        
        /*
         * Don't request a cursor from the subclass, instead we will be setting
         * the cursor ourselves.
         */
        MyCursorHelper childrenCursorHelper = getChildrenCursorHelper(groupPosition, false);

        /*
         * Don't release any cursor since we know exactly what data is changing
         * (this cursor, which is still valid).
         */
        childrenCursorHelper.changeCursor(childrenCursor, false);
!!!2165634.java!!!	getChild(in groupPosition : int, in childPosition : int) : Cursor
        // Return this group's children Cursor pointing to the particular child
        return getChildrenCursorHelper(groupPosition, true).moveTo(childPosition);
!!!2165762.java!!!	getChildId(in groupPosition : int, in childPosition : int) : long
        return getChildrenCursorHelper(groupPosition, true).getId(childPosition);
!!!2165890.java!!!	getChildrenCount(in groupPosition : int) : int
        MyCursorHelper helper = getChildrenCursorHelper(groupPosition, true);
        return (mGroupCursorHelper.isValid() && helper != null) ? helper.getCount() : 0;
!!!2166018.java!!!	getGroup(in groupPosition : int) : Cursor
        // Return the group Cursor pointing to the given group
        return mGroupCursorHelper.moveTo(groupPosition);
!!!2166146.java!!!	getGroupCount() : int
        return mGroupCursorHelper.getCount();
!!!2166274.java!!!	getGroupId(in groupPosition : int) : long
        return mGroupCursorHelper.getId(groupPosition);
!!!2166402.java!!!	getGroupView(in groupPosition : int, inout isExpanded : boolean, inout convertView : View, inout parent : ViewGroup) : View
        Cursor cursor = mGroupCursorHelper.moveTo(groupPosition);
        if (cursor == null) {
            throw new IllegalStateException("this should only be called when the cursor is valid");
        }
        
        View v;
        if (convertView == null) {
            v = newGroupView(mContext, cursor, isExpanded, parent);
        } else {
            v = convertView;
        }
        bindGroupView(v, mContext, cursor, isExpanded);
        return v;
!!!2166786.java!!!	getChildView(in groupPosition : int, in childPosition : int, inout isLastChild : boolean, inout convertView : View, inout parent : ViewGroup) : View
        MyCursorHelper cursorHelper = getChildrenCursorHelper(groupPosition, true);
        
        Cursor cursor = cursorHelper.moveTo(childPosition);
        if (cursor == null) {
            throw new IllegalStateException("this should only be called when the cursor is valid");
        }
        
        View v;
        if (convertView == null) {
            v = newChildView(mContext, cursor, isLastChild, parent);
        } else {
            v = convertView;
        }
        bindChildView(v, mContext, cursor, isLastChild);
        return v;
!!!2167170.java!!!	isChildSelectable(in groupPosition : int, in childPosition : int) : boolean
        return true;
!!!2167298.java!!!	hasStableIds() : boolean
        return true;
!!!2167426.java!!!	releaseCursorHelpers() : void
        for (int pos = mChildrenCursorHelpers.size() - 1; pos >= 0; pos--) {
            mChildrenCursorHelpers.valueAt(pos).deactivate();
        }
        
        mChildrenCursorHelpers.clear();
!!!2167554.java!!!	notifyDataSetChanged() : void
        notifyDataSetChanged(true);
!!!2167682.java!!!	notifyDataSetChanged(inout releaseCursors : boolean) : void
        
        if (releaseCursors) {
            releaseCursorHelpers();
        }
        
        super.notifyDataSetChanged();
!!!2167810.java!!!	notifyDataSetInvalidated() : void
        releaseCursorHelpers();
        super.notifyDataSetInvalidated();
!!!2167938.java!!!	onGroupCollapsed(in groupPosition : int) : void
        deactivateChildrenCursorHelper(groupPosition);
!!!2168066.java!!!	deactivateChildrenCursorHelper(in groupPosition : int) : void
        MyCursorHelper cursorHelper = getChildrenCursorHelper(groupPosition, true);
        mChildrenCursorHelpers.remove(groupPosition);
        cursorHelper.deactivate();
!!!2168194.java!!!	convertToString(inout cursor : Cursor) : String
        return cursor == null ? "" : cursor.toString();
!!!2168322.java!!!	runQueryOnBackgroundThread(inout constraint : CharSequence) : Cursor
        if (mFilterQueryProvider != null) {
            return mFilterQueryProvider.runQuery(constraint);
        }

        return mGroupCursorHelper.getCursor();
!!!2168450.java!!!	getFilter() : Filter
        if (mCursorFilter == null) {
            mCursorFilter = new CursorFilter(this);
        }
        return mCursorFilter;
!!!2168578.java!!!	getFilterQueryProvider() : FilterQueryProvider
        return mFilterQueryProvider;
!!!2168706.java!!!	setFilterQueryProvider(inout filterQueryProvider : FilterQueryProvider) : void
        mFilterQueryProvider = filterQueryProvider;
!!!2168834.java!!!	changeCursor(inout cursor : Cursor) : void
        mGroupCursorHelper.changeCursor(cursor, true);
!!!2168962.java!!!	getCursor() : Cursor
        return mGroupCursorHelper.getCursor();
