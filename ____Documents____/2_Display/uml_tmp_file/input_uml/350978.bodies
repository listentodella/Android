class InputConnectionWrapper
!!!1953538.java!!!	InputConnectionWrapper(inout outAttrs : EditorInfo)
            mOutAttrs = outAttrs;
!!!1953666.java!!!	getTarget() : InputConnection
            if (mTarget == null) {
                mTarget = getTextFilterInput().onCreateInputConnection(mOutAttrs);
            }
            return mTarget;
!!!1953794.java!!!	reportFullscreenMode(inout enabled : boolean) : boolean
            // Use our own input connection, since it is
            // the "real" one the IME is talking with.
            return mDefInputConnection.reportFullscreenMode(enabled);
!!!1953922.java!!!	performEditorAction(in editorAction : int) : boolean
            // The editor is off in its own window; we need to be
            // the one that does this.
            if (editorAction == EditorInfo.IME_ACTION_DONE) {
                InputMethodManager imm = (InputMethodManager)
                        getContext().getSystemService(Context.INPUT_METHOD_SERVICE);
                if (imm != null) {
                    imm.hideSoftInputFromWindow(getWindowToken(), 0);
                }
                return true;
            }
            return false;
!!!1954050.java!!!	sendKeyEvent(inout event : KeyEvent) : boolean
            // Use our own input connection, since the filter
            // text view may not be shown in a window so has
            // no ViewAncestor to dispatch events with.
            return mDefInputConnection.sendKeyEvent(event);
!!!1954178.java!!!	getTextBeforeCursor(in n : int, in flags : int) : CharSequence
            if (mTarget == null) return "";
            return mTarget.getTextBeforeCursor(n, flags);
!!!1954306.java!!!	getTextAfterCursor(in n : int, in flags : int) : CharSequence
            if (mTarget == null) return "";
            return mTarget.getTextAfterCursor(n, flags);
!!!1954434.java!!!	getSelectedText(in flags : int) : CharSequence
            if (mTarget == null) return "";
            return mTarget.getSelectedText(flags);
!!!1954562.java!!!	getCursorCapsMode(in reqModes : int) : int
            if (mTarget == null) return InputType.TYPE_TEXT_FLAG_CAP_SENTENCES;
            return mTarget.getCursorCapsMode(reqModes);
!!!1954690.java!!!	getExtractedText(inout request : ExtractedTextRequest, in flags : int) : ExtractedText
            return getTarget().getExtractedText(request, flags);
!!!1954818.java!!!	deleteSurroundingText(in beforeLength : int, in afterLength : int) : boolean
            return getTarget().deleteSurroundingText(beforeLength, afterLength);
!!!1954946.java!!!	setComposingText(inout text : CharSequence, in newCursorPosition : int) : boolean
            return getTarget().setComposingText(text, newCursorPosition);
!!!1955074.java!!!	setComposingRegion(in start : int, in end : int) : boolean
            return getTarget().setComposingRegion(start, end);
!!!1955202.java!!!	finishComposingText() : boolean
            return mTarget == null || mTarget.finishComposingText();
!!!1955330.java!!!	commitText(inout text : CharSequence, in newCursorPosition : int) : boolean
            return getTarget().commitText(text, newCursorPosition);
!!!1955458.java!!!	commitCompletion(inout text : CompletionInfo) : boolean
            return getTarget().commitCompletion(text);
!!!1955586.java!!!	commitCorrection(inout correctionInfo : CorrectionInfo) : boolean
            return getTarget().commitCorrection(correctionInfo);
!!!1955714.java!!!	setSelection(in start : int, in end : int) : boolean
            return getTarget().setSelection(start, end);
!!!1955842.java!!!	performContextMenuAction(in id : int) : boolean
            return getTarget().performContextMenuAction(id);
!!!1955970.java!!!	beginBatchEdit() : boolean
            return getTarget().beginBatchEdit();
!!!1956098.java!!!	endBatchEdit() : boolean
            return getTarget().endBatchEdit();
!!!1956226.java!!!	clearMetaKeyStates(in states : int) : boolean
            return getTarget().clearMetaKeyStates(states);
!!!1956354.java!!!	performPrivateCommand(in action : String, inout data : Bundle) : boolean
            return getTarget().performPrivateCommand(action, data);
!!!1956482.java!!!	requestCursorUpdates(in cursorUpdateMode : int) : boolean
            return getTarget().requestCursorUpdates(cursorUpdateMode);
