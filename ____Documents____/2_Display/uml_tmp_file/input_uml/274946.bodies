class TaskStackBuilder
!!!1747074.java!!!	TaskStackBuilder(inout a : Context)
        mSourceContext = a;
!!!1747202.java!!!	create(inout context : Context) : TaskStackBuilder
        return new TaskStackBuilder(context);
!!!1747330.java!!!	addNextIntent(inout nextIntent : Intent) : TaskStackBuilder
        mIntents.add(nextIntent);
        return this;
!!!1747458.java!!!	addNextIntentWithParentStack(inout nextIntent : Intent) : TaskStackBuilder
        ComponentName target = nextIntent.getComponent();
        if (target == null) {
            target = nextIntent.resolveActivity(mSourceContext.getPackageManager());
        }
        if (target != null) {
            addParentStack(target);
        }
        addNextIntent(nextIntent);
        return this;
!!!1747586.java!!!	addParentStack(inout sourceActivity : Activity) : TaskStackBuilder
        final Intent parent = sourceActivity.getParentActivityIntent();
        if (parent != null) {
            // We have the actual parent intent, build the rest from static metadata
            // then add the direct parent intent to the end.
            ComponentName target = parent.getComponent();
            if (target == null) {
                target = parent.resolveActivity(mSourceContext.getPackageManager());
            }
            addParentStack(target);
            addNextIntent(parent);
        }
        return this;
!!!1747714.java!!!	addParentStack(inout sourceActivityClass : Class<?>) : TaskStackBuilder
        return addParentStack(new ComponentName(mSourceContext, sourceActivityClass));
!!!1747842.java!!!	addParentStack(inout sourceActivityName : ComponentName) : TaskStackBuilder
        final int insertAt = mIntents.size();
        PackageManager pm = mSourceContext.getPackageManager();
        try {
            ActivityInfo info = pm.getActivityInfo(sourceActivityName, 0);
            String parentActivity = info.parentActivityName;
            while (parentActivity != null) {
                final ComponentName target = new ComponentName(info.packageName, parentActivity);
                info = pm.getActivityInfo(target, 0);
                parentActivity = info.parentActivityName;
                final Intent parent = parentActivity == null && insertAt == 0
                        ? Intent.makeMainActivity(target)
                        : new Intent().setComponent(target);
                mIntents.add(insertAt, parent);
            }
        } catch (NameNotFoundException e) {
            Log.e(TAG, "Bad ComponentName while traversing activity parent metadata");
            throw new IllegalArgumentException(e);
        }
        return this;
!!!1747970.java!!!	getIntentCount() : int
        return mIntents.size();
!!!1748098.java!!!	editIntentAt(in index : int) : Intent
        return mIntents.get(index);
!!!1748226.java!!!	startActivities() : void
        startActivities(null);
!!!1748354.java!!!	startActivities(inout options : Bundle, inout userHandle : UserHandle) : void
        if (mIntents.isEmpty()) {
            throw new IllegalStateException(
                    "No intents added to TaskStackBuilder; cannot startActivities");
        }

        mSourceContext.startActivitiesAsUser(getIntents(), options, userHandle);
!!!1748482.java!!!	startActivities(inout options : Bundle) : void
        startActivities(options, new UserHandle(UserHandle.myUserId()));
!!!1748610.java!!!	getPendingIntent(in requestCode : int, in flags : int) : PendingIntent
        return getPendingIntent(requestCode, flags, null);
!!!1748738.java!!!	getPendingIntent(in requestCode : int, in flags : int, inout options : Bundle) : PendingIntent
        if (mIntents.isEmpty()) {
            throw new IllegalStateException(
                    "No intents added to TaskStackBuilder; cannot getPendingIntent");
        }

        return PendingIntent.getActivities(mSourceContext, requestCode, getIntents(),
                flags, options);
!!!1748866.java!!!	getPendingIntent(in requestCode : int, in flags : int, inout options : Bundle, inout user : UserHandle) : PendingIntent
        if (mIntents.isEmpty()) {
            throw new IllegalStateException(
                    "No intents added to TaskStackBuilder; cannot getPendingIntent");
        }

        return PendingIntent.getActivitiesAsUser(mSourceContext, requestCode, getIntents(), flags,
                options, user);
!!!1748994.java!!!	getIntents() : Intent
        Intent[] intents = new Intent[mIntents.size()];
        if (intents.length == 0) return intents;

        intents[0] = new Intent(mIntents.get(0)).addFlags(Intent.FLAG_ACTIVITY_NEW_TASK |
                Intent.FLAG_ACTIVITY_CLEAR_TASK |
                Intent.FLAG_ACTIVITY_TASK_ON_HOME);
        for (int i = 1; i < intents.length; i++) {
            intents[i] = new Intent(mIntents.get(i));
        }
        return intents;
