class InputEventSender
!!!747266.java!!!	InputEventSender(inout inputChannel : InputChannel, inout looper : Looper)
        if (inputChannel == null) {
            throw new IllegalArgumentException("inputChannel must not be null");
        }
        if (looper == null) {
            throw new IllegalArgumentException("looper must not be null");
        }

        mInputChannel = inputChannel;
        mMessageQueue = looper.getQueue();
        mSenderPtr = nativeInit(new WeakReference<InputEventSender>(this),
                inputChannel, mMessageQueue);

        mCloseGuard.open("dispose");
!!!747394.java!!!	finalize() : void
        try {
            dispose(true);
        } finally {
            super.finalize();
        }
!!!747522.java!!!	dispose() : void
        dispose(false);
!!!747650.java!!!	dispose(inout finalized : boolean) : void
        if (mCloseGuard != null) {
            if (finalized) {
                mCloseGuard.warnIfOpen();
            }
            mCloseGuard.close();
        }

        if (mSenderPtr != 0) {
            nativeDispose(mSenderPtr);
            mSenderPtr = 0;
        }
        mInputChannel = null;
        mMessageQueue = null;
!!!747906.java!!!	sendInputEvent(in seq : int, inout event : InputEvent) : boolean
        if (event == null) {
            throw new IllegalArgumentException("event must not be null");
        }
        if (mSenderPtr == 0) {
            Log.w(TAG, "Attempted to send an input event but the input event "
                    + "sender has already been disposed.");
            return false;
        }

        if (event instanceof KeyEvent) {
            return nativeSendKeyEvent(mSenderPtr, seq, (KeyEvent)event);
        } else {
            return nativeSendMotionEvent(mSenderPtr, seq, (MotionEvent)event);
        }
!!!748034.java!!!	dispatchInputEventFinished(in seq : int, inout handled : boolean) : void
        onInputEventFinished(seq, handled);
