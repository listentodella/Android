format 76
"accessibility" // view::accessibility
  revision 1
  modified_by 2 "thisway_diy"
  // class settings
  //class diagram settings
  draw_all_relations default hide_attributes default hide_operations default hide_getset_operations default show_members_full_definition default show_members_visibility default show_members_stereotype default show_members_context default show_members_multiplicity default show_members_initialization default show_attribute_modifiers default member_max_width 0 show_parameter_dir default show_parameter_name default package_name_in_tab default class_drawing_mode default drawing_language default show_context_mode default auto_label_position default show_relation_modifiers default show_relation_visibility default show_infonote default shadow default show_stereotype_properties default
  //use case diagram settings
  package_name_in_tab default show_context default auto_label_position default draw_all_relations default class_drawing_mode default shadow default show_stereotype_properties default
  //sequence diagram settings
  show_full_operations_definition default write_horizontally default class_drawing_mode default drawing_language default draw_all_relations default shadow default show_stereotype_properties default show_class_context_mode default show_msg_context_mode default
  //collaboration diagram settings
  show_full_operations_definition default show_hierarchical_rank default write_horizontally default class_drawing_mode default drawing_language default package_name_in_tab default show_context default show_msg_context default draw_all_relations default shadow default show_stereotype_properties default
  //object diagram settings
   write_horizontally default package_name_in_tab default show_context default auto_label_position default draw_all_relations default shadow default show_stereotype_properties default
  //component diagram settings
  package_name_in_tab default show_context default auto_label_position default draw_all_relations default shadow default
  draw_component_as_icon default show_component_req_prov default show_component_rea default show_stereotype_properties default
  //deployment diagram settings
  package_name_in_tab default show_context default write_horizontally default auto_label_position default draw_all_relations default shadow default
  draw_component_as_icon default show_component_req_prov default show_component_rea default show_stereotype_properties default
  //state diagram settings
  package_name_in_tab default show_context default auto_label_position default write_trans_label_horizontally default show_trans_definition default draw_all_relations default shadow default
  show_activities default region_horizontally default drawing_language default show_stereotype_properties default
  //activity diagram settings
  package_name_in_tab default show_context default show_opaque_action_definition default auto_label_position default write_flow_label_horizontally default draw_all_relations default shadow default
  show_infonote default drawing_language default show_stereotype_properties default
  
  java_dir "L:/android_projects/uml_tmp_file/view/accessibility/"
  java_package "android.view.accessibility"
  classview 144386 "accessibility"
    //class diagram settings
    draw_all_relations default hide_attributes default hide_operations default hide_getset_operations default show_members_full_definition default show_members_visibility default show_members_stereotype default show_members_context default show_members_multiplicity default show_members_initialization default show_attribute_modifiers default member_max_width 0 show_parameter_dir default show_parameter_name default package_name_in_tab default class_drawing_mode default drawing_language default show_context_mode default auto_label_position default show_relation_modifiers default show_relation_visibility default show_infonote default shadow default show_stereotype_properties default
    //collaboration diagram settings
    show_full_operations_definition default show_hierarchical_rank default write_horizontally default class_drawing_mode default drawing_language default package_name_in_tab default show_context default show_msg_context default draw_all_relations default shadow default show_stereotype_properties default
    //object diagram settings
     write_horizontally default package_name_in_tab default show_context default auto_label_position default draw_all_relations default shadow default show_stereotype_properties default
    //sequence diagram settings
    show_full_operations_definition default write_horizontally default class_drawing_mode default drawing_language default draw_all_relations default shadow default show_stereotype_properties default show_class_context_mode default show_msg_context_mode default
    //state diagram settings
    package_name_in_tab default show_context default auto_label_position default write_trans_label_horizontally default show_trans_definition default draw_all_relations default shadow default
    show_activities default region_horizontally default drawing_language default show_stereotype_properties default
    //class settings
    //activity diagram settings
    package_name_in_tab default show_context default show_opaque_action_definition default auto_label_position default write_flow_label_horizontally default draw_all_relations default shadow default
    show_infonote default drawing_language default show_stereotype_properties default
    class 208514 "AccessibilityNodeInfo"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "This class represents a node of the window content as well as actions that
can be requested from its source. From the point of view of an
{@link android.accessibilityservice.AccessibilityService} a window content is
presented as tree of accessibility node info which may or may not map one-to-one
to the view hierarchy. In other words, a custom view is free to report itself as
a tree of accessibility node info.
</p>
<p>
Once an accessibility node info is delivered to an accessibility service it is
made immutable and calling a state mutation method generates an error.
</p>
<p>
Please refer to {@link android.accessibilityservice.AccessibilityService} for
details about how to obtain a handle to window content as a tree of accessibility
node info as well as familiarizing with the security model.
</p>
<div class=\"special reference\">
<h3>Developer Guides</h3>
<p>For more information about making applications accessible, read the
<a href=\"{@docRoot}guide/topics/ui/accessibility/index.html\">Accessibility</a>
developer guide.</p>
</div>

@see android.accessibilityservice.AccessibilityService
@see AccessibilityEvent
@see AccessibilityManager"
      classrelation 276354 // <realization>
	relation 275458 -_-|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 276354 // <realization>
	  b parent class_ref 203266 // Parcelable
      end

      attribute 745346 "DEBUG"
	class_attribute const_attribute private explicit_type "boolean"
	init_value " false"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 745474 "UNDEFINED_CONNECTION_ID"
	class_attribute const_attribute public explicit_type "int"
	init_value " -1"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " @hide "
      end

      attribute 745602 "UNDEFINED_SELECTION_INDEX"
	class_attribute const_attribute public explicit_type "int"
	init_value " -1"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " @hide "
      end

      attribute 745730 "UNDEFINED_ITEM_ID"
	class_attribute const_attribute public explicit_type "int"
	init_value " Integer.MAX_VALUE"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " @hide "
      end

      attribute 745858 "ROOT_NODE_ID"
	class_attribute const_attribute public explicit_type "long"
	init_value " makeNodeId(UNDEFINED_ITEM_ID, UNDEFINED_ITEM_ID)"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " @hide "
      end

      attribute 745986 "ACTIVE_WINDOW_ID"
	class_attribute const_attribute public explicit_type "int"
	init_value " UNDEFINED_ITEM_ID"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " @hide "
      end

      attribute 746114 "ANY_WINDOW_ID"
	class_attribute const_attribute public explicit_type "int"
	init_value " -2"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " @hide "
      end

      attribute 746242 "FLAG_PREFETCH_PREDECESSORS"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x00000001"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " @hide "
      end

      attribute 746370 "FLAG_PREFETCH_SIBLINGS"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x00000002"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " @hide "
      end

      attribute 746498 "FLAG_PREFETCH_DESCENDANTS"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x00000004"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " @hide "
      end

      attribute 746626 "FLAG_INCLUDE_NOT_IMPORTANT_VIEWS"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x00000008"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " @hide "
      end

      attribute 746754 "FLAG_REPORT_VIEW_IDS"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x00000010"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " @hide "
      end

      attribute 746882 "ACTION_FOCUS"
	class_attribute const_attribute public explicit_type "int"
	init_value "  0x00000001"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Actions.

Action that gives input focus to the node.
"
      end

      attribute 747010 "ACTION_CLEAR_FOCUS"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x00000002"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Action that clears input focus of the node.
"
      end

      attribute 747138 "ACTION_SELECT"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x00000004"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Action that selects the node.
"
      end

      attribute 747266 "ACTION_CLEAR_SELECTION"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x00000008"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Action that deselects the node.
"
      end

      attribute 747394 "ACTION_CLICK"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x00000010"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Action that clicks on the node info.
"
      end

      attribute 747522 "ACTION_LONG_CLICK"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x00000020"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Action that long clicks on the node.
"
      end

      attribute 747650 "ACTION_ACCESSIBILITY_FOCUS"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x00000040"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Action that gives accessibility focus to the node.
"
      end

      attribute 747778 "ACTION_CLEAR_ACCESSIBILITY_FOCUS"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x00000080"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Action that clears accessibility focus of the node.
"
      end

      attribute 747906 "ACTION_NEXT_AT_MOVEMENT_GRANULARITY"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x00000100"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Action that requests to go to the next entity in this node's text
at a given movement granularity. For example, move to the next character,
word, etc.
<p>
<strong>Arguments:</strong> {@link #ACTION_ARGUMENT_MOVEMENT_GRANULARITY_INT}<,
{@link #ACTION_ARGUMENT_EXTEND_SELECTION_BOOLEAN}<br>
<strong>Example:</strong> Move to the previous character and do not extend selection.
<code><pre><p>
  Bundle arguments = new Bundle();
  arguments.putInt(AccessibilityNodeInfo.ACTION_ARGUMENT_MOVEMENT_GRANULARITY_INT,
          AccessibilityNodeInfo.MOVEMENT_GRANULARITY_CHARACTER);
  arguments.putBoolean(AccessibilityNodeInfo.ACTION_ARGUMENT_EXTEND_SELECTION_BOOLEAN,
          false);
  info.performAction(AccessibilityNodeInfo.ACTION_NEXT_AT_MOVEMENT_GRANULARITY, arguments);
</code></pre></p>
</p>

@see #ACTION_ARGUMENT_MOVEMENT_GRANULARITY_INT
@see #ACTION_ARGUMENT_EXTEND_SELECTION_BOOLEAN

@see #setMovementGranularities(int)
@see #getMovementGranularities()

@see #MOVEMENT_GRANULARITY_CHARACTER
@see #MOVEMENT_GRANULARITY_WORD
@see #MOVEMENT_GRANULARITY_LINE
@see #MOVEMENT_GRANULARITY_PARAGRAPH
@see #MOVEMENT_GRANULARITY_PAGE
"
      end

      attribute 748034 "ACTION_PREVIOUS_AT_MOVEMENT_GRANULARITY"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x00000200"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Action that requests to go to the previous entity in this node's text
at a given movement granularity. For example, move to the next character,
word, etc.
<p>
<strong>Arguments:</strong> {@link #ACTION_ARGUMENT_MOVEMENT_GRANULARITY_INT}<,
{@link #ACTION_ARGUMENT_EXTEND_SELECTION_BOOLEAN}<br>
<strong>Example:</strong> Move to the next character and do not extend selection.
<code><pre><p>
  Bundle arguments = new Bundle();
  arguments.putInt(AccessibilityNodeInfo.ACTION_ARGUMENT_MOVEMENT_GRANULARITY_INT,
          AccessibilityNodeInfo.MOVEMENT_GRANULARITY_CHARACTER);
  arguments.putBoolean(AccessibilityNodeInfo.ACTION_ARGUMENT_EXTEND_SELECTION_BOOLEAN,
          false);
  info.performAction(AccessibilityNodeInfo.ACTION_PREVIOUS_AT_MOVEMENT_GRANULARITY,
          arguments);
</code></pre></p>
</p>

@see #ACTION_ARGUMENT_MOVEMENT_GRANULARITY_INT
@see #ACTION_ARGUMENT_EXTEND_SELECTION_BOOLEAN

@see #setMovementGranularities(int)
@see #getMovementGranularities()

@see #MOVEMENT_GRANULARITY_CHARACTER
@see #MOVEMENT_GRANULARITY_WORD
@see #MOVEMENT_GRANULARITY_LINE
@see #MOVEMENT_GRANULARITY_PARAGRAPH
@see #MOVEMENT_GRANULARITY_PAGE
"
      end

      attribute 748162 "ACTION_NEXT_HTML_ELEMENT"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x00000400"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Action to move to the next HTML element of a given type. For example, move
to the BUTTON, INPUT, TABLE, etc.
<p>
<strong>Arguments:</strong> {@link #ACTION_ARGUMENT_HTML_ELEMENT_STRING}<br>
<strong>Example:</strong>
<code><pre><p>
  Bundle arguments = new Bundle();
  arguments.putString(AccessibilityNodeInfo.ACTION_ARGUMENT_HTML_ELEMENT_STRING, \"BUTTON\");
  info.performAction(AccessibilityNodeInfo.ACTION_NEXT_HTML_ELEMENT, arguments);
</code></pre></p>
</p>
"
      end

      attribute 748290 "ACTION_PREVIOUS_HTML_ELEMENT"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x00000800"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Action to move to the previous HTML element of a given type. For example, move
to the BUTTON, INPUT, TABLE, etc.
<p>
<strong>Arguments:</strong> {@link #ACTION_ARGUMENT_HTML_ELEMENT_STRING}<br>
<strong>Example:</strong>
<code><pre><p>
  Bundle arguments = new Bundle();
  arguments.putString(AccessibilityNodeInfo.ACTION_ARGUMENT_HTML_ELEMENT_STRING, \"BUTTON\");
  info.performAction(AccessibilityNodeInfo.ACTION_PREVIOUS_HTML_ELEMENT, arguments);
</code></pre></p>
</p>
"
      end

      attribute 748418 "ACTION_SCROLL_FORWARD"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x00001000"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Action to scroll the node content forward.
"
      end

      attribute 748546 "ACTION_SCROLL_BACKWARD"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x00002000"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Action to scroll the node content backward.
"
      end

      attribute 748674 "ACTION_COPY"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x00004000"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Action to copy the current selection to the clipboard.
"
      end

      attribute 748802 "ACTION_PASTE"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x00008000"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Action to paste the current clipboard content.
"
      end

      attribute 748930 "ACTION_CUT"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x00010000"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Action to cut the current selection and place it to the clipboard.
"
      end

      attribute 749058 "ACTION_SET_SELECTION"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x00020000"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Action to set the selection. Performing this action with no arguments
clears the selection.
<p>
<strong>Arguments:</strong> {@link #ACTION_ARGUMENT_SELECTION_START_INT},
{@link #ACTION_ARGUMENT_SELECTION_END_INT}<br>
<strong>Example:</strong>
<code><pre><p>
  Bundle arguments = new Bundle();
  arguments.putInt(AccessibilityNodeInfo.ACTION_ARGUMENT_SELECTION_START_INT, 1);
  arguments.putInt(AccessibilityNodeInfo.ACTION_ARGUMENT_SELECTION_END_INT, 2);
  info.performAction(AccessibilityNodeInfo.ACTION_SET_SELECTION, arguments);
</code></pre></p>
</p>

@see #ACTION_ARGUMENT_SELECTION_START_INT
@see #ACTION_ARGUMENT_SELECTION_END_INT
"
      end

      attribute 749186 "ACTION_EXPAND"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x00040000"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Action to expand an expandable node.
"
      end

      attribute 749314 "ACTION_COLLAPSE"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x00080000"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Action to collapse an expandable node.
"
      end

      attribute 749442 "ACTION_DISMISS"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x00100000"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Action to dismiss a dismissable node.
"
      end

      attribute 749570 "ACTION_SET_TEXT"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x00200000"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Action that sets the text of the node. Performing the action without argument, using <code>
null</code> or empty {@link CharSequence} will clear the text. This action will also put the
cursor at the end of text.
<p>
<strong>Arguments:</strong> {@link #ACTION_ARGUMENT_SET_TEXT_CHARSEQUENCE}<br>
<strong>Example:</strong>
<code><pre><p>
  Bundle arguments = new Bundle();
  arguments.putCharSequence(AccessibilityNodeInfo.ACTION_ARGUMENT_SET_TEXT_CHARSEQUENCE,
      \"android\");
  info.performAction(AccessibilityNodeInfo.ACTION_SET_TEXT, arguments);
</code></pre></p>
"
      end

      attribute 749698 "LAST_LEGACY_STANDARD_ACTION"
	class_attribute const_attribute private explicit_type "int"
	init_value " ACTION_SET_TEXT"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 749826 "ACTION_TYPE_MASK"
	class_attribute const_attribute private explicit_type "int"
	init_value " 0xFF000000"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Mask to see if the value is larger than the largest ACTION_ constant
"
      end

      attribute 749954 "ACTION_ARGUMENT_MOVEMENT_GRANULARITY_INT"
	class_attribute const_attribute public explicit_type "String"
	init_value "
            \"ACTION_ARGUMENT_MOVEMENT_GRANULARITY_INT\""
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Action arguments

Argument for which movement granularity to be used when traversing the node text.
<p>
<strong>Type:</strong> int<br>
<strong>Actions:</strong> {@link #ACTION_NEXT_AT_MOVEMENT_GRANULARITY},
{@link #ACTION_PREVIOUS_AT_MOVEMENT_GRANULARITY}
</p>

@see #ACTION_NEXT_AT_MOVEMENT_GRANULARITY
@see #ACTION_PREVIOUS_AT_MOVEMENT_GRANULARITY
"
      end

      attribute 750082 "ACTION_ARGUMENT_HTML_ELEMENT_STRING"
	class_attribute const_attribute public explicit_type "String"
	init_value "
            \"ACTION_ARGUMENT_HTML_ELEMENT_STRING\""
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Argument for which HTML element to get moving to the next/previous HTML element.
<p>
<strong>Type:</strong> String<br>
<strong>Actions:</strong> {@link #ACTION_NEXT_HTML_ELEMENT},
        {@link #ACTION_PREVIOUS_HTML_ELEMENT}
</p>

@see #ACTION_NEXT_HTML_ELEMENT
@see #ACTION_PREVIOUS_HTML_ELEMENT
"
      end

      attribute 750210 "ACTION_ARGUMENT_EXTEND_SELECTION_BOOLEAN"
	class_attribute const_attribute public explicit_type "String"
	init_value "
            \"ACTION_ARGUMENT_EXTEND_SELECTION_BOOLEAN\""
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Argument for whether when moving at granularity to extend the selection
or to move it otherwise.
<p>
<strong>Type:</strong> boolean<br>
<strong>Actions:</strong> {@link #ACTION_NEXT_AT_MOVEMENT_GRANULARITY},
{@link #ACTION_PREVIOUS_AT_MOVEMENT_GRANULARITY}
</p>

@see #ACTION_NEXT_AT_MOVEMENT_GRANULARITY
@see #ACTION_PREVIOUS_AT_MOVEMENT_GRANULARITY
"
      end

      attribute 750338 "ACTION_ARGUMENT_SELECTION_START_INT"
	class_attribute const_attribute public explicit_type "String"
	init_value "
            \"ACTION_ARGUMENT_SELECTION_START_INT\""
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Argument for specifying the selection start.
<p>
<strong>Type:</strong> int<br>
<strong>Actions:</strong> {@link #ACTION_SET_SELECTION}
</p>

@see #ACTION_SET_SELECTION
"
      end

      attribute 750466 "ACTION_ARGUMENT_SELECTION_END_INT"
	class_attribute const_attribute public explicit_type "String"
	init_value "
            \"ACTION_ARGUMENT_SELECTION_END_INT\""
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Argument for specifying the selection end.
<p>
<strong>Type:</strong> int<br>
<strong>Actions:</strong> {@link #ACTION_SET_SELECTION}
</p>

@see #ACTION_SET_SELECTION
"
      end

      attribute 750594 "ACTION_ARGUMENT_SET_TEXT_CHARSEQUENCE"
	class_attribute const_attribute public explicit_type "String"
	init_value "
            \"ACTION_ARGUMENT_SET_TEXT_CHARSEQUENCE\""
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Argument for specifying the text content to set
<p>
<strong>Type:</strong> CharSequence<br>
<strong>Actions:</strong> {@link #ACTION_SET_TEXT}
</p>

@see #ACTION_SET_TEXT
"
      end

      attribute 750722 "FOCUS_INPUT"
	class_attribute const_attribute public explicit_type "int"
	init_value " 1"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Focus types

The input focus.
"
      end

      attribute 750850 "FOCUS_ACCESSIBILITY"
	class_attribute const_attribute public explicit_type "int"
	init_value " 2"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "The accessibility focus.
"
      end

      attribute 750978 "MOVEMENT_GRANULARITY_CHARACTER"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x00000001"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Movement granularities

Movement granularity bit for traversing the text of a node by character.
"
      end

      attribute 751106 "MOVEMENT_GRANULARITY_WORD"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x00000002"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Movement granularity bit for traversing the text of a node by word.
"
      end

      attribute 751234 "MOVEMENT_GRANULARITY_LINE"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x00000004"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Movement granularity bit for traversing the text of a node by line.
"
      end

      attribute 751362 "MOVEMENT_GRANULARITY_PARAGRAPH"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x00000008"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Movement granularity bit for traversing the text of a node by paragraph.
"
      end

      attribute 751490 "MOVEMENT_GRANULARITY_PAGE"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x00000010"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Movement granularity bit for traversing the text of a node by page.
"
      end

      attribute 751618 "BOOLEAN_PROPERTY_CHECKABLE"
	class_attribute const_attribute private explicit_type "int"
	init_value " 0x00000001"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Boolean attributes."
      end

      attribute 751746 "BOOLEAN_PROPERTY_CHECKED"
	class_attribute const_attribute private explicit_type "int"
	init_value " 0x00000002"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 751874 "BOOLEAN_PROPERTY_FOCUSABLE"
	class_attribute const_attribute private explicit_type "int"
	init_value " 0x00000004"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 752002 "BOOLEAN_PROPERTY_FOCUSED"
	class_attribute const_attribute private explicit_type "int"
	init_value " 0x00000008"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 752130 "BOOLEAN_PROPERTY_SELECTED"
	class_attribute const_attribute private explicit_type "int"
	init_value " 0x00000010"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 752258 "BOOLEAN_PROPERTY_CLICKABLE"
	class_attribute const_attribute private explicit_type "int"
	init_value " 0x00000020"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 752386 "BOOLEAN_PROPERTY_LONG_CLICKABLE"
	class_attribute const_attribute private explicit_type "int"
	init_value " 0x00000040"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 752514 "BOOLEAN_PROPERTY_ENABLED"
	class_attribute const_attribute private explicit_type "int"
	init_value " 0x00000080"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 752642 "BOOLEAN_PROPERTY_PASSWORD"
	class_attribute const_attribute private explicit_type "int"
	init_value " 0x00000100"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 752770 "BOOLEAN_PROPERTY_SCROLLABLE"
	class_attribute const_attribute private explicit_type "int"
	init_value " 0x00000200"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 752898 "BOOLEAN_PROPERTY_ACCESSIBILITY_FOCUSED"
	class_attribute const_attribute private explicit_type "int"
	init_value " 0x00000400"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 753026 "BOOLEAN_PROPERTY_VISIBLE_TO_USER"
	class_attribute const_attribute private explicit_type "int"
	init_value " 0x00000800"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 753154 "BOOLEAN_PROPERTY_EDITABLE"
	class_attribute const_attribute private explicit_type "int"
	init_value " 0x00001000"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 753282 "BOOLEAN_PROPERTY_OPENS_POPUP"
	class_attribute const_attribute private explicit_type "int"
	init_value " 0x00002000"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 753410 "BOOLEAN_PROPERTY_DISMISSABLE"
	class_attribute const_attribute private explicit_type "int"
	init_value " 0x00004000"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 753538 "BOOLEAN_PROPERTY_MULTI_LINE"
	class_attribute const_attribute private explicit_type "int"
	init_value " 0x00008000"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 753666 "BOOLEAN_PROPERTY_CONTENT_INVALID"
	class_attribute const_attribute private explicit_type "int"
	init_value " 0x00010000"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 753794 "VIRTUAL_DESCENDANT_ID_MASK"
	class_attribute const_attribute private explicit_type "long"
	init_value " 0xffffffff00000000L"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Bits that provide the id of a virtual descendant of a view.
"
      end

      attribute 753922 "VIRTUAL_DESCENDANT_ID_SHIFT"
	class_attribute const_attribute private explicit_type "int"
	init_value " 32"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Bit shift of {@link #VIRTUAL_DESCENDANT_ID_MASK} to get to the id for a
virtual descendant of a view. Such a descendant does not exist in the view
hierarchy and is only reported via the accessibility APIs.
"
      end

      operation 1073666 "getAccessibilityViewId"
	class_operation public explicit_return_type "int"
	nparams 1
	  param in name "accessibilityNodeId" explicit_type "long"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the accessibility view id which identifies a View in the view three.

@param accessibilityNodeId The id of an {@link AccessibilityNodeInfo}.
@return The accessibility view id part of the node id.

@hide"
      end

      operation 1073794 "getVirtualDescendantId"
	class_operation public explicit_return_type "int"
	nparams 1
	  param in name "accessibilityNodeId" explicit_type "long"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the virtual descendant id which identifies an imaginary view in a
containing View.

@param accessibilityNodeId The id of an {@link AccessibilityNodeInfo}.
@return The virtual view id part of the node id.

@hide"
      end

      operation 1073922 "makeNodeId"
	class_operation public explicit_return_type "long"
	nparams 2
	  param in name "accessibilityViewId" explicit_type "int"
	  param in name "virtualDescendantId" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Makes a node id by shifting the <code>virtualDescendantId</code>
by {@link #VIRTUAL_DESCENDANT_ID_SHIFT} and taking
the bitwise or with the <code>accessibilityViewId</code>.

@param accessibilityViewId A View accessibility id.
@param virtualDescendantId A virtual descendant id.
@return The node id.

@hide"
      end

      attribute 754050 "MAX_POOL_SIZE"
	class_attribute const_attribute private explicit_type "int"
	init_value " 50"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Housekeeping."
      end

      classrelation 276482 // sPool (<unidirectional association>)
	relation 275586 --->
	  stereotype "SynchronizedPool"
	  a role_name "sPool" init_value "
            new SynchronizedPool<AccessibilityNodeInfo>(MAX_POOL_SIZE)" class_relation const_relation private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${stereotype}<${type}> ${name}${value};
"
	    classrelation_ref 276482 // sPool (<unidirectional association>)
	  b parent class_ref 208514 // AccessibilityNodeInfo
      end

      attribute 754178 "mSealed"
	private explicit_type "boolean"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 754306 "mWindowId"
	private explicit_type "int"
	init_value " UNDEFINED_ITEM_ID"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Data."
      end

      attribute 754434 "mSourceNodeId"
	private explicit_type "long"
	init_value " ROOT_NODE_ID"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 754562 "mParentNodeId"
	private explicit_type "long"
	init_value " ROOT_NODE_ID"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 754690 "mLabelForId"
	private explicit_type "long"
	init_value " ROOT_NODE_ID"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 754818 "mLabeledById"
	private explicit_type "long"
	init_value " ROOT_NODE_ID"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 754946 "mBooleanProperties"
	private explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 755074 "mBoundsInParent"
	const_attribute private explicit_type "Rect"
	init_value " new Rect()"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 755202 "mBoundsInScreen"
	const_attribute private explicit_type "Rect"
	init_value " new Rect()"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 755330 "mPackageName"
	private explicit_type "CharSequence"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 755458 "mClassName"
	private explicit_type "CharSequence"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 755586 "mText"
	private explicit_type "CharSequence"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 755714 "mError"
	private explicit_type "CharSequence"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 755842 "mContentDescription"
	private explicit_type "CharSequence"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 755970 "mViewIdResourceName"
	private explicit_type "String"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 756098 "mChildNodeIds"
	private explicit_type "LongArray"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      class 248194 "AccessibilityAction"
	visibility public 
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	final java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	classrelation 277122 // ACTION_FOCUS (<unidirectional association>)
	  relation 276226 --->
	    a role_name "ACTION_FOCUS" init_value "
                new AccessibilityAction(
                        AccessibilityNodeInfo.ACTION_FOCUS, null)" class_relation const_relation public
	      comment "
Action that gives input focus to the node.

"
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 277122 // ACTION_FOCUS (<unidirectional association>)
	    b parent class_ref 248194 // AccessibilityAction
	end

	classrelation 277250 // ACTION_CLEAR_FOCUS (<unidirectional association>)
	  relation 276354 --->
	    a role_name "ACTION_CLEAR_FOCUS" init_value "
                new AccessibilityAction(
                        AccessibilityNodeInfo.ACTION_CLEAR_FOCUS, null)" class_relation const_relation public
	      comment "
Action that clears input focus of the node.

"
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 277250 // ACTION_CLEAR_FOCUS (<unidirectional association>)
	    b parent class_ref 248194 // AccessibilityAction
	end

	classrelation 277378 // ACTION_SELECT (<unidirectional association>)
	  relation 276482 --->
	    a role_name "ACTION_SELECT" init_value "
                new AccessibilityAction(
                        AccessibilityNodeInfo.ACTION_SELECT, null)" class_relation const_relation public
	      comment "
 Action that selects the node.

"
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 277378 // ACTION_SELECT (<unidirectional association>)
	    b parent class_ref 248194 // AccessibilityAction
	end

	classrelation 277506 // ACTION_CLEAR_SELECTION (<unidirectional association>)
	  relation 276610 --->
	    a role_name "ACTION_CLEAR_SELECTION" init_value "
                new AccessibilityAction(
                        AccessibilityNodeInfo.ACTION_CLEAR_SELECTION, null)" class_relation const_relation public
	      comment "
Action that deselects the node.

"
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 277506 // ACTION_CLEAR_SELECTION (<unidirectional association>)
	    b parent class_ref 248194 // AccessibilityAction
	end

	classrelation 277634 // ACTION_CLICK (<unidirectional association>)
	  relation 276738 --->
	    a role_name "ACTION_CLICK" init_value "
                new AccessibilityAction(
                        AccessibilityNodeInfo.ACTION_CLICK, null)" class_relation const_relation public
	      comment "
Action that clicks on the node info.

"
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 277634 // ACTION_CLICK (<unidirectional association>)
	    b parent class_ref 248194 // AccessibilityAction
	end

	classrelation 277762 // ACTION_LONG_CLICK (<unidirectional association>)
	  relation 276866 --->
	    a role_name "ACTION_LONG_CLICK" init_value "
                new AccessibilityAction(
                        AccessibilityNodeInfo.ACTION_LONG_CLICK, null)" class_relation const_relation public
	      comment "
Action that long clicks on the node.

"
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 277762 // ACTION_LONG_CLICK (<unidirectional association>)
	    b parent class_ref 248194 // AccessibilityAction
	end

	classrelation 277890 // ACTION_ACCESSIBILITY_FOCUS (<unidirectional association>)
	  relation 276994 --->
	    a role_name "ACTION_ACCESSIBILITY_FOCUS" init_value "
                new AccessibilityAction(
                        AccessibilityNodeInfo.ACTION_ACCESSIBILITY_FOCUS, null)" class_relation const_relation public
	      comment "
Action that gives accessibility focus to the node.

"
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 277890 // ACTION_ACCESSIBILITY_FOCUS (<unidirectional association>)
	    b parent class_ref 248194 // AccessibilityAction
	end

	classrelation 278018 // ACTION_CLEAR_ACCESSIBILITY_FOCUS (<unidirectional association>)
	  relation 277122 --->
	    a role_name "ACTION_CLEAR_ACCESSIBILITY_FOCUS" init_value "
                new AccessibilityAction(
                        AccessibilityNodeInfo.ACTION_CLEAR_ACCESSIBILITY_FOCUS, null)" class_relation const_relation public
	      comment "
Action that clears accessibility focus of the node.

"
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 278018 // ACTION_CLEAR_ACCESSIBILITY_FOCUS (<unidirectional association>)
	    b parent class_ref 248194 // AccessibilityAction
	end

	classrelation 278146 // ACTION_NEXT_AT_MOVEMENT_GRANULARITY (<unidirectional association>)
	  relation 277250 --->
	    a role_name "ACTION_NEXT_AT_MOVEMENT_GRANULARITY" init_value "
                new AccessibilityAction(
                        AccessibilityNodeInfo.ACTION_NEXT_AT_MOVEMENT_GRANULARITY, null)" class_relation const_relation public
	      comment "
Action that requests to go to the next entity in this node's text
at a given movement granularity. For example, move to the next character,
word, etc.
<p>
<strong>Arguments:</strong>
{@link AccessibilityNodeInfo#ACTION_ARGUMENT_MOVEMENT_GRANULARITY_INT
 AccessibilityNodeInfo.ACTION_ARGUMENT_MOVEMENT_GRANULARITY_INT},
{@link AccessibilityNodeInfo#ACTION_ARGUMENT_EXTEND_SELECTION_BOOLEAN
 AccessibilityNodeInfo.ACTION_ARGUMENT_EXTEND_SELECTION_BOOLEAN}<br>
<strong>Example:</strong> Move to the previous character and do not extend selection.
<code><pre><p>
  Bundle arguments = new Bundle();
  arguments.putInt(AccessibilityNodeInfo.ACTION_ARGUMENT_MOVEMENT_GRANULARITY_INT,
          AccessibilityNodeInfo.MOVEMENT_GRANULARITY_CHARACTER);
  arguments.putBoolean(AccessibilityNodeInfo.ACTION_ARGUMENT_EXTEND_SELECTION_BOOLEAN,
          false);
  info.performAction(AccessibilityAction.ACTION_NEXT_AT_MOVEMENT_GRANULARITY.getId(),
          arguments);
</code></pre></p>
</p>

@see AccessibilityNodeInfo#ACTION_ARGUMENT_MOVEMENT_GRANULARITY_INT
 AccessibilityNodeInfo.ACTION_ARGUMENT_MOVEMENT_GRANULARITY_INT
@see AccessibilityNodeInfo#ACTION_ARGUMENT_EXTEND_SELECTION_BOOLEAN
 AccessibilityNodeInfo.ACTION_ARGUMENT_EXTEND_SELECTION_BOOLEAN

@see AccessibilityNodeInfo#setMovementGranularities(int)
 AccessibilityNodeInfo.ACTION_ARGUMENT_EXTEND_SELECTION_BOOLEAN
@see AccessibilityNodeInfo#getMovementGranularities()
 AccessibilityNodeInfo.getMovementGranularities()

@see AccessibilityNodeInfo#MOVEMENT_GRANULARITY_CHARACTER
 AccessibilityNodeInfo.MOVEMENT_GRANULARITY_CHARACTER
@see AccessibilityNodeInfo#MOVEMENT_GRANULARITY_WORD
 AccessibilityNodeInfo.MOVEMENT_GRANULARITY_WORD
@see AccessibilityNodeInfo#MOVEMENT_GRANULARITY_LINE
 AccessibilityNodeInfo.MOVEMENT_GRANULARITY_LINE
@see AccessibilityNodeInfo#MOVEMENT_GRANULARITY_PARAGRAPH
 AccessibilityNodeInfo.MOVEMENT_GRANULARITY_PARAGRAPH
@see AccessibilityNodeInfo#MOVEMENT_GRANULARITY_PAGE
 AccessibilityNodeInfo.MOVEMENT_GRANULARITY_PAGE

"
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 278146 // ACTION_NEXT_AT_MOVEMENT_GRANULARITY (<unidirectional association>)
	    b parent class_ref 248194 // AccessibilityAction
	end

	classrelation 278274 // ACTION_PREVIOUS_AT_MOVEMENT_GRANULARITY (<unidirectional association>)
	  relation 277378 --->
	    a role_name "ACTION_PREVIOUS_AT_MOVEMENT_GRANULARITY" init_value "
                new AccessibilityAction(
                        AccessibilityNodeInfo.ACTION_PREVIOUS_AT_MOVEMENT_GRANULARITY, null)" class_relation const_relation public
	      comment "
Action that requests to go to the previous entity in this node's text
at a given movement granularity. For example, move to the next character,
word, etc.
<p>
<strong>Arguments:</strong>
{@link AccessibilityNodeInfo#ACTION_ARGUMENT_MOVEMENT_GRANULARITY_INT
 AccessibilityNodeInfo.ACTION_ARGUMENT_MOVEMENT_GRANULARITY_INT},
{@link AccessibilityNodeInfo#ACTION_ARGUMENT_EXTEND_SELECTION_BOOLEAN
 AccessibilityNodeInfo.ACTION_ARGUMENT_EXTEND_SELECTION_BOOLEAN}<br>
<strong>Example:</strong> Move to the next character and do not extend selection.
<code><pre><p>
  Bundle arguments = new Bundle();
  arguments.putInt(AccessibilityNodeInfo.ACTION_ARGUMENT_MOVEMENT_GRANULARITY_INT,
          AccessibilityNodeInfo.MOVEMENT_GRANULARITY_CHARACTER);
  arguments.putBoolean(AccessibilityNodeInfo.ACTION_ARGUMENT_EXTEND_SELECTION_BOOLEAN,
          false);
  info.performAction(AccessibilityAction.ACTION_PREVIOUS_AT_MOVEMENT_GRANULARITY.getId(),
          arguments);
</code></pre></p>
</p>

@see AccessibilityNodeInfo#ACTION_ARGUMENT_MOVEMENT_GRANULARITY_INT
 AccessibilityNodeInfo.ACTION_ARGUMENT_MOVEMENT_GRANULARITY_INT
@see AccessibilityNodeInfo#ACTION_ARGUMENT_EXTEND_SELECTION_BOOLEAN
 AccessibilityNodeInfo.ACTION_ARGUMENT_EXTEND_SELECTION_BOOLEAN

@see AccessibilityNodeInfo#setMovementGranularities(int)
  AccessibilityNodeInfo.setMovementGranularities(int)
@see AccessibilityNodeInfo#getMovementGranularities()
 AccessibilityNodeInfo.getMovementGranularities()

@see AccessibilityNodeInfo#MOVEMENT_GRANULARITY_CHARACTER
 AccessibilityNodeInfo.MOVEMENT_GRANULARITY_CHARACTER
@see AccessibilityNodeInfo#MOVEMENT_GRANULARITY_WORD
 AccessibilityNodeInfo.MOVEMENT_GRANULARITY_WORD
@see AccessibilityNodeInfo#MOVEMENT_GRANULARITY_LINE
 AccessibilityNodeInfo.MOVEMENT_GRANULARITY_LINE
@see AccessibilityNodeInfo#MOVEMENT_GRANULARITY_PARAGRAPH
 AccessibilityNodeInfo.MOVEMENT_GRANULARITY_PARAGRAPH
@see AccessibilityNodeInfo#MOVEMENT_GRANULARITY_PAGE
 AccessibilityNodeInfo.MOVEMENT_GRANULARITY_PAGE

"
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 278274 // ACTION_PREVIOUS_AT_MOVEMENT_GRANULARITY (<unidirectional association>)
	    b parent class_ref 248194 // AccessibilityAction
	end

	classrelation 278402 // ACTION_NEXT_HTML_ELEMENT (<unidirectional association>)
	  relation 277506 --->
	    a role_name "ACTION_NEXT_HTML_ELEMENT" init_value "
                new AccessibilityAction(
                        AccessibilityNodeInfo.ACTION_NEXT_HTML_ELEMENT, null)" class_relation const_relation public
	      comment "
Action to move to the next HTML element of a given type. For example, move
to the BUTTON, INPUT, TABLE, etc.
<p>
<strong>Arguments:</strong>
{@link AccessibilityNodeInfo#ACTION_ARGUMENT_HTML_ELEMENT_STRING
 AccessibilityNodeInfo.ACTION_ARGUMENT_HTML_ELEMENT_STRING}<br>
<strong>Example:</strong>
<code><pre><p>
  Bundle arguments = new Bundle();
  arguments.putString(AccessibilityNodeInfo.ACTION_ARGUMENT_HTML_ELEMENT_STRING, \"BUTTON\");
  info.performAction(AccessibilityAction.ACTION_NEXT_HTML_ELEMENT.getId(), arguments);
</code></pre></p>
</p>

"
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 278402 // ACTION_NEXT_HTML_ELEMENT (<unidirectional association>)
	    b parent class_ref 248194 // AccessibilityAction
	end

	classrelation 278530 // ACTION_PREVIOUS_HTML_ELEMENT (<unidirectional association>)
	  relation 277634 --->
	    a role_name "ACTION_PREVIOUS_HTML_ELEMENT" init_value "
                new AccessibilityAction(
                        AccessibilityNodeInfo.ACTION_PREVIOUS_HTML_ELEMENT, null)" class_relation const_relation public
	      comment "
Action to move to the previous HTML element of a given type. For example, move
to the BUTTON, INPUT, TABLE, etc.
<p>
<strong>Arguments:</strong>
{@link AccessibilityNodeInfo#ACTION_ARGUMENT_HTML_ELEMENT_STRING
 AccessibilityNodeInfo.ACTION_ARGUMENT_HTML_ELEMENT_STRING}<br>
<strong>Example:</strong>
<code><pre><p>
  Bundle arguments = new Bundle();
  arguments.putString(AccessibilityNodeInfo.ACTION_ARGUMENT_HTML_ELEMENT_STRING, \"BUTTON\");
  info.performAction(AccessibilityAction.ACTION_PREVIOUS_HTML_ELEMENT.getId(), arguments);
</code></pre></p>
</p>

"
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 278530 // ACTION_PREVIOUS_HTML_ELEMENT (<unidirectional association>)
	    b parent class_ref 248194 // AccessibilityAction
	end

	classrelation 278658 // ACTION_SCROLL_FORWARD (<unidirectional association>)
	  relation 277762 --->
	    a role_name "ACTION_SCROLL_FORWARD" init_value "
                new AccessibilityAction(
                        AccessibilityNodeInfo.ACTION_SCROLL_FORWARD, null)" class_relation const_relation public
	      comment "
Action to scroll the node content forward.

"
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 278658 // ACTION_SCROLL_FORWARD (<unidirectional association>)
	    b parent class_ref 248194 // AccessibilityAction
	end

	classrelation 278786 // ACTION_SCROLL_BACKWARD (<unidirectional association>)
	  relation 277890 --->
	    a role_name "ACTION_SCROLL_BACKWARD" init_value "
                new AccessibilityAction(
                        AccessibilityNodeInfo.ACTION_SCROLL_BACKWARD, null)" class_relation const_relation public
	      comment "
Action to scroll the node content backward.

"
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 278786 // ACTION_SCROLL_BACKWARD (<unidirectional association>)
	    b parent class_ref 248194 // AccessibilityAction
	end

	classrelation 278914 // ACTION_COPY (<unidirectional association>)
	  relation 278018 --->
	    a role_name "ACTION_COPY" init_value "
                new AccessibilityAction(
                        AccessibilityNodeInfo.ACTION_COPY, null)" class_relation const_relation public
	      comment "
Action to copy the current selection to the clipboard.

"
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 278914 // ACTION_COPY (<unidirectional association>)
	    b parent class_ref 248194 // AccessibilityAction
	end

	classrelation 279042 // ACTION_PASTE (<unidirectional association>)
	  relation 278146 --->
	    a role_name "ACTION_PASTE" init_value "
                new AccessibilityAction(
                        AccessibilityNodeInfo.ACTION_PASTE, null)" class_relation const_relation public
	      comment "
Action to paste the current clipboard content.

"
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 279042 // ACTION_PASTE (<unidirectional association>)
	    b parent class_ref 248194 // AccessibilityAction
	end

	classrelation 279170 // ACTION_CUT (<unidirectional association>)
	  relation 278274 --->
	    a role_name "ACTION_CUT" init_value "
                new AccessibilityAction(
                        AccessibilityNodeInfo.ACTION_CUT, null)" class_relation const_relation public
	      comment "
Action to cut the current selection and place it to the clipboard.

"
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 279170 // ACTION_CUT (<unidirectional association>)
	    b parent class_ref 248194 // AccessibilityAction
	end

	classrelation 279298 // ACTION_SET_SELECTION (<unidirectional association>)
	  relation 278402 --->
	    a role_name "ACTION_SET_SELECTION" init_value "
                new AccessibilityAction(
                        AccessibilityNodeInfo.ACTION_SET_SELECTION, null)" class_relation const_relation public
	      comment "
Action to set the selection. Performing this action with no arguments
clears the selection.
<p>
<strong>Arguments:</strong>
{@link AccessibilityNodeInfo#ACTION_ARGUMENT_SELECTION_START_INT
 AccessibilityNodeInfo.ACTION_ARGUMENT_SELECTION_START_INT},
{@link AccessibilityNodeInfo#ACTION_ARGUMENT_SELECTION_END_INT
 AccessibilityNodeInfo.ACTION_ARGUMENT_SELECTION_END_INT}<br>
<strong>Example:</strong>
<code><pre><p>
  Bundle arguments = new Bundle();
  arguments.putInt(AccessibilityNodeInfo.ACTION_ARGUMENT_SELECTION_START_INT, 1);
  arguments.putInt(AccessibilityNodeInfo.ACTION_ARGUMENT_SELECTION_END_INT, 2);
  info.performAction(AccessibilityAction.ACTION_SET_SELECTION.getId(), arguments);
</code></pre></p>
</p>

@see AccessibilityNodeInfo#ACTION_ARGUMENT_SELECTION_START_INT
 AccessibilityNodeInfo.ACTION_ARGUMENT_SELECTION_START_INT
@see AccessibilityNodeInfo#ACTION_ARGUMENT_SELECTION_END_INT
 AccessibilityNodeInfo.ACTION_ARGUMENT_SELECTION_END_INT

"
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 279298 // ACTION_SET_SELECTION (<unidirectional association>)
	    b parent class_ref 248194 // AccessibilityAction
	end

	classrelation 279426 // ACTION_EXPAND (<unidirectional association>)
	  relation 278530 --->
	    a role_name "ACTION_EXPAND" init_value "
                new AccessibilityAction(
                        AccessibilityNodeInfo.ACTION_EXPAND, null)" class_relation const_relation public
	      comment "
Action to expand an expandable node.

"
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 279426 // ACTION_EXPAND (<unidirectional association>)
	    b parent class_ref 248194 // AccessibilityAction
	end

	classrelation 279554 // ACTION_COLLAPSE (<unidirectional association>)
	  relation 278658 --->
	    a role_name "ACTION_COLLAPSE" init_value "
                new AccessibilityAction(
                        AccessibilityNodeInfo.ACTION_COLLAPSE, null)" class_relation const_relation public
	      comment "
Action to collapse an expandable node.

"
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 279554 // ACTION_COLLAPSE (<unidirectional association>)
	    b parent class_ref 248194 // AccessibilityAction
	end

	classrelation 279682 // ACTION_DISMISS (<unidirectional association>)
	  relation 278786 --->
	    a role_name "ACTION_DISMISS" init_value "
                new AccessibilityAction(
                        AccessibilityNodeInfo.ACTION_DISMISS, null)" class_relation const_relation public
	      comment "
Action to dismiss a dismissable node.

"
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 279682 // ACTION_DISMISS (<unidirectional association>)
	    b parent class_ref 248194 // AccessibilityAction
	end

	classrelation 279810 // ACTION_SET_TEXT (<unidirectional association>)
	  relation 278914 --->
	    a role_name "ACTION_SET_TEXT" init_value "
                new AccessibilityAction(
                        AccessibilityNodeInfo.ACTION_SET_TEXT, null)" class_relation const_relation public
	      comment "
Action that sets the text of the node. Performing the action without argument,
using <code> null</code> or empty {@link CharSequence} will clear the text. This
action will also put the cursor at the end of text.
<p>
<strong>Arguments:</strong>
{@link AccessibilityNodeInfo#ACTION_ARGUMENT_SET_TEXT_CHARSEQUENCE
 AccessibilityNodeInfo.ACTION_ARGUMENT_SET_TEXT_CHARSEQUENCE}<br>
<strong>Example:</strong>
<code><pre><p>
  Bundle arguments = new Bundle();
  arguments.putCharSequence(AccessibilityNodeInfo.ACTION_ARGUMENT_SET_TEXT_CHARSEQUENCE,
      \"android\");
  info.performAction(AccessibilityAction.ACTION_SET_TEXT.getId(), arguments);
</code></pre></p>

"
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 279810 // ACTION_SET_TEXT (<unidirectional association>)
	    b parent class_ref 248194 // AccessibilityAction
	end

	classrelation 279938 // sStandardActions (<unidirectional association>)
	  relation 279042 --->
	    stereotype "ArraySet"
	    a role_name "sStandardActions" init_value " new ArraySet<AccessibilityAction>()" class_relation const_relation private
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${stereotype}<${type}> ${name}${value};
"
	      classrelation_ref 279938 // sStandardActions (<unidirectional association>)
	    b parent class_ref 248194 // AccessibilityAction
	end

	extra_member 136194 "initialization"
	  
	  cpp "" ""
	  java "  static {
            sStandardActions.add(ACTION_FOCUS);
            sStandardActions.add(ACTION_CLEAR_FOCUS);
            sStandardActions.add(ACTION_SELECT);
            sStandardActions.add(ACTION_CLEAR_SELECTION);
            sStandardActions.add(ACTION_CLICK);
            sStandardActions.add(ACTION_LONG_CLICK);
            sStandardActions.add(ACTION_ACCESSIBILITY_FOCUS);
            sStandardActions.add(ACTION_CLEAR_ACCESSIBILITY_FOCUS);
            sStandardActions.add(ACTION_NEXT_AT_MOVEMENT_GRANULARITY);
            sStandardActions.add(ACTION_PREVIOUS_AT_MOVEMENT_GRANULARITY);
            sStandardActions.add(ACTION_NEXT_HTML_ELEMENT);
            sStandardActions.add(ACTION_PREVIOUS_HTML_ELEMENT);
            sStandardActions.add(ACTION_SCROLL_FORWARD);
            sStandardActions.add(ACTION_SCROLL_BACKWARD);
            sStandardActions.add(ACTION_COPY);
            sStandardActions.add(ACTION_PASTE);
            sStandardActions.add(ACTION_CUT);
            sStandardActions.add(ACTION_SET_SELECTION);
            sStandardActions.add(ACTION_EXPAND);
            sStandardActions.add(ACTION_COLLAPSE);
            sStandardActions.add(ACTION_DISMISS);
            sStandardActions.add(ACTION_SET_TEXT);
        }"
	  php ""
	  python ""
	  idl ""
	end

	attribute 757250 "mActionId"
	  const_attribute private explicit_type "int"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 757378 "mLabel"
	  const_attribute private explicit_type "CharSequence"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	operation 1091458 "AccessibilityAction"
	  public explicit_return_type ""
	  nparams 2
	    param in name "actionId" explicit_type "int"
	    param inout name "label" explicit_type "CharSequence"
	  cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	  cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, @Nullable ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Creates a new AccessibilityAction. For adding a standard action without a specific label,
use the static constants.

You can also override the description for one the standard actions. Below is an example
how to override the standard click action by adding a custom label:
<pre>
  AccessibilityAction action = new AccessibilityAction(
          AccessibilityAction.ACTION_ACTION_CLICK, getLocalizedLabel());
  node.addAction(action);
</pre>

@param actionId The id for this action. This should either be one of the
                standard actions or a specific action for your app. In that case it is
                required to use a resource identifier.
@param label The label for the new AccessibilityAction."
	end

	operation 1091586 "getId"
	  public explicit_return_type "int"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Gets the id for this action.

@return The action id."
	end

	operation 1091714 "getLabel"
	  public explicit_return_type "CharSequence"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Gets the label for this action. Its purpose is to describe the
action to user.

@return The label."
	end

	operation 1091842 "hashCode"
	  public explicit_return_type "int"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 1091970 "equals"
	  public explicit_return_type "boolean"
	  nparams 1
	    param inout name "other" explicit_type "Object"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 1092098 "toString"
	  public explicit_return_type "String"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end
      end

      classrelation 276610 // mActions (<unidirectional association>)
	relation 275714 --->
	  stereotype "ArrayList"
	  a role_name "mActions" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${stereotype}<${type}> ${name}${value};
"
	    classrelation_ref 276610 // mActions (<unidirectional association>)
	  b parent class_ref 248194 // AccessibilityAction
      end

      attribute 756226 "mMaxTextLength"
	private explicit_type "int"
	init_value " -1"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 756354 "mMovementGranularities"
	private explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 756482 "mTextSelectionStart"
	private explicit_type "int"
	init_value " UNDEFINED_SELECTION_INDEX"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 756610 "mTextSelectionEnd"
	private explicit_type "int"
	init_value " UNDEFINED_SELECTION_INDEX"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 756738 "mInputType"
	private explicit_type "int"
	init_value " InputType.TYPE_NULL"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 756866 "mLiveRegion"
	private explicit_type "int"
	init_value " View.ACCESSIBILITY_LIVE_REGION_NONE"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 756994 "mExtras"
	private explicit_type "Bundle"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 757122 "mConnectionId"
	private explicit_type "int"
	init_value " UNDEFINED_CONNECTION_ID"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      class 248322 "RangeInfo"
	visibility public 
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	final java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	attribute 757506 "MAX_POOL_SIZE"
	  class_attribute const_attribute private explicit_type "int"
	  init_value " 10"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 757634 "RANGE_TYPE_INT"
	  class_attribute const_attribute public explicit_type "int"
	  init_value " 0"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  comment " Range type: integer. "
	end

	attribute 757762 "RANGE_TYPE_FLOAT"
	  class_attribute const_attribute public explicit_type "int"
	  init_value " 1"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  comment " Range type: float. "
	end

	attribute 757890 "RANGE_TYPE_PERCENT"
	  class_attribute const_attribute public explicit_type "int"
	  init_value " 2"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  comment " Range type: percent with values from zero to one."
	end

	classrelation 280066 // sPool (<unidirectional association>)
	  relation 279170 --->
	    stereotype "SynchronizedPool"
	    a role_name "sPool" init_value "
                new SynchronizedPool<AccessibilityNodeInfo.RangeInfo>(MAX_POOL_SIZE)" class_relation const_relation private
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${stereotype}<${type}> ${name}${value};
"
	      classrelation_ref 280066 // sPool (<unidirectional association>)
	    b parent class_ref 248322 // RangeInfo
	end

	attribute 758018 "mType"
	  private explicit_type "int"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 758146 "mMin"
	  private explicit_type "float"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 758274 "mMax"
	  private explicit_type "float"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 758402 "mCurrent"
	  private explicit_type "float"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	operation 1092226 "obtain"
	  class_operation public return_type class_ref 248322 // RangeInfo
	  nparams 1
	    param inout name "other" type class_ref 248322 // RangeInfo
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Obtains a pooled instance that is a clone of another one.

@param other The instance to clone.

@hide"
	end

	operation 1092354 "obtain"
	  class_operation public return_type class_ref 248322 // RangeInfo
	  nparams 4
	    param in name "type" explicit_type "int"
	    param in name "min" explicit_type "float"
	    param in name "max" explicit_type "float"
	    param in name "current" explicit_type "float"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Obtains a pooled instance.

@param type The type of the range.
@param min The min value.
@param max The max value.
@param current The current value."
	end

	operation 1092482 "RangeInfo"
	  private explicit_return_type ""
	  nparams 4
	    param in name "type" explicit_type "int"
	    param in name "min" explicit_type "float"
	    param in name "max" explicit_type "float"
	    param in name "current" explicit_type "float"
	  cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	  cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Creates a new range.

@param type The type of the range.
@param min The min value.
@param max The max value.
@param current The current value."
	end

	operation 1092610 "getType"
	  public explicit_return_type "int"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Gets the range type.

@return The range type.

@see #RANGE_TYPE_INT
@see #RANGE_TYPE_FLOAT
@see #RANGE_TYPE_PERCENT"
	end

	operation 1092738 "getMin"
	  public explicit_return_type "float"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Gets the min value.

@return The min value."
	end

	operation 1092866 "getMax"
	  public explicit_return_type "float"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Gets the max value.

@return The max value."
	end

	operation 1092994 "getCurrent"
	  public explicit_return_type "float"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Gets the current value.

@return The current value."
	end

	operation 1093122 "recycle"
	  package explicit_return_type "void"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Recycles this instance."
	end

	operation 1093250 "clear"
	  private explicit_return_type "void"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      classrelation 276738 // mRangeInfo (<unidirectional association>)
	relation 275842 --->
	  a role_name "mRangeInfo" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 276738 // mRangeInfo (<unidirectional association>)
	  b parent class_ref 248322 // RangeInfo
      end

      class 248450 "CollectionInfo"
	visibility public 
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	final java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	attribute 758530 "SELECTION_MODE_NONE"
	  class_attribute const_attribute public explicit_type "int"
	  init_value " 0"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  comment " Selection mode where items are not selectable. "
	end

	attribute 758658 "SELECTION_MODE_SINGLE"
	  class_attribute const_attribute public explicit_type "int"
	  init_value " 1"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  comment " Selection mode where a single item may be selected. "
	end

	attribute 758786 "SELECTION_MODE_MULTIPLE"
	  class_attribute const_attribute public explicit_type "int"
	  init_value " 2"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  comment " Selection mode where multiple items may be selected. "
	end

	attribute 758914 "MAX_POOL_SIZE"
	  class_attribute const_attribute private explicit_type "int"
	  init_value " 20"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	classrelation 280194 // sPool (<unidirectional association>)
	  relation 279298 --->
	    stereotype "SynchronizedPool"
	    a role_name "sPool" init_value "
                new SynchronizedPool<CollectionInfo>(MAX_POOL_SIZE)" class_relation const_relation private
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${stereotype}<${type}> ${name}${value};
"
	      classrelation_ref 280194 // sPool (<unidirectional association>)
	    b parent class_ref 248450 // CollectionInfo
	end

	attribute 759042 "mRowCount"
	  private explicit_type "int"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 759170 "mColumnCount"
	  private explicit_type "int"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 759298 "mHierarchical"
	  private explicit_type "boolean"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 759426 "mSelectionMode"
	  private explicit_type "int"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	operation 1093378 "obtain"
	  class_operation public return_type class_ref 248450 // CollectionInfo
	  nparams 1
	    param inout name "other" type class_ref 248450 // CollectionInfo
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Obtains a pooled instance that is a clone of another one.

@param other The instance to clone.
@hide"
	end

	operation 1093506 "obtain"
	  class_operation public return_type class_ref 248450 // CollectionInfo
	  nparams 3
	    param in name "rowCount" explicit_type "int"
	    param in name "columnCount" explicit_type "int"
	    param inout name "hierarchical" explicit_type "boolean"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Obtains a pooled instance.

@param rowCount The number of rows.
@param columnCount The number of columns.
@param hierarchical Whether the collection is hierarchical."
	end

	operation 1093634 "obtain"
	  class_operation public return_type class_ref 248450 // CollectionInfo
	  nparams 4
	    param in name "rowCount" explicit_type "int"
	    param in name "columnCount" explicit_type "int"
	    param inout name "hierarchical" explicit_type "boolean"
	    param in name "selectionMode" explicit_type "int"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Obtains a pooled instance.

@param rowCount The number of rows.
@param columnCount The number of columns.
@param hierarchical Whether the collection is hierarchical.
@param selectionMode The collection's selection mode, one of:
           <ul>
           <li>{@link #SELECTION_MODE_NONE}
           <li>{@link #SELECTION_MODE_SINGLE}
           <li>{@link #SELECTION_MODE_MULTIPLE}
           </ul>"
	end

	operation 1093762 "CollectionInfo"
	  private explicit_return_type ""
	  nparams 4
	    param in name "rowCount" explicit_type "int"
	    param in name "columnCount" explicit_type "int"
	    param inout name "hierarchical" explicit_type "boolean"
	    param in name "selectionMode" explicit_type "int"
	  cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	  cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Creates a new instance.

@param rowCount The number of rows.
@param columnCount The number of columns.
@param hierarchical Whether the collection is hierarchical.
@param selectionMode The collection's selection mode."
	end

	operation 1093890 "getRowCount"
	  public explicit_return_type "int"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Gets the number of rows.

@return The row count."
	end

	operation 1094018 "getColumnCount"
	  public explicit_return_type "int"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Gets the number of columns.

@return The column count."
	end

	operation 1094146 "isHierarchical"
	  public explicit_return_type "boolean"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Gets if the collection is a hierarchically ordered.

@return Whether the collection is hierarchical."
	end

	operation 1094274 "getSelectionMode"
	  public explicit_return_type "int"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Gets the collection's selection mode.

@return The collection's selection mode, one of:
        <ul>
        <li>{@link #SELECTION_MODE_NONE}
        <li>{@link #SELECTION_MODE_SINGLE}
        <li>{@link #SELECTION_MODE_MULTIPLE}
        </ul>"
	end

	operation 1094402 "recycle"
	  package explicit_return_type "void"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Recycles this instance."
	end

	operation 1094530 "clear"
	  private explicit_return_type "void"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      classrelation 276866 // mCollectionInfo (<unidirectional association>)
	relation 275970 --->
	  a role_name "mCollectionInfo" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 276866 // mCollectionInfo (<unidirectional association>)
	  b parent class_ref 248450 // CollectionInfo
      end

      class 248578 "CollectionItemInfo"
	visibility public 
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	final java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	attribute 759554 "MAX_POOL_SIZE"
	  class_attribute const_attribute private explicit_type "int"
	  init_value " 20"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	classrelation 280322 // sPool (<unidirectional association>)
	  relation 279426 --->
	    stereotype "SynchronizedPool"
	    a role_name "sPool" init_value "
                new SynchronizedPool<CollectionItemInfo>(MAX_POOL_SIZE)" class_relation const_relation private
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${stereotype}<${type}> ${name}${value};
"
	      classrelation_ref 280322 // sPool (<unidirectional association>)
	    b parent class_ref 248578 // CollectionItemInfo
	end

	operation 1094658 "obtain"
	  class_operation public return_type class_ref 248578 // CollectionItemInfo
	  nparams 1
	    param inout name "other" type class_ref 248578 // CollectionItemInfo
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Obtains a pooled instance that is a clone of another one.

@param other The instance to clone.
@hide"
	end

	operation 1094786 "obtain"
	  class_operation public return_type class_ref 248578 // CollectionItemInfo
	  nparams 5
	    param in name "rowIndex" explicit_type "int"
	    param in name "rowSpan" explicit_type "int"
	    param in name "columnIndex" explicit_type "int"
	    param in name "columnSpan" explicit_type "int"
	    param inout name "heading" explicit_type "boolean"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Obtains a pooled instance.

@param rowIndex The row index at which the item is located.
@param rowSpan The number of rows the item spans.
@param columnIndex The column index at which the item is located.
@param columnSpan The number of columns the item spans.
@param heading Whether the item is a heading."
	end

	operation 1094914 "obtain"
	  class_operation public return_type class_ref 248578 // CollectionItemInfo
	  nparams 6
	    param in name "rowIndex" explicit_type "int"
	    param in name "rowSpan" explicit_type "int"
	    param in name "columnIndex" explicit_type "int"
	    param in name "columnSpan" explicit_type "int"
	    param inout name "heading" explicit_type "boolean"
	    param inout name "selected" explicit_type "boolean"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Obtains a pooled instance.

@param rowIndex The row index at which the item is located.
@param rowSpan The number of rows the item spans.
@param columnIndex The column index at which the item is located.
@param columnSpan The number of columns the item spans.
@param heading Whether the item is a heading.
@param selected Whether the item is selected."
	end

	attribute 759682 "mHeading"
	  private explicit_type "boolean"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 759810 "mColumnIndex"
	  private explicit_type "int"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 759938 "mRowIndex"
	  private explicit_type "int"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 760066 "mColumnSpan"
	  private explicit_type "int"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 760194 "mRowSpan"
	  private explicit_type "int"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 760322 "mSelected"
	  private explicit_type "boolean"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	operation 1095042 "CollectionItemInfo"
	  private explicit_return_type ""
	  nparams 6
	    param in name "rowIndex" explicit_type "int"
	    param in name "rowSpan" explicit_type "int"
	    param in name "columnIndex" explicit_type "int"
	    param in name "columnSpan" explicit_type "int"
	    param inout name "heading" explicit_type "boolean"
	    param inout name "selected" explicit_type "boolean"
	  cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	  cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Creates a new instance.

@param rowIndex The row index at which the item is located.
@param rowSpan The number of rows the item spans.
@param columnIndex The column index at which the item is located.
@param columnSpan The number of columns the item spans.
@param heading Whether the item is a heading."
	end

	operation 1095170 "getColumnIndex"
	  public explicit_return_type "int"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Gets the column index at which the item is located.

@return The column index."
	end

	operation 1095298 "getRowIndex"
	  public explicit_return_type "int"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Gets the row index at which the item is located.

@return The row index."
	end

	operation 1095426 "getColumnSpan"
	  public explicit_return_type "int"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Gets the number of columns the item spans.

@return The column span."
	end

	operation 1095554 "getRowSpan"
	  public explicit_return_type "int"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Gets the number of rows the item spans.

@return The row span."
	end

	operation 1095682 "isHeading"
	  public explicit_return_type "boolean"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Gets if the collection item is a heading. For example, section
heading, table header, etc.

@return If the item is a heading."
	end

	operation 1095810 "isSelected"
	  public explicit_return_type "boolean"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Gets if the collection item is selected.

@return If the item is selected."
	end

	operation 1095938 "recycle"
	  package explicit_return_type "void"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Recycles this instance."
	end

	operation 1096066 "clear"
	  private explicit_return_type "void"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      classrelation 276994 // mCollectionItemInfo (<unidirectional association>)
	relation 276098 --->
	  a role_name "mCollectionItemInfo" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 276994 // mCollectionItemInfo (<unidirectional association>)
	  b parent class_ref 248578 // CollectionItemInfo
      end

      operation 1074050 "AccessibilityNodeInfo"
	private explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Hide constructor from clients."
      end

      operation 1074178 "setSource"
	public explicit_return_type "void"
	nparams 1
	  param inout name "source" type class_ref 208898 // View
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the source.
<p>
  <strong>Note:</strong> Cannot be called from an
  {@link android.accessibilityservice.AccessibilityService}.
  This class is made immutable before being delivered to an AccessibilityService.
</p>

@param source The info source."
      end

      operation 1074306 "setSource"
	public explicit_return_type "void"
	nparams 2
	  param inout name "root" type class_ref 208898 // View
	  param in name "virtualDescendantId" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the source to be a virtual descendant of the given <code>root</code>.
If <code>virtualDescendantId</code> is {@link View#NO_ID} the root
is set as the source.
<p>
A virtual descendant is an imaginary View that is reported as a part of the view
hierarchy for accessibility purposes. This enables custom views that draw complex
content to report themselves as a tree of virtual views, thus conveying their
logical structure.
</p>
<p>
  <strong>Note:</strong> Cannot be called from an
  {@link android.accessibilityservice.AccessibilityService}.
  This class is made immutable before being delivered to an AccessibilityService.
</p>

@param root The root of the virtual subtree.
@param virtualDescendantId The id of the virtual descendant."
      end

      operation 1074434 "findFocus"
	public return_type class_ref 208514 // AccessibilityNodeInfo
	nparams 1
	  param in name "focus" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Find the view that has the specified focus type. The search starts from
the view represented by this node info.

@param focus The focus to find. One of {@link #FOCUS_INPUT} or
        {@link #FOCUS_ACCESSIBILITY}.
@return The node info of the focused view or null.

@see #FOCUS_INPUT
@see #FOCUS_ACCESSIBILITY"
      end

      operation 1074562 "focusSearch"
	public return_type class_ref 208514 // AccessibilityNodeInfo
	nparams 1
	  param in name "direction" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Searches for the nearest view in the specified direction that can take
the input focus.

@param direction The direction. Can be one of:
    {@link View#FOCUS_DOWN},
    {@link View#FOCUS_UP},
    {@link View#FOCUS_LEFT},
    {@link View#FOCUS_RIGHT},
    {@link View#FOCUS_FORWARD},
    {@link View#FOCUS_BACKWARD}.

@return The node info for the view that can take accessibility focus."
      end

      operation 1074690 "getWindowId"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the id of the window from which the info comes from.

@return The window id."
      end

      operation 1074818 "refresh"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "bypassCache" explicit_type "boolean"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Refreshes this info with the latest state of the view it represents.
<p>
<strong>Note:</strong> If this method returns false this info is obsolete
since it represents a view that is no longer in the view tree and should
be recycled.
</p>

@param bypassCache Whether to bypass the cache.
@return Whether the refresh succeeded.

@hide"
      end

      operation 1074946 "refresh"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Refreshes this info with the latest state of the view it represents.
<p>
<strong>Note:</strong> If this method returns false this info is obsolete
since it represents a view that is no longer in the view tree and should
be recycled.
</p>
@return Whether the refresh succeeded."
      end

      operation 1075074 "getChildNodeIds"
	public explicit_return_type "LongArray"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the array containing the IDs of this node's children.

@hide"
      end

      operation 1075202 "getChildId"
	public explicit_return_type "long"
	nparams 1
	  param in name "index" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the id of the child at the specified index.

@throws IndexOutOfBoundsException when index &lt; 0 || index &gt;=
            getChildCount()
@hide"
      end

      operation 1075330 "getChildCount"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the number of children.

@return The child count."
      end

      operation 1075458 "getChild"
	public return_type class_ref 208514 // AccessibilityNodeInfo
	nparams 1
	  param in name "index" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get the child at given index.
<p>
  <strong>Note:</strong> It is a client responsibility to recycle the
    received info by calling {@link AccessibilityNodeInfo#recycle()}
    to avoid creating of multiple instances.
</p>

@param index The child index.
@return The child node.

@throws IllegalStateException If called outside of an AccessibilityService.
"
      end

      operation 1075586 "addChild"
	public explicit_return_type "void"
	nparams 1
	  param inout name "child" type class_ref 208898 // View
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Adds a child.
<p>
<strong>Note:</strong> Cannot be called from an
{@link android.accessibilityservice.AccessibilityService}.
This class is made immutable before being delivered to an AccessibilityService.
</p>

@param child The child.

@throws IllegalStateException If called from an AccessibilityService."
      end

      operation 1075714 "addChildUnchecked"
	public explicit_return_type "void"
	nparams 1
	  param inout name "child" type class_ref 208898 // View
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Unchecked version of {@link #addChild(View)} that does not verify
uniqueness. For framework use only.

@hide"
      end

      operation 1075842 "removeChild"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "child" type class_ref 208898 // View
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Removes a child. If the child was not previously added to the node,
calling this method has no effect.
<p>
<strong>Note:</strong> Cannot be called from an
{@link android.accessibilityservice.AccessibilityService}.
This class is made immutable before being delivered to an AccessibilityService.
</p>

@param child The child.
@return true if the child was present

@throws IllegalStateException If called from an AccessibilityService."
      end

      operation 1075970 "addChild"
	public explicit_return_type "void"
	nparams 2
	  param inout name "root" type class_ref 208898 // View
	  param in name "virtualDescendantId" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Adds a virtual child which is a descendant of the given <code>root</code>.
If <code>virtualDescendantId</code> is {@link View#NO_ID} the root
is added as a child.
<p>
A virtual descendant is an imaginary View that is reported as a part of the view
hierarchy for accessibility purposes. This enables custom views that draw complex
content to report them selves as a tree of virtual views, thus conveying their
logical structure.
</p>

@param root The root of the virtual subtree.
@param virtualDescendantId The id of the virtual child."
      end

      operation 1076098 "addChildInternal"
	private explicit_return_type "void"
	nparams 3
	  param inout name "root" type class_ref 208898 // View
	  param in name "virtualDescendantId" explicit_type "int"
	  param inout name "checked" explicit_type "boolean"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1076226 "removeChild"
	public explicit_return_type "boolean"
	nparams 2
	  param inout name "root" type class_ref 208898 // View
	  param in name "virtualDescendantId" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Removes a virtual child which is a descendant of the given
<code>root</code>. If the child was not previously added to the node,
calling this method has no effect.

@param root The root of the virtual subtree.
@param virtualDescendantId The id of the virtual child.
@return true if the child was present
@see #addChild(View, int)"
      end

      operation 1076354 "getActionList"
	public return_type class_ref 248194 // AccessibilityAction
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}List<${type}> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the actions that can be performed on the node."
      end

      operation 1076482 "getActions"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Deprecated
"
	
	
	
	comment "Gets the actions that can be performed on the node.

@return The bit mask of with actions.

@see AccessibilityNodeInfo#ACTION_FOCUS
@see AccessibilityNodeInfo#ACTION_CLEAR_FOCUS
@see AccessibilityNodeInfo#ACTION_SELECT
@see AccessibilityNodeInfo#ACTION_CLEAR_SELECTION
@see AccessibilityNodeInfo#ACTION_ACCESSIBILITY_FOCUS
@see AccessibilityNodeInfo#ACTION_CLEAR_ACCESSIBILITY_FOCUS
@see AccessibilityNodeInfo#ACTION_CLICK
@see AccessibilityNodeInfo#ACTION_LONG_CLICK
@see AccessibilityNodeInfo#ACTION_NEXT_AT_MOVEMENT_GRANULARITY
@see AccessibilityNodeInfo#ACTION_PREVIOUS_AT_MOVEMENT_GRANULARITY
@see AccessibilityNodeInfo#ACTION_NEXT_HTML_ELEMENT
@see AccessibilityNodeInfo#ACTION_PREVIOUS_HTML_ELEMENT
@see AccessibilityNodeInfo#ACTION_SCROLL_FORWARD
@see AccessibilityNodeInfo#ACTION_SCROLL_BACKWARD

@deprecated Use {@link #getActionList()}."
      end

      operation 1076610 "addAction"
	public explicit_return_type "void"
	nparams 1
	  param inout name "action" type class_ref 248194 // AccessibilityAction
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Adds an action that can be performed on the node.
<p>
To add a standard action use the static constants on {@link AccessibilityAction}.
To add a custom action create a new {@link AccessibilityAction} by passing in a
resource id from your application as the action id and an optional label that
describes the action. To override one of the standard actions use as the action
id of a standard action id such as {@link #ACTION_CLICK} and an optional label that
describes the action.
</p>
<p>
  <strong>Note:</strong> Cannot be called from an
  {@link android.accessibilityservice.AccessibilityService}.
  This class is made immutable before being delivered to an AccessibilityService.
</p>

@param action The action.

@throws IllegalStateException If called from an AccessibilityService."
      end

      operation 1076738 "addAction"
	public explicit_return_type "void"
	nparams 1
	  param in name "action" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Deprecated
"
	
	
	
	comment "Adds an action that can be performed on the node.
<p>
  <strong>Note:</strong> Cannot be called from an
  {@link android.accessibilityservice.AccessibilityService}.
  This class is made immutable before being delivered to an AccessibilityService.
</p>

@param action The action.

@throws IllegalStateException If called from an AccessibilityService.
@throws IllegalArgumentException If the argument is not one of the standard actions.

@deprecated This has been deprecated for {@link #addAction(AccessibilityAction)}"
      end

      operation 1076866 "removeAction"
	public explicit_return_type "void"
	nparams 1
	  param in name "action" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Deprecated
"
	
	
	
	comment "Removes an action that can be performed on the node. If the action was
not already added to the node, calling this method has no effect.
<p>
  <strong>Note:</strong> Cannot be called from an
  {@link android.accessibilityservice.AccessibilityService}.
  This class is made immutable before being delivered to an AccessibilityService.
</p>

@param action The action to be removed.

@throws IllegalStateException If called from an AccessibilityService.
@deprecated Use {@link #removeAction(AccessibilityAction)}"
      end

      operation 1076994 "removeAction"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "action" type class_ref 248194 // AccessibilityAction
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Removes an action that can be performed on the node. If the action was
not already added to the node, calling this method has no effect.
<p>
  <strong>Note:</strong> Cannot be called from an
  {@link android.accessibilityservice.AccessibilityService}.
  This class is made immutable before being delivered to an AccessibilityService.
</p>

@param action The action to be removed.
@return The action removed from the list of actions.

@throws IllegalStateException If called from an AccessibilityService."
      end

      operation 1077122 "setMaxTextLength"
	public explicit_return_type "void"
	nparams 1
	  param in name "max" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the maximum text length, or -1 for no limit.
<p>
Typically used to indicate that an editable text field has a limit on
the number of characters entered.
<p>
<strong>Note:</strong> Cannot be called from an
{@link android.accessibilityservice.AccessibilityService}.
This class is made immutable before being delivered to an AccessibilityService.

@param max The maximum text length.
@see #getMaxTextLength()

@throws IllegalStateException If called from an AccessibilityService."
      end

      operation 1077250 "getMaxTextLength"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the maximum text length for this node.

@return The maximum text length, or -1 for no limit.
@see #setMaxTextLength(int)"
      end

      operation 1077378 "setMovementGranularities"
	public explicit_return_type "void"
	nparams 1
	  param in name "granularities" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the movement granularities for traversing the text of this node.
<p>
  <strong>Note:</strong> Cannot be called from an
  {@link android.accessibilityservice.AccessibilityService}.
  This class is made immutable before being delivered to an AccessibilityService.
</p>

@param granularities The bit mask with granularities.

@throws IllegalStateException If called from an AccessibilityService."
      end

      operation 1077506 "getMovementGranularities"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the movement granularities for traversing the text of this node.

@return The bit mask with granularities."
      end

      operation 1077634 "performAction"
	public explicit_return_type "boolean"
	nparams 1
	  param in name "action" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Performs an action on the node.
<p>
  <strong>Note:</strong> An action can be performed only if the request is made
  from an {@link android.accessibilityservice.AccessibilityService}.
</p>

@param action The action to perform.
@return True if the action was performed.

@throws IllegalStateException If called outside of an AccessibilityService."
      end

      operation 1077762 "performAction"
	public explicit_return_type "boolean"
	nparams 2
	  param in name "action" explicit_type "int"
	  param inout name "arguments" explicit_type "Bundle"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Performs an action on the node.
<p>
  <strong>Note:</strong> An action can be performed only if the request is made
  from an {@link android.accessibilityservice.AccessibilityService}.
</p>

@param action The action to perform.
@param arguments A bundle with additional arguments.
@return True if the action was performed.

@throws IllegalStateException If called outside of an AccessibilityService."
      end

      operation 1077890 "findAccessibilityNodeInfosByText"
	public return_type class_ref 208514 // AccessibilityNodeInfo
	nparams 1
	  param in name "text" explicit_type "String"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}List<${type}> ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Finds {@link AccessibilityNodeInfo}s by text. The match is case
insensitive containment. The search is relative to this info i.e.
this info is the root of the traversed tree.

<p>
  <strong>Note:</strong> It is a client responsibility to recycle the
    received info by calling {@link AccessibilityNodeInfo#recycle()}
    to avoid creating of multiple instances.
</p>

@param text The searched text.
@return A list of node info."
      end

      operation 1078018 "findAccessibilityNodeInfosByViewId"
	public return_type class_ref 208514 // AccessibilityNodeInfo
	nparams 1
	  param in name "viewId" explicit_type "String"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}List<${type}> ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Finds {@link AccessibilityNodeInfo}s by the fully qualified view id's resource
name where a fully qualified id is of the from \"package:id/id_resource_name\".
For example, if the target application's package is \"foo.bar\" and the id
resource name is \"baz\", the fully qualified resource id is \"foo.bar:id/baz\".

<p>
  <strong>Note:</strong> It is a client responsibility to recycle the
    received info by calling {@link AccessibilityNodeInfo#recycle()}
    to avoid creating of multiple instances.
</p>
<p>
  <strong>Note:</strong> The primary usage of this API is for UI test automation
  and in order to report the fully qualified view id if an {@link AccessibilityNodeInfo}
  the client has to set the {@link AccessibilityServiceInfo#FLAG_REPORT_VIEW_IDS}
  flag when configuring his {@link android.accessibilityservice.AccessibilityService}.
</p>

@param viewId The fully qualified resource name of the view id to find.
@return A list of node info."
      end

      operation 1078146 "getWindow"
	public return_type class_ref 247682 // AccessibilityWindowInfo
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the window to which this node belongs.

@return The window.

@see android.accessibilityservice.AccessibilityService#getWindows()"
      end

      operation 1078274 "getParent"
	public return_type class_ref 208514 // AccessibilityNodeInfo
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the parent.
<p>
  <strong>Note:</strong> It is a client responsibility to recycle the
    received info by calling {@link AccessibilityNodeInfo#recycle()}
    to avoid creating of multiple instances.
</p>

@return The parent."
      end

      operation 1078402 "getParentNodeId"
	public explicit_return_type "long"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@return The parent node id.

@hide"
      end

      operation 1078530 "setParent"
	public explicit_return_type "void"
	nparams 1
	  param inout name "parent" type class_ref 208898 // View
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the parent.
<p>
  <strong>Note:</strong> Cannot be called from an
  {@link android.accessibilityservice.AccessibilityService}.
  This class is made immutable before being delivered to an AccessibilityService.
</p>

@param parent The parent.

@throws IllegalStateException If called from an AccessibilityService."
      end

      operation 1078658 "setParent"
	public explicit_return_type "void"
	nparams 2
	  param inout name "root" type class_ref 208898 // View
	  param in name "virtualDescendantId" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the parent to be a virtual descendant of the given <code>root</code>.
If <code>virtualDescendantId</code> equals to {@link View#NO_ID} the root
is set as the parent.
<p>
A virtual descendant is an imaginary View that is reported as a part of the view
hierarchy for accessibility purposes. This enables custom views that draw complex
content to report them selves as a tree of virtual views, thus conveying their
logical structure.
</p>
<p>
  <strong>Note:</strong> Cannot be called from an
  {@link android.accessibilityservice.AccessibilityService}.
  This class is made immutable before being delivered to an AccessibilityService.
</p>

@param root The root of the virtual subtree.
@param virtualDescendantId The id of the virtual descendant."
      end

      operation 1078786 "getBoundsInParent"
	public explicit_return_type "void"
	nparams 1
	  param inout name "outBounds" explicit_type "Rect"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the node bounds in parent coordinates.

@param outBounds The output node bounds."
      end

      operation 1078914 "setBoundsInParent"
	public explicit_return_type "void"
	nparams 1
	  param inout name "bounds" explicit_type "Rect"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the node bounds in parent coordinates.
<p>
  <strong>Note:</strong> Cannot be called from an
  {@link android.accessibilityservice.AccessibilityService}.
  This class is made immutable before being delivered to an AccessibilityService.
</p>

@param bounds The node bounds.

@throws IllegalStateException If called from an AccessibilityService."
      end

      operation 1079042 "getBoundsInScreen"
	public explicit_return_type "void"
	nparams 1
	  param inout name "outBounds" explicit_type "Rect"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the node bounds in screen coordinates.

@param outBounds The output node bounds."
      end

      operation 1079170 "setBoundsInScreen"
	public explicit_return_type "void"
	nparams 1
	  param inout name "bounds" explicit_type "Rect"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the node bounds in screen coordinates.
<p>
  <strong>Note:</strong> Cannot be called from an
  {@link android.accessibilityservice.AccessibilityService}.
  This class is made immutable before being delivered to an AccessibilityService.
</p>

@param bounds The node bounds.

@throws IllegalStateException If called from an AccessibilityService."
      end

      operation 1079298 "isCheckable"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets whether this node is checkable.

@return True if the node is checkable."
      end

      operation 1079426 "setCheckable"
	public explicit_return_type "void"
	nparams 1
	  param inout name "checkable" explicit_type "boolean"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets whether this node is checkable.
<p>
  <strong>Note:</strong> Cannot be called from an
  {@link android.accessibilityservice.AccessibilityService}.
  This class is made immutable before being delivered to an AccessibilityService.
</p>

@param checkable True if the node is checkable.

@throws IllegalStateException If called from an AccessibilityService."
      end

      operation 1079554 "isChecked"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets whether this node is checked.

@return True if the node is checked."
      end

      operation 1079682 "setChecked"
	public explicit_return_type "void"
	nparams 1
	  param inout name "checked" explicit_type "boolean"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets whether this node is checked.
<p>
  <strong>Note:</strong> Cannot be called from an
  {@link android.accessibilityservice.AccessibilityService}.
  This class is made immutable before being delivered to an AccessibilityService.
</p>

@param checked True if the node is checked.

@throws IllegalStateException If called from an AccessibilityService."
      end

      operation 1079810 "isFocusable"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets whether this node is focusable.

@return True if the node is focusable."
      end

      operation 1079938 "setFocusable"
	public explicit_return_type "void"
	nparams 1
	  param inout name "focusable" explicit_type "boolean"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets whether this node is focusable.
<p>
  <strong>Note:</strong> Cannot be called from an
  {@link android.accessibilityservice.AccessibilityService}.
  This class is made immutable before being delivered to an AccessibilityService.
</p>

@param focusable True if the node is focusable.

@throws IllegalStateException If called from an AccessibilityService."
      end

      operation 1080066 "isFocused"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets whether this node is focused.

@return True if the node is focused."
      end

      operation 1080194 "setFocused"
	public explicit_return_type "void"
	nparams 1
	  param inout name "focused" explicit_type "boolean"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets whether this node is focused.
<p>
  <strong>Note:</strong> Cannot be called from an
  {@link android.accessibilityservice.AccessibilityService}.
  This class is made immutable before being delivered to an AccessibilityService.
</p>

@param focused True if the node is focused.

@throws IllegalStateException If called from an AccessibilityService."
      end

      operation 1080322 "isVisibleToUser"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets whether this node is visible to the user.

@return Whether the node is visible to the user."
      end

      operation 1080450 "setVisibleToUser"
	public explicit_return_type "void"
	nparams 1
	  param inout name "visibleToUser" explicit_type "boolean"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets whether this node is visible to the user.
<p>
  <strong>Note:</strong> Cannot be called from an
  {@link android.accessibilityservice.AccessibilityService}.
  This class is made immutable before being delivered to an AccessibilityService.
</p>

@param visibleToUser Whether the node is visible to the user.

@throws IllegalStateException If called from an AccessibilityService."
      end

      operation 1080578 "isAccessibilityFocused"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets whether this node is accessibility focused.

@return True if the node is accessibility focused."
      end

      operation 1080706 "setAccessibilityFocused"
	public explicit_return_type "void"
	nparams 1
	  param inout name "focused" explicit_type "boolean"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets whether this node is accessibility focused.
<p>
  <strong>Note:</strong> Cannot be called from an
  {@link android.accessibilityservice.AccessibilityService}.
  This class is made immutable before being delivered to an AccessibilityService.
</p>

@param focused True if the node is accessibility focused.

@throws IllegalStateException If called from an AccessibilityService."
      end

      operation 1080834 "isSelected"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets whether this node is selected.

@return True if the node is selected."
      end

      operation 1080962 "setSelected"
	public explicit_return_type "void"
	nparams 1
	  param inout name "selected" explicit_type "boolean"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets whether this node is selected.
<p>
  <strong>Note:</strong> Cannot be called from an
  {@link android.accessibilityservice.AccessibilityService}.
  This class is made immutable before being delivered to an AccessibilityService.
</p>

@param selected True if the node is selected.

@throws IllegalStateException If called from an AccessibilityService."
      end

      operation 1081090 "isClickable"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets whether this node is clickable.

@return True if the node is clickable."
      end

      operation 1081218 "setClickable"
	public explicit_return_type "void"
	nparams 1
	  param inout name "clickable" explicit_type "boolean"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets whether this node is clickable.
<p>
  <strong>Note:</strong> Cannot be called from an
  {@link android.accessibilityservice.AccessibilityService}.
  This class is made immutable before being delivered to an AccessibilityService.
</p>

@param clickable True if the node is clickable.

@throws IllegalStateException If called from an AccessibilityService."
      end

      operation 1081346 "isLongClickable"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets whether this node is long clickable.

@return True if the node is long clickable."
      end

      operation 1081474 "setLongClickable"
	public explicit_return_type "void"
	nparams 1
	  param inout name "longClickable" explicit_type "boolean"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets whether this node is long clickable.
<p>
  <strong>Note:</strong> Cannot be called from an
  {@link android.accessibilityservice.AccessibilityService}.
  This class is made immutable before being delivered to an AccessibilityService.
</p>

@param longClickable True if the node is long clickable.

@throws IllegalStateException If called from an AccessibilityService."
      end

      operation 1081602 "isEnabled"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets whether this node is enabled.

@return True if the node is enabled."
      end

      operation 1081730 "setEnabled"
	public explicit_return_type "void"
	nparams 1
	  param inout name "enabled" explicit_type "boolean"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets whether this node is enabled.
<p>
  <strong>Note:</strong> Cannot be called from an
  {@link android.accessibilityservice.AccessibilityService}.
  This class is made immutable before being delivered to an AccessibilityService.
</p>

@param enabled True if the node is enabled.

@throws IllegalStateException If called from an AccessibilityService."
      end

      operation 1081858 "isPassword"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets whether this node is a password.

@return True if the node is a password."
      end

      operation 1081986 "setPassword"
	public explicit_return_type "void"
	nparams 1
	  param inout name "password" explicit_type "boolean"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets whether this node is a password.
<p>
  <strong>Note:</strong> Cannot be called from an
  {@link android.accessibilityservice.AccessibilityService}.
  This class is made immutable before being delivered to an AccessibilityService.
</p>

@param password True if the node is a password.

@throws IllegalStateException If called from an AccessibilityService."
      end

      operation 1082114 "isScrollable"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets if the node is scrollable.

@return True if the node is scrollable, false otherwise."
      end

      operation 1082242 "setScrollable"
	public explicit_return_type "void"
	nparams 1
	  param inout name "scrollable" explicit_type "boolean"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets if the node is scrollable.
<p>
  <strong>Note:</strong> Cannot be called from an
  {@link android.accessibilityservice.AccessibilityService}.
  This class is made immutable before being delivered to an AccessibilityService.
</p>

@param scrollable True if the node is scrollable, false otherwise.

@throws IllegalStateException If called from an AccessibilityService."
      end

      operation 1082370 "isEditable"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets if the node is editable.

@return True if the node is editable, false otherwise."
      end

      operation 1082498 "setEditable"
	public explicit_return_type "void"
	nparams 1
	  param inout name "editable" explicit_type "boolean"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets whether this node is editable.
<p>
  <strong>Note:</strong> Cannot be called from an
  {@link android.accessibilityservice.AccessibilityService}.
  This class is made immutable before being delivered to an AccessibilityService.
</p>

@param editable True if the node is editable.

@throws IllegalStateException If called from an AccessibilityService."
      end

      operation 1082626 "getCollectionInfo"
	public return_type class_ref 248450 // CollectionInfo
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the collection info if the node is a collection. A collection
child is always a collection item.

@return The collection info."
      end

      operation 1082754 "setCollectionInfo"
	public explicit_return_type "void"
	nparams 1
	  param inout name "collectionInfo" type class_ref 248450 // CollectionInfo
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the collection info if the node is a collection. A collection
child is always a collection item.
<p>
  <strong>Note:</strong> Cannot be called from an
  {@link android.accessibilityservice.AccessibilityService}.
  This class is made immutable before being delivered to an AccessibilityService.
</p>

@param collectionInfo The collection info."
      end

      operation 1082882 "getCollectionItemInfo"
	public return_type class_ref 248578 // CollectionItemInfo
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the collection item info if the node is a collection item. A collection
item is always a child of a collection.

@return The collection item info."
      end

      operation 1083010 "setCollectionItemInfo"
	public explicit_return_type "void"
	nparams 1
	  param inout name "collectionItemInfo" type class_ref 248578 // CollectionItemInfo
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the collection item info if the node is a collection item. A collection
item is always a child of a collection.
<p>
  <strong>Note:</strong> Cannot be called from an
  {@link android.accessibilityservice.AccessibilityService}.
  This class is made immutable before being delivered to an AccessibilityService.
</p>"
      end

      operation 1083138 "getRangeInfo"
	public return_type class_ref 248322 // RangeInfo
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the range info if this node is a range.

@return The range."
      end

      operation 1083266 "setRangeInfo"
	public explicit_return_type "void"
	nparams 1
	  param inout name "rangeInfo" type class_ref 248322 // RangeInfo
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the range info if this node is a range.
<p>
  <strong>Note:</strong> Cannot be called from an
  {@link android.accessibilityservice.AccessibilityService}.
  This class is made immutable before being delivered to an AccessibilityService.
</p>

@param rangeInfo The range info."
      end

      operation 1083394 "isContentInvalid"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets if the content of this node is invalid. For example,
a date is not well-formed.

@return If the node content is invalid."
      end

      operation 1083522 "setContentInvalid"
	public explicit_return_type "void"
	nparams 1
	  param inout name "contentInvalid" explicit_type "boolean"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets if the content of this node is invalid. For example,
a date is not well-formed.
<p>
  <strong>Note:</strong> Cannot be called from an
  {@link android.accessibilityservice.AccessibilityService}.
  This class is made immutable before being delivered to an AccessibilityService.
</p>

@param contentInvalid If the node content is invalid."
      end

      operation 1083650 "getLiveRegion"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the node's live region mode.
<p>
A live region is a node that contains information that is important for
the user and when it changes the user should be notified. For example,
in a login screen with a TextView that displays an \"incorrect password\"
notification, that view should be marked as a live region with mode
{@link View#ACCESSIBILITY_LIVE_REGION_POLITE}.
<p>
It is the responsibility of the accessibility service to monitor
{@link AccessibilityEvent#TYPE_WINDOW_CONTENT_CHANGED} events indicating
changes to live region nodes and their children.

@return The live region mode, or
        {@link View#ACCESSIBILITY_LIVE_REGION_NONE} if the view is not a
        live region.
@see android.view.View#getAccessibilityLiveRegion()"
      end

      operation 1083778 "setLiveRegion"
	public explicit_return_type "void"
	nparams 1
	  param in name "mode" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the node's live region mode.
<p>
<strong>Note:</strong> Cannot be called from an
{@link android.accessibilityservice.AccessibilityService}. This class is
made immutable before being delivered to an AccessibilityService.

@param mode The live region mode, or
       {@link View#ACCESSIBILITY_LIVE_REGION_NONE} if the view is not a
       live region.
@see android.view.View#setAccessibilityLiveRegion(int)"
      end

      operation 1083906 "isMultiLine"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets if the node is a multi line editable text.

@return True if the node is multi line."
      end

      operation 1084034 "setMultiLine"
	public explicit_return_type "void"
	nparams 1
	  param inout name "multiLine" explicit_type "boolean"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets if the node is a multi line editable text.
<p>
  <strong>Note:</strong> Cannot be called from an
  {@link android.accessibilityservice.AccessibilityService}.
  This class is made immutable before being delivered to an AccessibilityService.
</p>

@param multiLine True if the node is multi line."
      end

      operation 1084162 "canOpenPopup"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets if this node opens a popup or a dialog.

@return If the the node opens a popup."
      end

      operation 1084290 "setCanOpenPopup"
	public explicit_return_type "void"
	nparams 1
	  param inout name "opensPopup" explicit_type "boolean"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets if this node opens a popup or a dialog.
<p>
  <strong>Note:</strong> Cannot be called from an
  {@link android.accessibilityservice.AccessibilityService}.
  This class is made immutable before being delivered to an AccessibilityService.
</p>

@param opensPopup If the the node opens a popup."
      end

      operation 1084418 "isDismissable"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets if the node can be dismissed.

@return If the node can be dismissed."
      end

      operation 1084546 "setDismissable"
	public explicit_return_type "void"
	nparams 1
	  param inout name "dismissable" explicit_type "boolean"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets if the node can be dismissed.
<p>
  <strong>Note:</strong> Cannot be called from an
  {@link android.accessibilityservice.AccessibilityService}.
  This class is made immutable before being delivered to an AccessibilityService.
</p>

@param dismissable If the node can be dismissed."
      end

      operation 1084674 "getPackageName"
	public explicit_return_type "CharSequence"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the package this node comes from.

@return The package name."
      end

      operation 1084802 "setPackageName"
	public explicit_return_type "void"
	nparams 1
	  param inout name "packageName" explicit_type "CharSequence"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the package this node comes from.
<p>
  <strong>Note:</strong> Cannot be called from an
  {@link android.accessibilityservice.AccessibilityService}.
  This class is made immutable before being delivered to an AccessibilityService.
</p>

@param packageName The package name.

@throws IllegalStateException If called from an AccessibilityService."
      end

      operation 1084930 "getClassName"
	public explicit_return_type "CharSequence"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the class this node comes from.

@return The class name."
      end

      operation 1085058 "setClassName"
	public explicit_return_type "void"
	nparams 1
	  param inout name "className" explicit_type "CharSequence"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the class this node comes from.
<p>
  <strong>Note:</strong> Cannot be called from an
  {@link android.accessibilityservice.AccessibilityService}.
  This class is made immutable before being delivered to an AccessibilityService.
</p>

@param className The class name.

@throws IllegalStateException If called from an AccessibilityService."
      end

      operation 1085186 "getText"
	public explicit_return_type "CharSequence"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the text of this node.

@return The text."
      end

      operation 1085314 "setText"
	public explicit_return_type "void"
	nparams 1
	  param inout name "text" explicit_type "CharSequence"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the text of this node.
<p>
  <strong>Note:</strong> Cannot be called from an
  {@link android.accessibilityservice.AccessibilityService}.
  This class is made immutable before being delivered to an AccessibilityService.
</p>

@param text The text.

@throws IllegalStateException If called from an AccessibilityService."
      end

      operation 1085442 "setError"
	public explicit_return_type "void"
	nparams 1
	  param inout name "error" explicit_type "CharSequence"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the error text of this node.
<p>
  <strong>Note:</strong> Cannot be called from an
  {@link android.accessibilityservice.AccessibilityService}.
  This class is made immutable before being delivered to an AccessibilityService.
</p>

@param error The error text.

@throws IllegalStateException If called from an AccessibilityService."
      end

      operation 1085570 "getError"
	public explicit_return_type "CharSequence"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the error text of this node.

@return The error text."
      end

      operation 1085698 "getContentDescription"
	public explicit_return_type "CharSequence"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the content description of this node.

@return The content description."
      end

      operation 1085826 "setContentDescription"
	public explicit_return_type "void"
	nparams 1
	  param inout name "contentDescription" explicit_type "CharSequence"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the content description of this node.
<p>
  <strong>Note:</strong> Cannot be called from an
  {@link android.accessibilityservice.AccessibilityService}.
  This class is made immutable before being delivered to an AccessibilityService.
</p>

@param contentDescription The content description.

@throws IllegalStateException If called from an AccessibilityService."
      end

      operation 1085954 "setLabelFor"
	public explicit_return_type "void"
	nparams 1
	  param inout name "labeled" type class_ref 208898 // View
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the view for which the view represented by this info serves as a
label for accessibility purposes.

@param labeled The view for which this info serves as a label."
      end

      operation 1086082 "setLabelFor"
	public explicit_return_type "void"
	nparams 2
	  param inout name "root" type class_ref 208898 // View
	  param in name "virtualDescendantId" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the view for which the view represented by this info serves as a
label for accessibility purposes. If <code>virtualDescendantId</code>
is {@link View#NO_ID} the root is set as the labeled.
<p>
A virtual descendant is an imaginary View that is reported as a part of the view
hierarchy for accessibility purposes. This enables custom views that draw complex
content to report themselves as a tree of virtual views, thus conveying their
logical structure.
</p>
<p>
  <strong>Note:</strong> Cannot be called from an
  {@link android.accessibilityservice.AccessibilityService}.
  This class is made immutable before being delivered to an AccessibilityService.
</p>

@param root The root whose virtual descendant serves as a label.
@param virtualDescendantId The id of the virtual descendant."
      end

      operation 1086210 "getLabelFor"
	public return_type class_ref 208514 // AccessibilityNodeInfo
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the node info for which the view represented by this info serves as
a label for accessibility purposes.
<p>
  <strong>Note:</strong> It is a client responsibility to recycle the
    received info by calling {@link AccessibilityNodeInfo#recycle()}
    to avoid creating of multiple instances.
</p>

@return The labeled info."
      end

      operation 1086338 "setLabeledBy"
	public explicit_return_type "void"
	nparams 1
	  param inout name "label" type class_ref 208898 // View
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the view which serves as the label of the view represented by
this info for accessibility purposes.

@param label The view that labels this node's source."
      end

      operation 1086466 "setLabeledBy"
	public explicit_return_type "void"
	nparams 2
	  param inout name "root" type class_ref 208898 // View
	  param in name "virtualDescendantId" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the view which serves as the label of the view represented by
this info for accessibility purposes. If <code>virtualDescendantId</code>
is {@link View#NO_ID} the root is set as the label.
<p>
A virtual descendant is an imaginary View that is reported as a part of the view
hierarchy for accessibility purposes. This enables custom views that draw complex
content to report themselves as a tree of virtual views, thus conveying their
logical structure.
</p>
<p>
  <strong>Note:</strong> Cannot be called from an
  {@link android.accessibilityservice.AccessibilityService}.
  This class is made immutable before being delivered to an AccessibilityService.
</p>

@param root The root whose virtual descendant labels this node's source.
@param virtualDescendantId The id of the virtual descendant."
      end

      operation 1086594 "getLabeledBy"
	public return_type class_ref 208514 // AccessibilityNodeInfo
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the node info which serves as the label of the view represented by
this info for accessibility purposes.
<p>
  <strong>Note:</strong> It is a client responsibility to recycle the
    received info by calling {@link AccessibilityNodeInfo#recycle()}
    to avoid creating of multiple instances.
</p>

@return The label."
      end

      operation 1086722 "setViewIdResourceName"
	public explicit_return_type "void"
	nparams 1
	  param in name "viewIdResName" explicit_type "String"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the fully qualified resource name of the source view's id.

<p>
  <strong>Note:</strong> Cannot be called from an
  {@link android.accessibilityservice.AccessibilityService}.
  This class is made immutable before being delivered to an AccessibilityService.
</p>

@param viewIdResName The id resource name."
      end

      operation 1086850 "getViewIdResourceName"
	public explicit_return_type "String"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the fully qualified resource name of the source view's id.

<p>
  <strong>Note:</strong> The primary usage of this API is for UI test automation
  and in order to report the source view id of an {@link AccessibilityNodeInfo} the
  client has to set the {@link AccessibilityServiceInfo#FLAG_REPORT_VIEW_IDS}
  flag when configuring his {@link android.accessibilityservice.AccessibilityService}.
</p>

@return The id resource name."
      end

      operation 1086978 "getTextSelectionStart"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the text selection start.

@return The text selection start if there is selection or -1."
      end

      operation 1087106 "getTextSelectionEnd"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the text selection end.

@return The text selection end if there is selection or -1."
      end

      operation 1087234 "setTextSelection"
	public explicit_return_type "void"
	nparams 2
	  param in name "start" explicit_type "int"
	  param in name "end" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the text selection start and end.
<p>
  <strong>Note:</strong> Cannot be called from an
  {@link android.accessibilityservice.AccessibilityService}.
  This class is made immutable before being delivered to an AccessibilityService.
</p>

@param start The text selection start.
@param end The text selection end.

@throws IllegalStateException If called from an AccessibilityService."
      end

      operation 1087362 "getInputType"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the input type of the source as defined by {@link InputType}.

@return The input type."
      end

      operation 1087490 "setInputType"
	public explicit_return_type "void"
	nparams 1
	  param in name "inputType" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the input type of the source as defined by {@link InputType}.
<p>
  <strong>Note:</strong> Cannot be called from an
  {@link android.accessibilityservice.AccessibilityService}.
  This class is made immutable before being delivered to an
  AccessibilityService.
</p>

@param inputType The input type.

@throws IllegalStateException If called from an AccessibilityService."
      end

      operation 1087618 "getExtras"
	public explicit_return_type "Bundle"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets an optional bundle with extra data. The bundle
is lazily created and never <code>null</code>.
<p>
<strong>Note:</strong> It is recommended to use the package
name of your application as a prefix for the keys to avoid
collisions which may confuse an accessibility service if the
same key has different meaning when emitted from different
applications.
</p>

@return The bundle."
      end

      operation 1087746 "getBooleanProperty"
	private explicit_return_type "boolean"
	nparams 1
	  param in name "property" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the value of a boolean property.

@param property The property.
@return The value."
      end

      operation 1087874 "setBooleanProperty"
	private explicit_return_type "void"
	nparams 2
	  param in name "property" explicit_type "int"
	  param inout name "value" explicit_type "boolean"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets a boolean property.

@param property The property.
@param value The value.

@throws IllegalStateException If called from an AccessibilityService."
      end

      operation 1088002 "setConnectionId"
	public explicit_return_type "void"
	nparams 1
	  param in name "connectionId" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the unique id of the IAccessibilityServiceConnection over which
this instance can send requests to the system.

@param connectionId The connection id.

@hide"
      end

      operation 1088130 "describeContents"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "{@inheritDoc}"
      end

      operation 1088258 "getSourceNodeId"
	public explicit_return_type "long"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the id of the source node.

@return The id.

@hide"
      end

      operation 1088386 "setSealed"
	public explicit_return_type "void"
	nparams 1
	  param inout name "sealed" explicit_type "boolean"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets if this instance is sealed.

@param sealed Whether is sealed.

@hide"
      end

      operation 1088514 "isSealed"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets if this instance is sealed.

@return Whether is sealed.

@hide"
      end

      operation 1088642 "enforceSealed"
	protected explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Enforces that this instance is sealed.

@throws IllegalStateException If this instance is not sealed.

@hide"
      end

      operation 1088770 "enforceValidFocusDirection"
	private explicit_return_type "void"
	nparams 1
	  param in name "direction" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1088898 "enforceValidFocusType"
	private explicit_return_type "void"
	nparams 1
	  param in name "focusType" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1089026 "enforceNotSealed"
	protected explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Enforces that this instance is not sealed.

@throws IllegalStateException If this instance is sealed.

@hide"
      end

      operation 1089154 "obtain"
	class_operation public return_type class_ref 208514 // AccessibilityNodeInfo
	nparams 1
	  param inout name "source" type class_ref 208898 // View
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a cached instance if such is available otherwise a new one
and sets the source.

@param source The source view.
@return An instance.

@see #setSource(View)"
      end

      operation 1089282 "obtain"
	class_operation public return_type class_ref 208514 // AccessibilityNodeInfo
	nparams 2
	  param inout name "root" type class_ref 208898 // View
	  param in name "virtualDescendantId" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a cached instance if such is available otherwise a new one
and sets the source.

@param root The root of the virtual subtree.
@param virtualDescendantId The id of the virtual descendant.
@return An instance.

@see #setSource(View, int)"
      end

      operation 1089410 "obtain"
	class_operation public return_type class_ref 208514 // AccessibilityNodeInfo
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a cached instance if such is available otherwise a new one.

@return An instance."
      end

      operation 1089538 "obtain"
	class_operation public return_type class_ref 208514 // AccessibilityNodeInfo
	nparams 1
	  param inout name "info" type class_ref 208514 // AccessibilityNodeInfo
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a cached instance if such is available or a new one is
create. The returned instance is initialized from the given
<code>info</code>.

@param info The other info.
@return An instance."
      end

      operation 1089666 "recycle"
	public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return an instance back to be reused.
<p>
<strong>Note:</strong> You must not touch the object after calling this function.

@throws IllegalStateException If the info is already recycled."
      end

      operation 1089794 "writeToParcel"
	public explicit_return_type "void"
	nparams 2
	  param inout name "parcel" explicit_type "Parcel"
	  param in name "flags" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "{@inheritDoc}
<p>
  <strong>Note:</strong> After the instance is written to a parcel it
     is recycled. You must not touch the object after calling this function.
</p>"
      end

      operation 1089922 "init"
	private explicit_return_type "void"
	nparams 1
	  param inout name "other" type class_ref 208514 // AccessibilityNodeInfo
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Initializes this instance from another one.

@param other The other instance."
      end

      operation 1090050 "initFromParcel"
	private explicit_return_type "void"
	nparams 1
	  param inout name "parcel" explicit_type "Parcel"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new instance from a {@link Parcel}.

@param parcel A parcel containing the state of a {@link AccessibilityNodeInfo}."
      end

      operation 1090178 "clear"
	private explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Clears the state of this instance."
      end

      operation 1090306 "isDefaultLegacyStandardAction"
	class_operation private explicit_return_type "boolean"
	nparams 1
	  param inout name "action" type class_ref 248194 // AccessibilityAction
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1090434 "getActionSingleton"
	class_operation private return_type class_ref 248194 // AccessibilityAction
	nparams 1
	  param in name "actionId" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1090562 "addLegacyStandardActions"
	private explicit_return_type "void"
	nparams 1
	  param in name "actionMask" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1090690 "getActionSymbolicName"
	class_operation private explicit_return_type "String"
	nparams 1
	  param in name "action" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the human readable action symbolic name.

@param action The action.
@return The symbolic name."
      end

      operation 1090818 "getMovementGranularitySymbolicName"
	class_operation private explicit_return_type "String"
	nparams 1
	  param in name "granularity" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the human readable movement granularity symbolic name.

@param granularity The granularity.
@return The symbolic name."
      end

      operation 1090946 "canPerformRequestOverConnection"
	private explicit_return_type "boolean"
	nparams 1
	  param in name "accessibilityNodeId" explicit_type "long"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1091074 "equals"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "object" explicit_type "Object"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 1091202 "hashCode"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 1091330 "toString"
	public explicit_return_type "String"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      classrelation 280450 // CREATOR (<unidirectional association>)
	relation 279554 --->
	  stereotype "Parcelable.Creator"
	  a role_name "CREATOR" init_value "
            new Parcelable.Creator<AccessibilityNodeInfo>() {
        @Override
        public AccessibilityNodeInfo createFromParcel(Parcel parcel) {
            AccessibilityNodeInfo info = AccessibilityNodeInfo.obtain();
            info.initFromParcel(parcel);
            return info;
        }

        @Override
        public AccessibilityNodeInfo[] newArray(int size) {
            return new AccessibilityNodeInfo[size];
        }
    }" class_relation const_relation public
	    comment "@see android.os.Parcelable.Creator
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${stereotype}<${type}> ${name}${value};
"
	    classrelation_ref 280450 // CREATOR (<unidirectional association>)
	  b parent class_ref 208514 // AccessibilityNodeInfo
      end
    end

    class 209282 "AccessibilityNodeProvider"
      abstract visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "This class is the contract a client should implement to enable support of a
virtual view hierarchy rooted at a given view for accessibility purposes. A virtual
view hierarchy is a tree of imaginary Views that is reported as a part of the view
hierarchy when an {@link AccessibilityService} explores the window content.
Since the virtual View tree does not exist this class is responsible for
managing the {@link AccessibilityNodeInfo}s describing that tree to accessibility
services.
</p>
<p>
The main use case of these APIs is to enable a custom view that draws complex content,
for example a monthly calendar grid, to be presented as a tree of logical nodes,
for example month days each containing events, thus conveying its logical structure.
<p>
<p>
A typical use case is to override {@link View#getAccessibilityNodeProvider()} of the
View that is a root of a virtual View hierarchy to return an instance of this class.
In such a case this instance is responsible for managing {@link AccessibilityNodeInfo}s
describing the virtual sub-tree rooted at the View including the one representing the
View itself. Similarly the returned instance is responsible for performing accessibility
actions on any virtual view or the root view itself. For example:
</p>
<pre>
    getAccessibilityNodeProvider(
        if (mAccessibilityNodeProvider == null) {
            mAccessibilityNodeProvider = new AccessibilityNodeProvider() {
                public boolean performAction(int action, int virtualDescendantId) {
                    // Implementation.
                    return false;
                }

                public List<AccessibilityNodeInfo> findAccessibilityNodeInfosByText(String text,
                        int virtualDescendantId) {
                    // Implementation.
                    return null;
                }

                public AccessibilityNodeInfo createAccessibilityNodeInfo(int virtualDescendantId) {
                    // Implementation.
                    return null;
                }
            });
    return mAccessibilityNodeProvider;
</pre>"
      attribute 760450 "HOST_VIEW_ID"
	class_attribute const_attribute public explicit_type "int"
	init_value " -1"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "The virtual id for the hosting View.
"
      end

      operation 1096194 "createAccessibilityNodeInfo"
	public return_type class_ref 208514 // AccessibilityNodeInfo
	nparams 1
	  param in name "virtualViewId" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an {@link AccessibilityNodeInfo} representing a virtual view,
i.e. a descendant of the host View, with the given <code>virtualViewId</code>
or the host View itself if <code>virtualViewId</code> equals to {@link #HOST_VIEW_ID}.
<p>
A virtual descendant is an imaginary View that is reported as a part of the view
hierarchy for accessibility purposes. This enables custom views that draw complex
content to report them selves as a tree of virtual views, thus conveying their
logical structure.
</p>
<p>
The implementer is responsible for obtaining an accessibility node info from the
pool of reusable instances and setting the desired properties of the node info
before returning it.
</p>

@param virtualViewId A client defined virtual view id.
@return A populated {@link AccessibilityNodeInfo} for a virtual descendant or the
    host View.

@see View#createAccessibilityNodeInfo()
@see AccessibilityNodeInfo"
      end

      operation 1096322 "performAction"
	public explicit_return_type "boolean"
	nparams 3
	  param in name "virtualViewId" explicit_type "int"
	  param in name "action" explicit_type "int"
	  param inout name "arguments" explicit_type "Bundle"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Performs an accessibility action on a virtual view, i.e. a descendant of the
host View, with the given <code>virtualViewId</code> or the host View itself
if <code>virtualViewId</code> equals to {@link #HOST_VIEW_ID}.

@param virtualViewId A client defined virtual view id.
@param action The action to perform.
@param arguments Optional action arguments.
@return True if the action was performed.

@see View#performAccessibilityAction(int, Bundle)
@see #createAccessibilityNodeInfo(int)
@see AccessibilityNodeInfo"
      end

      operation 1096450 "findAccessibilityNodeInfosByText"
	public return_type class_ref 208514 // AccessibilityNodeInfo
	nparams 2
	  param in name "text" explicit_type "String"
	  param in name "virtualViewId" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}List<${type}> ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Finds {@link AccessibilityNodeInfo}s by text. The match is case insensitive
containment. The search is relative to the virtual view, i.e. a descendant of the
host View, with the given <code>virtualViewId</code> or the host View itself
<code>virtualViewId</code> equals to {@link #HOST_VIEW_ID}.

@param virtualViewId A client defined virtual view id which defined
    the root of the tree in which to perform the search.
@param text The searched text.
@return A list of node info.

@see #createAccessibilityNodeInfo(int)
@see AccessibilityNodeInfo"
      end

      operation 1096578 "findFocus"
	public return_type class_ref 208514 // AccessibilityNodeInfo
	nparams 1
	  param in name "focus" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Find the virtual view, i.e. a descendant of the host View, that has the
specified focus type.

@param focus The focus to find. One of
           {@link AccessibilityNodeInfo#FOCUS_INPUT} or
           {@link AccessibilityNodeInfo#FOCUS_ACCESSIBILITY}.
@return The node info of the focused view or null.
@see AccessibilityNodeInfo#FOCUS_INPUT
@see AccessibilityNodeInfo#FOCUS_ACCESSIBILITY"
      end
    end

    class 217218 "AccessibilityEventSource"
      visibility public stereotype "interface"
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "This interface is implemented by classes source of {@link AccessibilityEvent}s.

<div class=\"special reference\">
<h3>Developer Guides</h3>
<p>For more information about making applications accessible, read the
<a href=\"{@docRoot}guide/topics/ui/accessibility/index.html\">Accessibility</a>
developer guide.</p>
</div>"
      operation 600962 "sendAccessibilityEvent"
	public explicit_return_type "void"
	nparams 1
	  param in name "eventType" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Handles the request for sending an {@link AccessibilityEvent} given
the event type. The method must first check if accessibility is on
via calling {@link AccessibilityManager#isEnabled() AccessibilityManager.isEnabled()},
obtain an {@link AccessibilityEvent} from the event pool through calling
{@link AccessibilityEvent#obtain(int) AccessibilityEvent.obtain(int)}, populate the
event, and send it for dispatch via calling
{@link AccessibilityManager#sendAccessibilityEvent(AccessibilityEvent)
AccessibilityManager.sendAccessibilityEvent(AccessibilityEvent)}.

@see AccessibilityEvent
@see AccessibilityManager

@param eventType The event type."
      end

      operation 601090 "sendAccessibilityEventUnchecked"
	public explicit_return_type "void"
	nparams 1
	  param inout name "event" type class_ref 217346 // AccessibilityEvent
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Handles the request for sending an {@link AccessibilityEvent}. The
method does not guarantee to check if accessibility is on before
sending the event for dispatch. It is responsibility of the caller
to do the check via calling {@link AccessibilityManager#isEnabled()
AccessibilityManager.isEnabled()}.

@see AccessibilityEvent
@see AccessibilityManager

@param event The event."
      end
    end

    class 217346 "AccessibilityEvent"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      final java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "<p>
This class represents accessibility events that are sent by the system when
something notable happens in the user interface. For example, when a
{@link android.widget.Button} is clicked, a {@link android.view.View} is focused, etc.
</p>
<p>
An accessibility event is fired by an individual view which populates the event with
data for its state and requests from its parent to send the event to interested
parties. The parent can optionally add an {@link AccessibilityRecord} for itself before
dispatching a similar request to its parent. A parent can also choose not to respect the
request for sending an event. The accessibility event is sent by the topmost view in the
view tree. Therefore, an {@link android.accessibilityservice.AccessibilityService} can
explore all records in an accessibility event to obtain more information about the
context in which the event was fired.
</p>
<p>
The main purpose of an accessibility event is to expose enough information for an
{@link android.accessibilityservice.AccessibilityService} to provide meaningful feedback
to the user. Sometimes however, an accessibility service may need more contextual
information then the one in the event pay-load. In such cases the service can obtain
the event source which is an {@link AccessibilityNodeInfo} (snapshot of a View state)
which can be used for exploring the window content. Note that the privilege for accessing
an event's source, thus the window content, has to be explicitly requested. For more
details refer to {@link android.accessibilityservice.AccessibilityService}. If an
accessibility service has not requested to retrieve the window content the event will
not contain reference to its source. Also for events of type
{@link #TYPE_NOTIFICATION_STATE_CHANGED} the source is never available.
</p>
<p>
This class represents various semantically different accessibility event
types. Each event type has an associated set of related properties. In other
words, each event type is characterized via a subset of the properties exposed
by this class. For each event type there is a corresponding constant defined
in this class. Follows a specification of the event types and their associated properties:
</p>
<div class=\"special reference\">
<h3>Developer Guides</h3>
<p>For more information about creating and processing AccessibilityEvents, read the
<a href=\"{@docRoot}guide/topics/ui/accessibility/index.html\">Accessibility</a>
developer guide.</p>
</div>
<p>
<b>VIEW TYPES</b></br>
</p>
<p>
<b>View clicked</b> - represents the event of clicking on a {@link android.view.View}
like {@link android.widget.Button}, {@link android.widget.CompoundButton}, etc.</br>
<em>Type:</em>{@link #TYPE_VIEW_CLICKED}</br>
<em>Properties:</em></br>
<ul>
  <li>{@link #getEventType()} - The type of the event.</li>
  <li>{@link #getSource()} - The source info (for registered clients).</li>
  <li>{@link #getClassName()} - The class name of the source.</li>
  <li>{@link #getPackageName()} - The package name of the source.</li>
  <li>{@link #getEventTime()}  - The event time.</li>
  <li>{@link #getText()} - The text of the source's sub-tree.</li>
  <li>{@link #isEnabled()} - Whether the source is enabled.</li>
  <li>{@link #isPassword()} - Whether the source is password.</li>
  <li>{@link #isChecked()} - Whether the source is checked.</li>
  <li>{@link #getContentDescription()} - The content description of the source.</li>
  <li>{@link #getScrollX()} - The offset of the source left edge in pixels
      (without descendants of AdapterView).</li>
  <li>{@link #getScrollY()} - The offset of the source top edge in pixels
      (without descendants of AdapterView).</li>
  <li>{@link #getFromIndex()} - The zero based index of the first visible item of the source,
      inclusive (for descendants of AdapterView).</li>
  <li>{@link #getToIndex()} - The zero based index of the last visible item of the source,
      inclusive (for descendants of AdapterView).</li>
  <li>{@link #getItemCount()} - The total items of the source
      (for descendants of AdapterView).</li>
</ul>
</p>
<p>
<b>View long clicked</b> - represents the event of long clicking on a {@link android.view.View}
like {@link android.widget.Button}, {@link android.widget.CompoundButton}, etc </br>
<em>Type:</em>{@link #TYPE_VIEW_LONG_CLICKED}</br>
<em>Properties:</em></br>
<ul>
  <li>{@link #getEventType()} - The type of the event.</li>
  <li>{@link #getSource()} - The source info (for registered clients).</li>
  <li>{@link #getClassName()} - The class name of the source.</li>
  <li>{@link #getPackageName()} - The package name of the source.</li>
  <li>{@link #getEventTime()}  - The event time.</li>
  <li>{@link #getText()} - The text of the source's sub-tree.</li>
  <li>{@link #isEnabled()} - Whether the source is enabled.</li>
  <li>{@link #isPassword()} - Whether the source is password.</li>
  <li>{@link #isChecked()} - Whether the source is checked.</li>
  <li>{@link #getContentDescription()} - The content description of the source.</li>
  <li>{@link #getScrollX()} - The offset of the source left edge in pixels
      (without descendants of AdapterView).</li>
  <li>{@link #getScrollY()} - The offset of the source top edge in pixels
      (without descendants of AdapterView).</li>
  <li>{@link #getFromIndex()} - The zero based index of the first visible item of the source,
      inclusive (for descendants of AdapterView).</li>
  <li>{@link #getToIndex()} - The zero based index of the last visible item of the source,
      inclusive (for descendants of AdapterView).</li>
  <li>{@link #getItemCount()} - The total items of the source
      (for descendants of AdapterView).</li>
</ul>
</p>
<p>
<b>View selected</b> - represents the event of selecting an item usually in
the context of an {@link android.widget.AdapterView}.</br>
<em>Type:</em> {@link #TYPE_VIEW_SELECTED}</br>
<em>Properties:</em></br>
<ul>
  <li>{@link #getEventType()} - The type of the event.</li>
  <li>{@link #getSource()} - The source info (for registered clients).</li>
  <li>{@link #getClassName()} - The class name of the source.</li>
  <li>{@link #getPackageName()} - The package name of the source.</li>
  <li>{@link #getEventTime()}  - The event time.</li>
  <li>{@link #getText()} - The text of the source's sub-tree.</li>
  <li>{@link #isEnabled()} - Whether the source is enabled.</li>
  <li>{@link #isPassword()} - Whether the source is password.</li>
  <li>{@link #isChecked()} - Whether the source is checked.</li>
  <li>{@link #getItemCount()} - The number of selectable items of the source.</li>
  <li>{@link #getCurrentItemIndex()} - The currently selected item index.</li>
  <li>{@link #getContentDescription()} - The content description of the source.</li>
  <li>{@link #getScrollX()} - The offset of the source left edge in pixels
      (without descendants of AdapterView).</li>
  <li>{@link #getScrollY()} - The offset of the source top edge in pixels
      (without descendants of AdapterView).</li>
  <li>{@link #getFromIndex()} - The zero based index of the first visible item of the source,
      inclusive (for descendants of AdapterView).</li>
  <li>{@link #getToIndex()} - The zero based index of the last visible item of the source,
      inclusive (for descendants of AdapterView).</li>
  <li>{@link #getItemCount()} - The total items of the source
      (for descendants of AdapterView).</li>
</ul>
</p>
<p>
<b>View focused</b> - represents the event of focusing a
{@link android.view.View}.</br>
<em>Type:</em> {@link #TYPE_VIEW_FOCUSED}</br>
<em>Properties:</em></br>
<ul>
  <li>{@link #getEventType()} - The type of the event.</li>
  <li>{@link #getSource()} - The source info (for registered clients).</li>
  <li>{@link #getClassName()} - The class name of the source.</li>
  <li>{@link #getPackageName()} - The package name of the source.</li>
  <li>{@link #getEventTime()}  - The event time.</li>
  <li>{@link #getText()} - The text of the source's sub-tree.</li>
  <li>{@link #isEnabled()} - Whether the source is enabled.</li>
  <li>{@link #isPassword()} - Whether the source is password.</li>
  <li>{@link #isChecked()} - Whether the source is checked.</li>
  <li>{@link #getItemCount()} - The number of focusable items on the screen.</li>
  <li>{@link #getCurrentItemIndex()} - The currently focused item index.</li>
  <li>{@link #getContentDescription()} - The content description of the source.</li>
  <li>{@link #getScrollX()} - The offset of the source left edge in pixels
      (without descendants of AdapterView).</li>
  <li>{@link #getScrollY()} - The offset of the source top edge in pixels
      (without descendants of AdapterView).</li>
  <li>{@link #getFromIndex()} - The zero based index of the first visible item of the source,
      inclusive (for descendants of AdapterView).</li>
  <li>{@link #getToIndex()} - The zero based index of the last visible item of the source,
      inclusive (for descendants of AdapterView).</li>
  <li>{@link #getItemCount()} - The total items of the source
      (for descendants of AdapterView).</li>
</ul>
</p>
<p>
<b>View text changed</b> - represents the event of changing the text of an
{@link android.widget.EditText}.</br>
<em>Type:</em> {@link #TYPE_VIEW_TEXT_CHANGED}</br>
<em>Properties:</em></br>
<ul>
  <li>{@link #getEventType()} - The type of the event.</li>
  <li>{@link #getSource()} - The source info (for registered clients).</li>
  <li>{@link #getClassName()} - The class name of the source.</li>
  <li>{@link #getPackageName()} - The package name of the source.</li>
  <li>{@link #getEventTime()}  - The event time.</li>
  <li>{@link #getText()} - The text of the source.</li>
  <li>{@link #isEnabled()} - Whether the source is enabled.</li>
  <li>{@link #isPassword()} - Whether the source is password.</li>
  <li>{@link #isChecked()} - Whether the source is checked.</li>
  <li>{@link #getFromIndex()} - The text change start index.</li>
  <li>{@link #getAddedCount()} - The number of added characters.</li>
  <li>{@link #getRemovedCount()} - The number of removed characters.</li>
  <li>{@link #getBeforeText()} - The text of the source before the change.</li>
  <li>{@link #getContentDescription()} - The content description of the source.</li>
</ul>
</p>
<p>
<b>View text selection changed</b> - represents the event of changing the text
selection of an {@link android.widget.EditText}.</br>
<em>Type:</em> {@link #TYPE_VIEW_TEXT_SELECTION_CHANGED} </br>
<em>Properties:</em></br>
<ul>
  <li>{@link #getEventType()} - The type of the event.</li>
  <li>{@link #getSource()} - The source info (for registered clients).</li>
  <li>{@link #getClassName()} - The class name of the source.</li>
  <li>{@link #getPackageName()} - The package name of the source.</li>
  <li>{@link #getEventTime()}  - The event time.</li>
  <li>{@link #getText()} - The text of the source.</li>
  <li>{@link #isPassword()} - Whether the source is password.</li>
  <li>{@link #getFromIndex()} - The selection start index.</li>
  <li>{@link #getToIndex()} - The selection end index.</li>
  <li>{@link #getItemCount()} - The length of the source text.</li>
  <li>{@link #isEnabled()} - Whether the source is enabled.</li>
  <li>{@link #getContentDescription()} - The content description of the source.</li>
</ul>
</p>
<b>View text traversed at movement granularity</b> - represents the event of traversing the
text of a view at a given granularity. For example, moving to the next word.</br>
<em>Type:</em> {@link #TYPE_VIEW_TEXT_TRAVERSED_AT_MOVEMENT_GRANULARITY} </br>
<em>Properties:</em></br>
<ul>
  <li>{@link #getEventType()} - The type of the event.</li>
  <li>{@link #getSource()} - The source info (for registered clients).</li>
  <li>{@link #getClassName()} - The class name of the source.</li>
  <li>{@link #getPackageName()} - The package name of the source.</li>
  <li>{@link #getEventTime()}  - The event time.</li>
  <li>{@link #getMovementGranularity()} - Sets the granularity at which a view's text
      was traversed.</li>
  <li>{@link #getText()} -  The text of the source's sub-tree.</li>
  <li>{@link #getFromIndex()} - The start of the next/previous text at the specified granularity
          - inclusive.</li>
  <li>{@link #getToIndex()} - The end of the next/previous text at the specified granularity
          - exclusive.</li>
  <li>{@link #isPassword()} - Whether the source is password.</li>
  <li>{@link #isEnabled()} - Whether the source is enabled.</li>
  <li>{@link #getContentDescription()} - The content description of the source.</li>
  <li>{@link #getMovementGranularity()} - Sets the granularity at which a view's text
      was traversed.</li>
  <li>{@link #getAction()} - Gets traversal action which specifies the direction.</li>
</ul>
</p>
<p>
<b>View scrolled</b> - represents the event of scrolling a view. If
the source is a descendant of {@link android.widget.AdapterView} the
scroll is reported in terms of visible items - the first visible item,
the last visible item, and the total items - because the the source
is unaware of its pixel size since its adapter is responsible for
creating views. In all other cases the scroll is reported as the current
scroll on the X and Y axis respectively plus the height of the source in
pixels.</br>
<em>Type:</em> {@link #TYPE_VIEW_SCROLLED}</br>
<em>Properties:</em></br>
<ul>
  <li>{@link #getEventType()} - The type of the event.</li>
  <li>{@link #getSource()} - The source info (for registered clients).</li>
  <li>{@link #getClassName()} - The class name of the source.</li>
  <li>{@link #getPackageName()} - The package name of the source.</li>
  <li>{@link #getEventTime()}  - The event time.</li>
  <li>{@link #getText()} - The text of the source's sub-tree.</li>
  <li>{@link #isEnabled()} - Whether the source is enabled.</li>
  <li>{@link #getContentDescription()} - The content description of the source.</li>
  <li>{@link #getScrollX()} - The offset of the source left edge in pixels
      (without descendants of AdapterView).</li>
  <li>{@link #getScrollY()} - The offset of the source top edge in pixels
      (without descendants of AdapterView).</li>
  <li>{@link #getFromIndex()} - The zero based index of the first visible item of the source,
      inclusive (for descendants of AdapterView).</li>
  <li>{@link #getToIndex()} - The zero based index of the last visible item of the source,
      inclusive (for descendants of AdapterView).</li>
  <li>{@link #getItemCount()} - The total items of the source
      (for descendants of AdapterView).</li>
</ul>
<em>Note:</em> This event type is not dispatched to descendants though
{@link android.view.View#dispatchPopulateAccessibilityEvent(AccessibilityEvent)
View.dispatchPopulateAccessibilityEvent(AccessibilityEvent)}, hence the event
source {@link android.view.View} and the sub-tree rooted at it will not receive
calls to {@link android.view.View#onPopulateAccessibilityEvent(AccessibilityEvent)
View.onPopulateAccessibilityEvent(AccessibilityEvent)}. The preferred way to add
text content to such events is by setting the
{@link android.R.styleable#View_contentDescription contentDescription} of the source
view.</br>
</p>
<p>
<b>TRANSITION TYPES</b></br>
</p>
<p>
<b>Window state changed</b> - represents the event of opening a
{@link android.widget.PopupWindow}, {@link android.view.Menu},
{@link android.app.Dialog}, etc.</br>
<em>Type:</em> {@link #TYPE_WINDOW_STATE_CHANGED}</br>
<em>Properties:</em></br>
<ul>
  <li>{@link #getEventType()} - The type of the event.</li>
  <li>{@link #getSource()} - The source info (for registered clients).</li>
  <li>{@link #getClassName()} - The class name of the source.</li>
  <li>{@link #getPackageName()} - The package name of the source.</li>
  <li>{@link #getEventTime()}  - The event time.</li>
  <li>{@link #getText()} - The text of the source's sub-tree.</li>
  <li>{@link #isEnabled()} - Whether the source is enabled.</li>
</ul>
</p>
<p>
<b>Window content changed</b> - represents the event of change in the
content of a window. This change can be adding/removing view, changing
a view size, etc.</br>
</p>
<p>
<strong>Note:</strong> This event is fired only for the window source of the
last accessibility event different from {@link #TYPE_NOTIFICATION_STATE_CHANGED}
and its purpose is to notify clients that the content of the user interaction
window has changed.</br>
<em>Type:</em> {@link #TYPE_WINDOW_CONTENT_CHANGED}</br>
<em>Properties:</em></br>
<ul>
  <li>{@link #getEventType()} - The type of the event.</li>
  <li>{@link #getContentChangeTypes()} - The type of content changes.</li>
  <li>{@link #getSource()} - The source info (for registered clients).</li>
  <li>{@link #getClassName()} - The class name of the source.</li>
  <li>{@link #getPackageName()} - The package name of the source.</li>
  <li>{@link #getEventTime()}  - The event time.</li>
</ul>
<em>Note:</em> This event type is not dispatched to descendants though
{@link android.view.View#dispatchPopulateAccessibilityEvent(AccessibilityEvent)
View.dispatchPopulateAccessibilityEvent(AccessibilityEvent)}, hence the event
source {@link android.view.View} and the sub-tree rooted at it will not receive
calls to {@link android.view.View#onPopulateAccessibilityEvent(AccessibilityEvent)
View.onPopulateAccessibilityEvent(AccessibilityEvent)}. The preferred way to add
text content to such events is by setting the
{@link android.R.styleable#View_contentDescription contentDescription} of the source
view.</br>
</p>
<p>
<b>Windows changed</b> - represents the event of changes in the windows shown on
the screen such as a window appeared, a window disappeared, a window size changed,
a window layer changed, etc.</br>
<em>Type:</em> {@link #TYPE_WINDOWS_CHANGED}</br>
<em>Properties:</em></br>
<ul>
  <li>{@link #getEventType()} - The type of the event.</li>
  <li>{@link #getEventTime()} - The event time.</li>
</ul>
<em>Note:</em> You can retrieve the {@link AccessibilityWindowInfo} for the window
source of the event via {@link AccessibilityEvent#getSource()} to get the source
node on which then call {@link AccessibilityNodeInfo#getWindow()
AccessibilityNodeInfo.getWindow()} to get the window. Also all windows on the screen can
be retrieved by a call to {@link android.accessibilityservice.AccessibilityService#getWindows()
android.accessibilityservice.AccessibilityService.getWindows()}.
</p>
<p>
<b>NOTIFICATION TYPES</b></br>
</p>
<p>
<b>Notification state changed</b> - represents the event showing
{@link android.app.Notification}.</br>
<em>Type:</em> {@link #TYPE_NOTIFICATION_STATE_CHANGED}</br>
<em>Properties:</em></br>
<ul>
  <li>{@link #getEventType()} - The type of the event.</li>
  <li>{@link #getClassName()} - The class name of the source.</li>
  <li>{@link #getPackageName()} - The package name of the source.</li>
  <li>{@link #getEventTime()}  - The event time.</li>
  <li>{@link #getText()} - The text of the source's sub-tree.</li>
  <li>{@link #getParcelableData()} - The posted {@link android.app.Notification}.</li>
  <li>{@link #getText()} - Text for providing more context.</li>
</ul>
<em>Note:</em> This event type is not dispatched to descendants though
{@link android.view.View#dispatchPopulateAccessibilityEvent(AccessibilityEvent)
View.dispatchPopulateAccessibilityEvent(AccessibilityEvent)}, hence the event
source {@link android.view.View} and the sub-tree rooted at it will not receive
calls to {@link android.view.View#onPopulateAccessibilityEvent(AccessibilityEvent)
View.onPopulateAccessibilityEvent(AccessibilityEvent)}. The preferred way to add
text content to such events is by setting the
{@link android.R.styleable#View_contentDescription contentDescription} of the source
view.</br>
</p>
<p>
<b>EXPLORATION TYPES</b></br>
</p>
<p>
<b>View hover enter</b> - represents the event of beginning to hover
over a {@link android.view.View}. The hover may be generated via
exploring the screen by touch or via a pointing device.</br>
<em>Type:</em> {@link #TYPE_VIEW_HOVER_ENTER}</br>
<em>Properties:</em></br>
<ul>
  <li>{@link #getEventType()} - The type of the event.</li>
  <li>{@link #getSource()} - The source info (for registered clients).</li>
  <li>{@link #getClassName()} - The class name of the source.</li>
  <li>{@link #getPackageName()} - The package name of the source.</li>
  <li>{@link #getEventTime()}  - The event time.</li>
  <li>{@link #getText()} - The text of the source's sub-tree.</li>
  <li>{@link #isEnabled()} - Whether the source is enabled.</li>
  <li>{@link #getContentDescription()} - The content description of the source.</li>
  <li>{@link #getScrollX()} - The offset of the source left edge in pixels
      (without descendants of AdapterView).</li>
  <li>{@link #getScrollY()} - The offset of the source top edge in pixels
      (without descendants of AdapterView).</li>
  <li>{@link #getFromIndex()} - The zero based index of the first visible item of the source,
      inclusive (for descendants of AdapterView).</li>
  <li>{@link #getToIndex()} - The zero based index of the last visible item of the source,
      inclusive (for descendants of AdapterView).</li>
  <li>{@link #getItemCount()} - The total items of the source
      (for descendants of AdapterView).</li>
</ul>
</p>
<b>View hover exit</b> - represents the event of stopping to hover
over a {@link android.view.View}. The hover may be generated via
exploring the screen by touch or via a pointing device.</br>
<em>Type:</em> {@link #TYPE_VIEW_HOVER_EXIT}</br>
<em>Properties:</em></br>
<ul>
  <li>{@link #getEventType()} - The type of the event.</li>
  <li>{@link #getSource()} - The source info (for registered clients).</li>
  <li>{@link #getClassName()} - The class name of the source.</li>
  <li>{@link #getPackageName()} - The package name of the source.</li>
  <li>{@link #getEventTime()}  - The event time.</li>
  <li>{@link #getText()} - The text of the source's sub-tree.</li>
  <li>{@link #isEnabled()} - Whether the source is enabled.</li>
  <li>{@link #getContentDescription()} - The content description of the source.</li>
  <li>{@link #getScrollX()} - The offset of the source left edge in pixels
      (without descendants of AdapterView).</li>
  <li>{@link #getScrollY()} - The offset of the source top edge in pixels
      (without descendants of AdapterView).</li>
  <li>{@link #getFromIndex()} - The zero based index of the first visible item of the source,
      inclusive (for descendants of AdapterView).</li>
  <li>{@link #getToIndex()} - The zero based index of the last visible item of the source,
      inclusive (for descendants of AdapterView).</li>
  <li>{@link #getItemCount()} - The total items of the source
      (for descendants of AdapterView).</li>
</ul>
</p>
<p>
<b>Touch interaction start</b> - represents the event of starting a touch
interaction, which is the user starts touching the screen.</br>
<em>Type:</em> {@link #TYPE_TOUCH_INTERACTION_START}</br>
<em>Properties:</em></br>
<ul>
  <li>{@link #getEventType()} - The type of the event.</li>
</ul>
<em>Note:</em> This event is fired only by the system and is not passed to the
view tree to be populated.</br>
</p>
<p>
<b>Touch interaction end</b> - represents the event of ending a touch
interaction, which is the user stops touching the screen.</br>
<em>Type:</em> {@link #TYPE_TOUCH_INTERACTION_END}</br>
<em>Properties:</em></br>
<ul>
  <li>{@link #getEventType()} - The type of the event.</li>
</ul>
<em>Note:</em> This event is fired only by the system and is not passed to the
view tree to be populated.</br>
</p>
<p>
<b>Touch exploration gesture start</b> - represents the event of starting a touch
exploring gesture.</br>
<em>Type:</em> {@link #TYPE_TOUCH_EXPLORATION_GESTURE_START}</br>
<em>Properties:</em></br>
<ul>
  <li>{@link #getEventType()} - The type of the event.</li>
</ul>
<em>Note:</em> This event is fired only by the system and is not passed to the
view tree to be populated.</br>
</p>
<p>
<b>Touch exploration gesture end</b> - represents the event of ending a touch
exploring gesture.</br>
<em>Type:</em> {@link #TYPE_TOUCH_EXPLORATION_GESTURE_END}</br>
<em>Properties:</em></br>
<ul>
  <li>{@link #getEventType()} - The type of the event.</li>
</ul>
<em>Note:</em> This event is fired only by the system and is not passed to the
view tree to be populated.</br>
</p>
<p>
<b>Touch gesture detection start</b> - represents the event of starting a user
gesture detection.</br>
<em>Type:</em> {@link #TYPE_GESTURE_DETECTION_START}</br>
<em>Properties:</em></br>
<ul>
  <li>{@link #getEventType()} - The type of the event.</li>
</ul>
<em>Note:</em> This event is fired only by the system and is not passed to the
view tree to be populated.</br>
</p>
<p>
<b>Touch gesture detection end</b> - represents the event of ending a user
gesture detection.</br>
<em>Type:</em> {@link #TYPE_GESTURE_DETECTION_END}</br>
<em>Properties:</em></br>
<ul>
  <li>{@link #getEventType()} - The type of the event.</li>
</ul>
<em>Note:</em> This event is fired only by the system and is not passed to the
view tree to be populated.</br>
</p>
<p>
<b>MISCELLANEOUS TYPES</b></br>
</p>
<p>
<b>Announcement</b> - represents the event of an application making an
announcement. Usually this announcement is related to some sort of a context
change for which none of the events representing UI transitions is a good fit.
For example, announcing a new page in a book.</br>
<em>Type:</em> {@link #TYPE_ANNOUNCEMENT}</br>
<em>Properties:</em></br>
<ul>
  <li>{@link #getEventType()} - The type of the event.</li>
  <li>{@link #getSource()} - The source info (for registered clients).</li>
  <li>{@link #getClassName()} - The class name of the source.</li>
  <li>{@link #getPackageName()} - The package name of the source.</li>
  <li>{@link #getEventTime()}  - The event time.</li>
  <li>{@link #getText()} - The text of the announcement.</li>
  <li>{@link #isEnabled()} - Whether the source is enabled.</li>
</ul>
</p>
<p>
<b>Security note</b>
<p>
Since an event contains the text of its source privacy can be compromised by leaking
sensitive information such as passwords. To address this issue any event fired in response
to manipulation of a PASSWORD field does NOT CONTAIN the text of the password.
</p>

@see android.view.accessibility.AccessibilityManager
@see android.accessibilityservice.AccessibilityService
@see AccessibilityNodeInfo"
      classrelation 275074 // <generalisation>
	relation 274178 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 275074 // <generalisation>
	  b parent class_ref 247810 // AccessibilityRecord
      end

      classrelation 275202 // <realization>
	relation 274306 -_-|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 275202 // <realization>
	  b parent class_ref 203266 // Parcelable
      end

      attribute 738818 "DEBUG"
	class_attribute const_attribute private explicit_type "boolean"
	init_value " false"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 738946 "INVALID_POSITION"
	class_attribute const_attribute public explicit_type "int"
	init_value " -1"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Invalid selection/focus position.

@see #getCurrentItemIndex()
"
      end

      attribute 739074 "MAX_TEXT_LENGTH"
	class_attribute const_attribute public explicit_type "int"
	init_value " 500"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@Deprecated
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Maximum length of the text fields.

@see #getBeforeText()
@see #getText()
</br>
Note: This constant is no longer needed since there
      is no limit on the length of text that is contained
      in an accessibility event anymore.
"
      end

      attribute 739202 "TYPE_VIEW_CLICKED"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x00000001"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Represents the event of clicking on a {@link android.view.View} like
{@link android.widget.Button}, {@link android.widget.CompoundButton}, etc.
"
      end

      attribute 739330 "TYPE_VIEW_LONG_CLICKED"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x00000002"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Represents the event of long clicking on a {@link android.view.View} like
{@link android.widget.Button}, {@link android.widget.CompoundButton}, etc.
"
      end

      attribute 739458 "TYPE_VIEW_SELECTED"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x00000004"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Represents the event of selecting an item usually in the context of an
{@link android.widget.AdapterView}.
"
      end

      attribute 739586 "TYPE_VIEW_FOCUSED"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x00000008"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Represents the event of setting input focus of a {@link android.view.View}.
"
      end

      attribute 739714 "TYPE_VIEW_TEXT_CHANGED"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x00000010"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Represents the event of changing the text of an {@link android.widget.EditText}.
"
      end

      attribute 739842 "TYPE_WINDOW_STATE_CHANGED"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x00000020"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Represents the event of opening a {@link android.widget.PopupWindow},
{@link android.view.Menu}, {@link android.app.Dialog}, etc.
"
      end

      attribute 739970 "TYPE_NOTIFICATION_STATE_CHANGED"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x00000040"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Represents the event showing a {@link android.app.Notification}.
"
      end

      attribute 740098 "TYPE_VIEW_HOVER_ENTER"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x00000080"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Represents the event of a hover enter over a {@link android.view.View}.
"
      end

      attribute 740226 "TYPE_VIEW_HOVER_EXIT"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x00000100"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Represents the event of a hover exit over a {@link android.view.View}.
"
      end

      attribute 740354 "TYPE_TOUCH_EXPLORATION_GESTURE_START"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x00000200"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Represents the event of starting a touch exploration gesture.
"
      end

      attribute 740482 "TYPE_TOUCH_EXPLORATION_GESTURE_END"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x00000400"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Represents the event of ending a touch exploration gesture.
"
      end

      attribute 740610 "TYPE_WINDOW_CONTENT_CHANGED"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x00000800"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Represents the event of changing the content of a window and more
specifically the sub-tree rooted at the event's source.
"
      end

      attribute 740738 "TYPE_VIEW_SCROLLED"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x00001000"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Represents the event of scrolling a view.
"
      end

      attribute 740866 "TYPE_VIEW_TEXT_SELECTION_CHANGED"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x00002000"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Represents the event of changing the selection in an {@link android.widget.EditText}.
"
      end

      attribute 740994 "TYPE_ANNOUNCEMENT"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x00004000"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Represents the event of an application making an announcement.
"
      end

      attribute 741122 "TYPE_VIEW_ACCESSIBILITY_FOCUSED"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x00008000"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Represents the event of gaining accessibility focus.
"
      end

      attribute 741250 "TYPE_VIEW_ACCESSIBILITY_FOCUS_CLEARED"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x00010000"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Represents the event of clearing accessibility focus.
"
      end

      attribute 741378 "TYPE_VIEW_TEXT_TRAVERSED_AT_MOVEMENT_GRANULARITY"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x00020000"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Represents the event of traversing the text of a view at a given movement granularity.
"
      end

      attribute 741506 "TYPE_GESTURE_DETECTION_START"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x00040000"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Represents the event of beginning gesture detection.
"
      end

      attribute 741634 "TYPE_GESTURE_DETECTION_END"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x00080000"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Represents the event of ending gesture detection.
"
      end

      attribute 741762 "TYPE_TOUCH_INTERACTION_START"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x00100000"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Represents the event of the user starting to touch the screen.
"
      end

      attribute 741890 "TYPE_TOUCH_INTERACTION_END"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x00200000"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Represents the event of the user ending to touch the screen.
"
      end

      attribute 742018 "TYPE_WINDOWS_CHANGED"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x00400000"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Represents the event change in the windows shown on the screen.
"
      end

      attribute 742146 "CONTENT_CHANGE_TYPE_UNDEFINED"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x00000000"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Change type for {@link #TYPE_WINDOW_CONTENT_CHANGED} event:
The type of change is not defined.
"
      end

      attribute 742274 "CONTENT_CHANGE_TYPE_SUBTREE"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x00000001"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Change type for {@link #TYPE_WINDOW_CONTENT_CHANGED} event:
A node in the subtree rooted at the source node was added or removed.
"
      end

      attribute 742402 "CONTENT_CHANGE_TYPE_TEXT"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x00000002"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Change type for {@link #TYPE_WINDOW_CONTENT_CHANGED} event:
The node's text changed.
"
      end

      attribute 742530 "CONTENT_CHANGE_TYPE_CONTENT_DESCRIPTION"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x00000004"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Change type for {@link #TYPE_WINDOW_CONTENT_CHANGED} event:
The node's content description changed.
"
      end

      attribute 742658 "TYPES_ALL_MASK"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0xFFFFFFFF"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Mask for {@link AccessibilityEvent} all types.

@see #TYPE_VIEW_CLICKED
@see #TYPE_VIEW_LONG_CLICKED
@see #TYPE_VIEW_SELECTED
@see #TYPE_VIEW_FOCUSED
@see #TYPE_VIEW_TEXT_CHANGED
@see #TYPE_WINDOW_STATE_CHANGED
@see #TYPE_NOTIFICATION_STATE_CHANGED
@see #TYPE_VIEW_HOVER_ENTER
@see #TYPE_VIEW_HOVER_EXIT
@see #TYPE_TOUCH_EXPLORATION_GESTURE_START
@see #TYPE_TOUCH_EXPLORATION_GESTURE_END
@see #TYPE_WINDOW_CONTENT_CHANGED
@see #TYPE_VIEW_SCROLLED
@see #TYPE_VIEW_TEXT_SELECTION_CHANGED
@see #TYPE_ANNOUNCEMENT
@see #TYPE_VIEW_TEXT_TRAVERSED_AT_MOVEMENT_GRANULARITY
@see #TYPE_GESTURE_DETECTION_START
@see #TYPE_GESTURE_DETECTION_END
@see #TYPE_TOUCH_INTERACTION_START
@see #TYPE_TOUCH_INTERACTION_END
@see #TYPE_WINDOWS_CHANGED
"
      end

      attribute 742786 "MAX_POOL_SIZE"
	class_attribute const_attribute private explicit_type "int"
	init_value " 10"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 275330 // sPool (<unidirectional association>)
	relation 274434 --->
	  stereotype "SynchronizedPool"
	  a role_name "sPool" init_value "
            new SynchronizedPool<AccessibilityEvent>(MAX_POOL_SIZE)" class_relation const_relation private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${stereotype}<${type}> ${name}${value};
"
	    classrelation_ref 275330 // sPool (<unidirectional association>)
	  b parent class_ref 217346 // AccessibilityEvent
      end

      attribute 742914 "mEventType"
	private explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 743042 "mPackageName"
	private explicit_type "CharSequence"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 743170 "mEventTime"
	private explicit_type "long"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 743298 "mMovementGranularity"
	package explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 743426 "mAction"
	package explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 743554 "mContentChangeTypes"
	package explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 275458 // mRecords (<unidirectional association>)
	relation 274562 --->
	  stereotype "ArrayList"
	  a role_name "mRecords" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${stereotype}<${type}> ${name}${value};
"
	    classrelation_ref 275458 // mRecords (<unidirectional association>)
	  b parent class_ref 247810 // AccessibilityRecord
      end

      operation 1065602 "AccessibilityEvent"
	private explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Hide constructor from clients."
      end

      operation 1065730 "init"
	package explicit_return_type "void"
	nparams 1
	  param inout name "event" type class_ref 217346 // AccessibilityEvent
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Initialize an event from another one.

@param event The event to initialize from."
      end

      operation 1065858 "setSealed"
	public explicit_return_type "void"
	nparams 1
	  param inout name "sealed" explicit_type "boolean"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Sets if this instance is sealed.

@param sealed Whether is sealed.

@hide"
      end

      operation 1065986 "getRecordCount"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the number of records contained in the event.

@return The number of records."
      end

      operation 1066114 "appendRecord"
	public explicit_return_type "void"
	nparams 1
	  param inout name "record" type class_ref 247810 // AccessibilityRecord
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Appends an {@link AccessibilityRecord} to the end of event records.

@param record The record to append.

@throws IllegalStateException If called from an AccessibilityService."
      end

      operation 1066242 "getRecord"
	public return_type class_ref 247810 // AccessibilityRecord
	nparams 1
	  param in name "index" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the record at a given index.

@param index The index.
@return The record at the specified index."
      end

      operation 1066370 "getEventType"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the event type.

@return The event type."
      end

      operation 1066498 "getContentChangeTypes"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the bit mask of change types signaled by an
{@link #TYPE_WINDOW_CONTENT_CHANGED} event. A single event may represent
multiple change types.

@return The bit mask of change types. One or more of:
        <ul>
        <li>{@link AccessibilityEvent#CONTENT_CHANGE_TYPE_CONTENT_DESCRIPTION}
        <li>{@link AccessibilityEvent#CONTENT_CHANGE_TYPE_SUBTREE}
        <li>{@link AccessibilityEvent#CONTENT_CHANGE_TYPE_TEXT}
        <li>{@link AccessibilityEvent#CONTENT_CHANGE_TYPE_UNDEFINED}
        </ul>"
      end

      operation 1066626 "setContentChangeTypes"
	public explicit_return_type "void"
	nparams 1
	  param in name "changeTypes" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the bit mask of node tree changes signaled by an
{@link #TYPE_WINDOW_CONTENT_CHANGED} event.

@param changeTypes The bit mask of change types.
@throws IllegalStateException If called from an AccessibilityService.
@see #getContentChangeTypes()"
      end

      operation 1066754 "setEventType"
	public explicit_return_type "void"
	nparams 1
	  param in name "eventType" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the event type.

@param eventType The event type.

@throws IllegalStateException If called from an AccessibilityService."
      end

      operation 1066882 "getEventTime"
	public explicit_return_type "long"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the time in which this event was sent.

@return The event time."
      end

      operation 1067010 "setEventTime"
	public explicit_return_type "void"
	nparams 1
	  param in name "eventTime" explicit_type "long"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the time in which this event was sent.

@param eventTime The event time.

@throws IllegalStateException If called from an AccessibilityService."
      end

      operation 1067138 "getPackageName"
	public explicit_return_type "CharSequence"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the package name of the source.

@return The package name."
      end

      operation 1067266 "setPackageName"
	public explicit_return_type "void"
	nparams 1
	  param inout name "packageName" explicit_type "CharSequence"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the package name of the source.

@param packageName The package name.

@throws IllegalStateException If called from an AccessibilityService."
      end

      operation 1067394 "setMovementGranularity"
	public explicit_return_type "void"
	nparams 1
	  param in name "granularity" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the movement granularity that was traversed.

@param granularity The granularity.

@throws IllegalStateException If called from an AccessibilityService."
      end

      operation 1067522 "getMovementGranularity"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the movement granularity that was traversed.

@return The granularity."
      end

      operation 1067650 "setAction"
	public explicit_return_type "void"
	nparams 1
	  param in name "action" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the performed action that triggered this event.
<p>
Valid actions are defined in {@link AccessibilityNodeInfo}:
<ul>
<li>{@link AccessibilityNodeInfo#ACTION_ACCESSIBILITY_FOCUS}
<li>{@link AccessibilityNodeInfo#ACTION_CLEAR_ACCESSIBILITY_FOCUS}
<li>{@link AccessibilityNodeInfo#ACTION_CLEAR_FOCUS}
<li>{@link AccessibilityNodeInfo#ACTION_CLEAR_SELECTION}
<li>{@link AccessibilityNodeInfo#ACTION_CLICK}
<li>etc.
</ul>

@param action The action.
@throws IllegalStateException If called from an AccessibilityService.
@see AccessibilityNodeInfo#performAction(int)"
      end

      operation 1067778 "getAction"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the performed action that triggered this event.

@return The action."
      end

      operation 1067906 "obtain"
	class_operation public return_type class_ref 217346 // AccessibilityEvent
	nparams 1
	  param in name "eventType" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a cached instance if such is available or a new one is
instantiated with its type property set.

@param eventType The event type.
@return An instance."
      end

      operation 1068034 "obtain"
	class_operation public return_type class_ref 217346 // AccessibilityEvent
	nparams 1
	  param inout name "event" type class_ref 217346 // AccessibilityEvent
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a cached instance if such is available or a new one is
created. The returned instance is initialized from the given
<code>event</code>.

@param event The other event.
@return An instance."
      end

      operation 1068162 "obtain"
	class_operation public return_type class_ref 217346 // AccessibilityEvent
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a cached instance if such is available or a new one is
instantiated.

@return An instance."
      end

      operation 1068290 "recycle"
	public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Recycles an instance back to be reused.
<p>
  <b>Note: You must not touch the object after calling this function.</b>
</p>

@throws IllegalStateException If the event is already recycled."
      end

      operation 1068418 "clear"
	protected explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Clears the state of this instance.

@hide"
      end

      operation 1068546 "initFromParcel"
	public explicit_return_type "void"
	nparams 1
	  param inout name "parcel" explicit_type "Parcel"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new instance from a {@link Parcel}.

@param parcel A parcel containing the state of a {@link AccessibilityEvent}."
      end

      operation 1068674 "readAccessibilityRecordFromParcel"
	private explicit_return_type "void"
	nparams 2
	  param inout name "record" type class_ref 247810 // AccessibilityRecord
	  param inout name "parcel" explicit_type "Parcel"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Reads an {@link AccessibilityRecord} from a parcel.

@param record The record to initialize.
@param parcel The parcel to read from."
      end

      operation 1068802 "writeToParcel"
	public explicit_return_type "void"
	nparams 2
	  param inout name "parcel" explicit_type "Parcel"
	  param in name "flags" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "{@inheritDoc}"
      end

      operation 1068930 "writeAccessibilityRecordToParcel"
	private explicit_return_type "void"
	nparams 3
	  param inout name "record" type class_ref 247810 // AccessibilityRecord
	  param inout name "parcel" explicit_type "Parcel"
	  param in name "flags" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Writes an {@link AccessibilityRecord} to a parcel.

@param record The record to write.
@param parcel The parcel to which to write."
      end

      operation 1069058 "describeContents"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "{@inheritDoc}"
      end

      operation 1069186 "toString"
	public explicit_return_type "String"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 1069314 "eventTypeToString"
	class_operation public explicit_return_type "String"
	nparams 1
	  param in name "eventType" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the string representation of an event type. For example,
{@link #TYPE_VIEW_CLICKED} is represented by the string TYPE_VIEW_CLICKED.

@param eventType The event type
@return The string representation."
      end

      classrelation 275586 // CREATOR (<unidirectional association>)
	relation 274690 --->
	  stereotype "Parcelable.Creator"
	  a role_name "CREATOR" init_value "
            new Parcelable.Creator<AccessibilityEvent>() {
        public AccessibilityEvent createFromParcel(Parcel parcel) {
            AccessibilityEvent event = AccessibilityEvent.obtain();
            event.initFromParcel(parcel);
            return event;
        }

        public AccessibilityEvent[] newArray(int size) {
            return new AccessibilityEvent[size];
        }
    }" class_relation const_relation public
	    comment "@see Parcelable.Creator
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${stereotype}<${type}> ${name}${value};
"
	    classrelation_ref 275586 // CREATOR (<unidirectional association>)
	  b parent class_ref 217346 // AccessibilityEvent
      end
    end

    class 237442 "AccessibilityManager"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      final java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "System level service that serves as an event dispatch for {@link AccessibilityEvent}s,
and provides facilities for querying the accessibility state of the system.
Accessibility events are generated when something notable happens in the user interface,
for example an {@link android.app.Activity} starts, the focus or selection of a
{@link android.view.View} changes etc. Parties interested in handling accessibility
events implement and register an accessibility service which extends
{@link android.accessibilityservice.AccessibilityService}.
<p>
To obtain a handle to the accessibility manager do the following:
</p>
<p>
<code>
<pre>AccessibilityManager accessibilityManager =
       (AccessibilityManager) context.getSystemService(Context.ACCESSIBILITY_SERVICE);</pre>
</code>
</p>

@see AccessibilityEvent
@see AccessibilityNodeInfo
@see android.accessibilityservice.AccessibilityService
@see Context#getSystemService
@see Context#ACCESSIBILITY_SERVICE"
      class 242690 "AccessibilityStateChangeListener"
	visibility public stereotype "interface"
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}interface ${name}${extends} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	operation 982658 "onAccessibilityStateChanged"
	  public explicit_return_type "void"
	  nparams 1
	    param inout name "enabled" explicit_type "boolean"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Called when the accessibility enabled state changes.

@param enabled Whether accessibility is enabled."
	end
      end

      attribute 691842 "DEBUG"
	class_attribute const_attribute private explicit_type "boolean"
	init_value " false"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 691970 "LOG_TAG"
	class_attribute const_attribute private explicit_type "String"
	init_value " \"AccessibilityManager\""
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 692098 "STATE_FLAG_ACCESSIBILITY_ENABLED"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x00000001"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " @hide "
      end

      attribute 692226 "STATE_FLAG_TOUCH_EXPLORATION_ENABLED"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x00000002"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " @hide "
      end

      attribute 692354 "STATE_FLAG_HIGH_TEXT_CONTRAST_ENABLED"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x00000004"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " @hide "
      end

      attribute 692482 "DALTONIZER_DISABLED"
	class_attribute const_attribute public explicit_type "int"
	init_value " -1"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " @hide "
      end

      attribute 692610 "DALTONIZER_SIMULATE_MONOCHROMACY"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " @hide "
      end

      attribute 692738 "DALTONIZER_CORRECT_DEUTERANOMALY"
	class_attribute const_attribute public explicit_type "int"
	init_value " 12"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " @hide "
      end

      attribute 692866 "sInstanceSync"
	class_attribute const_attribute package explicit_type "Object"
	init_value " new Object()"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 266498 // sInstance (<unidirectional association>)
	relation 265602 --->
	  a role_name "sInstance" class_relation private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 266498 // sInstance (<unidirectional association>)
	  b parent class_ref 237442 // AccessibilityManager
      end

      attribute 692994 "mLock"
	const_attribute private explicit_type "Object"
	init_value " new Object()"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 693122 "mService"
	private explicit_type "IAccessibilityManager"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 693250 "mUserId"
	const_attribute package explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 693378 "mHandler"
	const_attribute package explicit_type "Handler"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 693506 "mIsEnabled"
	package explicit_type "boolean"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 693634 "mIsTouchExplorationEnabled"
	package explicit_type "boolean"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 693762 "mIsHighTextContrastEnabled"
	package explicit_type "boolean"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 266626 // mAccessibilityStateChangeListeners (<unidirectional association>)
	relation 265730 --->
	  stereotype "CopyOnWriteArrayList"
	  a role_name "mAccessibilityStateChangeListeners" init_value " new CopyOnWriteArrayList<>()" const_relation private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${stereotype}<${type}> ${name}${value};
"
	    classrelation_ref 266626 // mAccessibilityStateChangeListeners (<unidirectional association>)
	  b parent class_ref 242690 // AccessibilityStateChangeListener
      end

      class 242818 "TouchExplorationStateChangeListener"
	visibility public stereotype "interface"
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}interface ${name}${extends} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	operation 982786 "onTouchExplorationStateChanged"
	  public explicit_return_type "void"
	  nparams 1
	    param inout name "enabled" explicit_type "boolean"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Called when the touch exploration enabled state changes.

@param enabled Whether touch exploration is enabled."
	end
      end

      classrelation 266754 // mTouchExplorationStateChangeListeners (<unidirectional association>)
	relation 265858 --->
	  stereotype "CopyOnWriteArrayList"
	  a role_name "mTouchExplorationStateChangeListeners" init_value " new CopyOnWriteArrayList<>()" const_relation private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${stereotype}<${type}> ${name}${value};
"
	    classrelation_ref 266754 // mTouchExplorationStateChangeListeners (<unidirectional association>)
	  b parent class_ref 242818 // TouchExplorationStateChangeListener
      end

      class 242946 "HighTextContrastChangeListener"
	visibility public stereotype "interface"
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}interface ${name}${extends} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	operation 982914 "onHighTextContrastStateChanged"
	  public explicit_return_type "void"
	  nparams 1
	    param inout name "enabled" explicit_type "boolean"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Called when the high text contrast enabled state changes.

@param enabled Whether high text contrast is enabled."
	end
      end

      classrelation 266882 // mHighTextContrastStateChangeListeners (<unidirectional association>)
	relation 265986 --->
	  stereotype "CopyOnWriteArrayList"
	  a role_name "mHighTextContrastStateChangeListeners" init_value " new CopyOnWriteArrayList<>()" const_relation private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${stereotype}<${type}> ${name}${value};
"
	    classrelation_ref 266882 // mHighTextContrastStateChangeListeners (<unidirectional association>)
	  b parent class_ref 242946 // HighTextContrastChangeListener
      end

      attribute 693890 "mClient"
	const_attribute private explicit_type "IAccessibilityManagerClient.Stub"
	init_value "
            new IAccessibilityManagerClient.Stub() {
        public void setState(int state) {
            // We do not want to change this immediately as the applicatoin may
            // have already checked that accessibility is on and fired an event,
            // that is now propagating up the view tree, Hence, if accessibility
            // is now off an exception will be thrown. We want to have the exception
            // enforcement to guard against apps that fire unnecessary accessibility
            // events when accessibility is off.
            mHandler.obtainMessage(MyHandler.MSG_SET_STATE, state, 0).sendToTarget();
        }
    }"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      operation 983042 "getInstance"
	class_operation public return_type class_ref 237442 // AccessibilityManager
	nparams 1
	  param inout name "context" explicit_type "Context"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get an AccessibilityManager instance (create one if necessary).

@param context Context in which this manager operates.

@hide"
      end

      operation 983170 "AccessibilityManager"
	public explicit_return_type ""
	nparams 3
	  param inout name "context" explicit_type "Context"
	  param inout name "service" explicit_type "IAccessibilityManager"
	  param in name "userId" explicit_type "int"
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Create an instance.

@param context A {@link Context}.
@param service An interface to the backing service.
@param userId User id under which to run.

@hide"
      end

      operation 983298 "getClient"
	public explicit_return_type "IAccessibilityManagerClient"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@hide"
      end

      operation 983426 "isEnabled"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns if the accessibility in the system is enabled.

@return True if accessibility is enabled, false otherwise."
      end

      operation 983554 "isTouchExplorationEnabled"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns if the touch exploration in the system is enabled.

@return True if touch exploration is enabled, false otherwise."
      end

      operation 983682 "isHighTextContrastEnabled"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns if the high text contrast in the system is enabled.
<p>
<strong>Note:</strong> You need to query this only if you application is
doing its own rendering and does not rely on the platform rendering pipeline.
</p>

@return True if high text contrast is enabled, false otherwise.

@hide"
      end

      operation 983810 "sendAccessibilityEvent"
	public explicit_return_type "void"
	nparams 1
	  param inout name "event" type class_ref 217346 // AccessibilityEvent
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sends an {@link AccessibilityEvent}.

@param event The event to send.

@throws IllegalStateException if accessibility is not enabled.

<strong>Note:</strong> The preferred mechanism for sending custom accessibility
events is through calling
{@link android.view.ViewParent#requestSendAccessibilityEvent(View, AccessibilityEvent)}
instead of this method to allow predecessors to augment/filter events sent by
their descendants."
      end

      operation 983938 "interrupt"
	public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Requests feedback interruption from all accessibility services."
      end

      operation 984066 "getAccessibilityServiceList"
	public explicit_return_type "List<ServiceInfo>"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Deprecated
"
	
	
	
	comment "Returns the {@link ServiceInfo}s of the installed accessibility services.

@return An unmodifiable list with {@link ServiceInfo}s.

@deprecated Use {@link #getInstalledAccessibilityServiceList()}"
      end

      operation 984194 "getInstalledAccessibilityServiceList"
	public explicit_return_type "List<AccessibilityServiceInfo>"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the {@link AccessibilityServiceInfo}s of the installed accessibility services.

@return An unmodifiable list with {@link AccessibilityServiceInfo}s."
      end

      operation 984322 "getEnabledAccessibilityServiceList"
	public explicit_return_type "List<AccessibilityServiceInfo>"
	nparams 1
	  param in name "feedbackTypeFlags" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the {@link AccessibilityServiceInfo}s of the enabled accessibility services
for a given feedback type.

@param feedbackTypeFlags The feedback type flags.
@return An unmodifiable list with {@link AccessibilityServiceInfo}s.

@see AccessibilityServiceInfo#FEEDBACK_AUDIBLE
@see AccessibilityServiceInfo#FEEDBACK_GENERIC
@see AccessibilityServiceInfo#FEEDBACK_HAPTIC
@see AccessibilityServiceInfo#FEEDBACK_SPOKEN
@see AccessibilityServiceInfo#FEEDBACK_VISUAL
@see AccessibilityServiceInfo#FEEDBACK_BRAILLE"
      end

      operation 984450 "addAccessibilityStateChangeListener"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "listener" type class_ref 242690 // AccessibilityStateChangeListener
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}@NonNull ${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Registers an {@link AccessibilityStateChangeListener} for changes in
the global accessibility state of the system.

@param listener The listener.
@return True if successfully registered."
      end

      operation 984578 "removeAccessibilityStateChangeListener"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "listener" type class_ref 242690 // AccessibilityStateChangeListener
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}@NonNull ${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Unregisters an {@link AccessibilityStateChangeListener}.

@param listener The listener.
@return True if successfully unregistered."
      end

      operation 984706 "addTouchExplorationStateChangeListener"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "listener" type class_ref 242818 // TouchExplorationStateChangeListener
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}@NonNull ${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Registers a {@link TouchExplorationStateChangeListener} for changes in
the global touch exploration state of the system.

@param listener The listener.
@return True if successfully registered."
      end

      operation 984834 "removeTouchExplorationStateChangeListener"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "listener" type class_ref 242818 // TouchExplorationStateChangeListener
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}@NonNull ${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Unregisters a {@link TouchExplorationStateChangeListener}.

@param listener The listener.
@return True if successfully unregistered."
      end

      operation 984962 "addHighTextContrastStateChangeListener"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "listener" type class_ref 242946 // HighTextContrastChangeListener
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}@NonNull ${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Registers a {@link HighTextContrastChangeListener} for changes in
the global high text contrast state of the system.

@param listener The listener.
@return True if successfully registered.

@hide"
      end

      operation 985090 "removeHighTextContrastStateChangeListener"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "listener" type class_ref 242946 // HighTextContrastChangeListener
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}@NonNull ${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Unregisters a {@link HighTextContrastChangeListener}.

@param listener The listener.
@return True if successfully unregistered.

@hide"
      end

      operation 985218 "setStateLocked"
	private explicit_return_type "void"
	nparams 1
	  param in name "stateFlags" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the current state and notifies listeners, if necessary.

@param stateFlags The state flags."
      end

      operation 985346 "addAccessibilityInteractionConnection"
	public explicit_return_type "int"
	nparams 2
	  param inout name "windowToken" explicit_type "IWindow"
	  param inout name "connection" explicit_type "IAccessibilityInteractionConnection"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Adds an accessibility interaction connection interface for a given window.
@param windowToken The window token to which a connection is added.
@param connection The connection.

@hide"
      end

      operation 985474 "removeAccessibilityInteractionConnection"
	public explicit_return_type "void"
	nparams 1
	  param inout name "windowToken" explicit_type "IWindow"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Removed an accessibility interaction connection interface for a given window.
@param windowToken The window token to which a connection is removed.

@hide"
      end

      operation 985602 "getServiceLocked"
	private explicit_return_type "IAccessibilityManager"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 985730 "tryConnectToServiceLocked"
	private explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 985858 "handleNotifyAccessibilityStateChanged"
	private explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Notifies the registered {@link AccessibilityStateChangeListener}s."
      end

      operation 985986 "handleNotifyTouchExplorationStateChanged"
	private explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Notifies the registered {@link TouchExplorationStateChangeListener}s."
      end

      operation 986114 "handleNotifyHighTextContrastStateChanged"
	private explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Notifies the registered {@link HighTextContrastChangeListener}s."
      end

      class 243074 "MyHandler"
	visibility private 
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	final java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	classrelation 267010 // <generalisation>
	  relation 266114 ---|>
	    a public
	      cpp default "${type}"
	      java "${type}"
	      classrelation_ref 267010 // <generalisation>
	    b parent class_ref 133378 // Handler
	end

	attribute 694018 "MSG_NOTIFY_ACCESSIBILITY_STATE_CHANGED"
	  class_attribute const_attribute public explicit_type "int"
	  init_value " 1"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 694146 "MSG_NOTIFY_EXPLORATION_STATE_CHANGED"
	  class_attribute const_attribute public explicit_type "int"
	  init_value " 2"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 694274 "MSG_NOTIFY_HIGH_TEXT_CONTRAST_STATE_CHANGED"
	  class_attribute const_attribute public explicit_type "int"
	  init_value " 3"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 694402 "MSG_SET_STATE"
	  class_attribute const_attribute public explicit_type "int"
	  init_value " 4"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	operation 986242 "MyHandler"
	  public explicit_return_type ""
	  nparams 1
	    param inout name "looper" explicit_type "Looper"
	  cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	  cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 986370 "handleMessage"
	  public explicit_return_type "void"
	  nparams 1
	    param inout name "message" explicit_type "Message"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end
      end
    end

    class 247554 "AccessibilityCache"
      visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      final java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Cache for AccessibilityWindowInfos and AccessibilityNodeInfos.
It is updated when windows change or nodes change."
      attribute 734082 "LOG_TAG"
	class_attribute const_attribute private explicit_type "String"
	init_value " \"AccessibilityCache\""
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 734210 "DEBUG"
	class_attribute const_attribute private explicit_type "boolean"
	init_value " false"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 734338 "CHECK_INTEGRITY"
	class_attribute const_attribute private explicit_type "boolean"
	init_value " \"eng\".equals(Build.TYPE)"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 734466 "mLock"
	const_attribute private explicit_type "Object"
	init_value " new Object()"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 274562 // mWindowCache (<unidirectional association>)
	relation 273666 --->
	  stereotype "SparseArray"
	  a role_name "mWindowCache" init_value "
            new SparseArray<>()" const_relation private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${stereotype}<${type}> ${name}${value};
"
	    classrelation_ref 274562 // mWindowCache (<unidirectional association>)
	  b parent class_ref 247682 // AccessibilityWindowInfo
      end

      attribute 734594 "mNodeCache"
	const_attribute private explicit_type "LongSparseArray<AccessibilityNodeInfo>"
	init_value "
            new SparseArray<>()"
	stereotype "SparseArray"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${stereotype}<${type}> ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 274690 // mTempWindowArray (<unidirectional association>)
	relation 273794 --->
	  stereotype "SparseArray"
	  a role_name "mTempWindowArray" init_value "
            new SparseArray<>()" const_relation private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${stereotype}<${type}> ${name}${value};
"
	    classrelation_ref 274690 // mTempWindowArray (<unidirectional association>)
	  b parent class_ref 247682 // AccessibilityWindowInfo
      end

      operation 1056386 "addWindow"
	public explicit_return_type "void"
	nparams 1
	  param inout name "window" type class_ref 247682 // AccessibilityWindowInfo
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1056514 "onAccessibilityEvent"
	public explicit_return_type "void"
	nparams 1
	  param inout name "event" type class_ref 217346 // AccessibilityEvent
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Notifies the cache that the something in the UI changed. As a result
the cache will either refresh some nodes or evict some nodes.

@param event An event."
      end

      operation 1056642 "refreshCachedNodeLocked"
	private explicit_return_type "void"
	nparams 2
	  param in name "windowId" explicit_type "int"
	  param in name "sourceId" explicit_type "long"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1056770 "getNode"
	public return_type class_ref 208514 // AccessibilityNodeInfo
	nparams 2
	  param in name "windowId" explicit_type "int"
	  param in name "accessibilityNodeId" explicit_type "long"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets a cached {@link AccessibilityNodeInfo} given the id of the hosting
window and the accessibility id of the node.

@param windowId The id of the window hosting the node.
@param accessibilityNodeId The info accessibility node id.
@return The cached {@link AccessibilityNodeInfo} or null if such not found."
      end

      operation 1056898 "getWindows"
	public return_type class_ref 247682 // AccessibilityWindowInfo
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}List<${type}> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1057026 "getWindow"
	public return_type class_ref 247682 // AccessibilityWindowInfo
	nparams 1
	  param in name "windowId" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1057154 "add"
	public explicit_return_type "void"
	nparams 1
	  param inout name "info" type class_ref 208514 // AccessibilityNodeInfo
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Caches an {@link AccessibilityNodeInfo}.

@param info The node to cache."
      end

      operation 1057282 "clear"
	public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Clears the cache."
      end

      operation 1057410 "clearNodesForWindowLocked"
	private explicit_return_type "void"
	nparams 1
	  param in name "windowId" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1057538 "clearSubTreeLocked"
	private explicit_return_type "void"
	nparams 2
	  param in name "windowId" explicit_type "int"
	  param in name "rootNodeId" explicit_type "long"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Clears a subtree rooted at the node with the given id that is
hosted in a given window.

@param windowId The id of the hosting window.
@param rootNodeId The root id."
      end

      operation 1057666 "clearSubTreeRecursiveLocked"
	private explicit_return_type "void"
	nparams 2
	  param inout name "nodes" explicit_type "LongSparseArray<AccessibilityNodeInfo>"
	  param in name "rootNodeId" explicit_type "long"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Clears a subtree given a pointer to the root id and the nodes
in the hosting window.

@param nodes The nodes in the hosting window.
@param rootNodeId The id of the root to evict."
      end

      operation 1057794 "checkIntegrity"
	public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Check the integrity of the cache which is nodes from different windows
are not mixed, there is a single active window, there is a single focused
window, for every window there are no duplicates nodes, all nodes for a
window are connected, for every window there is a single input focused
node, and for every window there is a single accessibility focused node."
      end
    end

    class 247682 "AccessibilityWindowInfo"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      final java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "This class represents a state snapshot of a window for accessibility
purposes. The screen content contains one or more windows where some
windows can be descendants of other windows, which is the windows are
hierarchically ordered. Note that there is no root window. Hence, the
screen content can be seen as a collection of window trees."
      classrelation 280578 // <realization>
	relation 279682 -_-|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 280578 // <realization>
	  b parent class_ref 203266 // Parcelable
      end

      attribute 760578 "DEBUG"
	class_attribute const_attribute private explicit_type "boolean"
	init_value " false"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 760706 "TYPE_APPLICATION"
	class_attribute const_attribute public explicit_type "int"
	init_value " 1"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Window type: This is an application window. Such a window shows UI for
interacting with an application.
"
      end

      attribute 760834 "TYPE_INPUT_METHOD"
	class_attribute const_attribute public explicit_type "int"
	init_value " 2"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Window type: This is an input method window. Such a window shows UI for
inputting text such as keyboard, suggestions, etc.
"
      end

      attribute 760962 "TYPE_SYSTEM"
	class_attribute const_attribute public explicit_type "int"
	init_value " 3"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Window type: This is an system window. Such a window shows UI for
interacting with the system.
"
      end

      attribute 761090 "UNDEFINED"
	class_attribute const_attribute private explicit_type "int"
	init_value " -1"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 761218 "BOOLEAN_PROPERTY_ACTIVE"
	class_attribute const_attribute private explicit_type "int"
	init_value " 1 << 0"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 761346 "BOOLEAN_PROPERTY_FOCUSED"
	class_attribute const_attribute private explicit_type "int"
	init_value " 1 << 1"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 761474 "BOOLEAN_PROPERTY_ACCESSIBLITY_FOCUSED"
	class_attribute const_attribute private explicit_type "int"
	init_value " 1 << 2"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 761602 "MAX_POOL_SIZE"
	class_attribute const_attribute private explicit_type "int"
	init_value " 10"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Housekeeping."
      end

      classrelation 280706 // sPool (<unidirectional association>)
	relation 279810 --->
	  stereotype "SynchronizedPool"
	  a role_name "sPool" init_value "
            new SynchronizedPool<AccessibilityWindowInfo>(MAX_POOL_SIZE)" class_relation const_relation private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${stereotype}<${type}> ${name}${value};
"
	    classrelation_ref 280706 // sPool (<unidirectional association>)
	  b parent class_ref 247682 // AccessibilityWindowInfo
      end

      attribute 761730 "mType"
	private explicit_type "int"
	init_value " UNDEFINED"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Data."
      end

      attribute 761858 "mLayer"
	private explicit_type "int"
	init_value " UNDEFINED"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 761986 "mBooleanProperties"
	private explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 762114 "mId"
	private explicit_type "int"
	init_value " UNDEFINED"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 762242 "mParentId"
	private explicit_type "int"
	init_value " UNDEFINED"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 762370 "mBoundsInScreen"
	const_attribute private explicit_type "Rect"
	init_value " new Rect()"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 762498 "mChildIds"
	private explicit_type "LongArray"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 762626 "mConnectionId"
	private explicit_type "int"
	init_value " UNDEFINED"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      operation 1096706 "AccessibilityWindowInfo"
	private explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1096834 "getType"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the type of the window.

@return The type.

@see #TYPE_APPLICATION
@see #TYPE_INPUT_METHOD
@see #TYPE_SYSTEM"
      end

      operation 1096962 "setType"
	public explicit_return_type "void"
	nparams 1
	  param in name "type" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the type of the window.

@param The type

@hide"
      end

      operation 1097090 "getLayer"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the layer which determines the Z-order of the window. Windows
with greater layer appear on top of windows with lesser layer.

@return The window layer."
      end

      operation 1097218 "setLayer"
	public explicit_return_type "void"
	nparams 1
	  param in name "layer" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the layer which determines the Z-order of the window. Windows
with greater layer appear on top of windows with lesser layer.

@param The window layer.

@hide"
      end

      operation 1097346 "getRoot"
	public return_type class_ref 208514 // AccessibilityNodeInfo
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the root node in the window's hierarchy.

@return The root node."
      end

      operation 1097474 "getParent"
	public return_type class_ref 247682 // AccessibilityWindowInfo
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the parent window if such.

@return The parent window."
      end

      operation 1097602 "setParentId"
	public explicit_return_type "void"
	nparams 1
	  param in name "parentId" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the parent window id.

@param parentId The parent id.

@hide"
      end

      operation 1097730 "getId"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the unique window id.

@return windowId The window id."
      end

      operation 1097858 "setId"
	public explicit_return_type "void"
	nparams 1
	  param in name "id" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the unique window id.

@param windowId The window id.

@hide"
      end

      operation 1097986 "setConnectionId"
	public explicit_return_type "void"
	nparams 1
	  param in name "connectionId" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the unique id of the IAccessibilityServiceConnection over which
this instance can send requests to the system.

@param connectionId The connection id.

@hide"
      end

      operation 1098114 "getBoundsInScreen"
	public explicit_return_type "void"
	nparams 1
	  param inout name "outBounds" explicit_type "Rect"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the bounds of this window in the screen.

@param outBounds The out window bounds."
      end

      operation 1098242 "setBoundsInScreen"
	public explicit_return_type "void"
	nparams 1
	  param inout name "bounds" explicit_type "Rect"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the bounds of this window in the screen.

@param bounds The out window bounds.

@hide"
      end

      operation 1098370 "isActive"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets if this window is active. An active window is the one
the user is currently touching or the window has input focus
and the user is not touching any window.

@return Whether this is the active window."
      end

      operation 1098498 "setActive"
	public explicit_return_type "void"
	nparams 1
	  param inout name "active" explicit_type "boolean"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets if this window is active, which is this is the window
the user is currently touching or the window has input focus
and the user is not touching any window.

@param Whether this is the active window.

@hide"
      end

      operation 1098626 "isFocused"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets if this window has input focus.

@return Whether has input focus."
      end

      operation 1098754 "setFocused"
	public explicit_return_type "void"
	nparams 1
	  param inout name "focused" explicit_type "boolean"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets if this window has input focus.

@param Whether has input focus.

@hide"
      end

      operation 1098882 "isAccessibilityFocused"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets if this window has accessibility focus.

@return Whether has accessibility focus."
      end

      operation 1099010 "setAccessibilityFocused"
	public explicit_return_type "void"
	nparams 1
	  param inout name "focused" explicit_type "boolean"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets if this window has accessibility focus.

@param Whether has accessibility focus.

@hide"
      end

      operation 1099138 "getChildCount"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the number of child windows.

@return The child count."
      end

      operation 1099266 "getChild"
	public return_type class_ref 247682 // AccessibilityWindowInfo
	nparams 1
	  param in name "index" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the child window at a given index.

@param index The index.
@return The child."
      end

      operation 1099394 "addChild"
	public explicit_return_type "void"
	nparams 1
	  param in name "childId" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Adds a child window.

@param childId The child window id.

@hide"
      end

      operation 1099522 "obtain"
	class_operation public return_type class_ref 247682 // AccessibilityWindowInfo
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a cached instance if such is available or a new one is
created.

@return An instance."
      end

      operation 1099650 "obtain"
	class_operation public return_type class_ref 247682 // AccessibilityWindowInfo
	nparams 1
	  param inout name "info" type class_ref 247682 // AccessibilityWindowInfo
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a cached instance if such is available or a new one is
created. The returned instance is initialized from the given
<code>info</code>.

@param info The other info.
@return An instance."
      end

      operation 1099778 "recycle"
	public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return an instance back to be reused.
<p>
<strong>Note:</strong> You must not touch the object after calling this function.
</p>

@throws IllegalStateException If the info is already recycled."
      end

      operation 1099906 "describeContents"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 1100034 "writeToParcel"
	public explicit_return_type "void"
	nparams 2
	  param inout name "parcel" explicit_type "Parcel"
	  param in name "flags" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 1100162 "initFromParcel"
	private explicit_return_type "void"
	nparams 1
	  param inout name "parcel" explicit_type "Parcel"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1100290 "hashCode"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 1100418 "equals"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "obj" explicit_type "Object"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 1100546 "toString"
	public explicit_return_type "String"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 1100674 "clear"
	private explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Clears the internal state."
      end

      operation 1100802 "getBooleanProperty"
	private explicit_return_type "boolean"
	nparams 1
	  param in name "property" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the value of a boolean property.

@param property The property.
@return The value."
      end

      operation 1100930 "setBooleanProperty"
	private explicit_return_type "void"
	nparams 2
	  param in name "property" explicit_type "int"
	  param inout name "value" explicit_type "boolean"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets a boolean property.

@param property The property.
@param value The value.

@throws IllegalStateException If called from an AccessibilityService."
      end

      operation 1101058 "typeToString"
	class_operation private explicit_return_type "String"
	nparams 1
	  param in name "type" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1101186 "changed"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "other" type class_ref 247682 // AccessibilityWindowInfo
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Checks whether this window changed. The argument should be
another state of the same window, which is have the same id
and type as they never change.

@param other The new state.
@return Whether something changed.

@hide"
      end

      classrelation 280834 // CREATOR (<unidirectional association>)
	relation 279938 --->
	  stereotype "Parcelable.Creator"
	  a role_name "CREATOR" init_value "
            new Creator<AccessibilityWindowInfo>() {
        @Override
        public AccessibilityWindowInfo createFromParcel(Parcel parcel) {
            AccessibilityWindowInfo info = obtain();
            info.initFromParcel(parcel);
            return info;
        }

        @Override
        public AccessibilityWindowInfo[] newArray(int size) {
            return new AccessibilityWindowInfo[size];
        }
    }" class_relation const_relation public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${stereotype}<${type}> ${name}${value};
"
	    classrelation_ref 280834 // CREATOR (<unidirectional association>)
	  b parent class_ref 247682 // AccessibilityWindowInfo
      end
    end

    class 247810 "AccessibilityRecord"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Represents a record in an {@link AccessibilityEvent} and contains information
about state change of its source {@link android.view.View}. When a view fires
an accessibility event it requests from its parent to dispatch the
constructed event. The parent may optionally append a record for itself
for providing more context to
{@link android.accessibilityservice.AccessibilityService}s. Hence,
accessibility services can facilitate additional accessibility records
to enhance feedback.
</p>
<p>
Once the accessibility event containing a record is dispatched the record is
made immutable and calling a state mutation method generates an error.
</p>
<p>
<strong>Note:</strong> Not all properties are applicable to all accessibility
event types. For detailed information please refer to {@link AccessibilityEvent}.
</p>

<div class=\"special reference\">
<h3>Developer Guides</h3>
<p>For more information about creating and processing AccessibilityRecords, read the
<a href=\"{@docRoot}guide/topics/ui/accessibility/index.html\">Accessibility</a>
developer guide.</p>
</div>

@see AccessibilityEvent
@see AccessibilityManager
@see android.accessibilityservice.AccessibilityService
@see AccessibilityNodeInfo"
      attribute 734722 "UNDEFINED"
	class_attribute const_attribute private explicit_type "int"
	init_value " -1"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 734850 "PROPERTY_CHECKED"
	class_attribute const_attribute private explicit_type "int"
	init_value " 0x00000001"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 734978 "PROPERTY_ENABLED"
	class_attribute const_attribute private explicit_type "int"
	init_value " 0x00000002"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 735106 "PROPERTY_PASSWORD"
	class_attribute const_attribute private explicit_type "int"
	init_value " 0x00000004"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 735234 "PROPERTY_FULL_SCREEN"
	class_attribute const_attribute private explicit_type "int"
	init_value " 0x00000080"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 735362 "PROPERTY_SCROLLABLE"
	class_attribute const_attribute private explicit_type "int"
	init_value " 0x00000100"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 735490 "PROPERTY_IMPORTANT_FOR_ACCESSIBILITY"
	class_attribute const_attribute private explicit_type "int"
	init_value " 0x00000200"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 735618 "GET_SOURCE_PREFETCH_FLAGS"
	class_attribute const_attribute private explicit_type "int"
	init_value "
        AccessibilityNodeInfo.FLAG_PREFETCH_PREDECESSORS
        | AccessibilityNodeInfo.FLAG_PREFETCH_SIBLINGS
        | AccessibilityNodeInfo.FLAG_PREFETCH_DESCENDANTS"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 735746 "MAX_POOL_SIZE"
	class_attribute const_attribute private explicit_type "int"
	init_value " 10"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Housekeeping"
      end

      attribute 735874 "sPoolLock"
	class_attribute const_attribute private explicit_type "Object"
	init_value " new Object()"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 274818 // sPool (<unidirectional association>)
	relation 273922 --->
	  a role_name "sPool" class_relation private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 274818 // sPool (<unidirectional association>)
	  b parent class_ref 247810 // AccessibilityRecord
      end

      attribute 736002 "sPoolSize"
	class_attribute private explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 274946 // mNext (<unidirectional association>)
	relation 274050 --->
	  a role_name "mNext" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 274946 // mNext (<unidirectional association>)
	  b parent class_ref 247810 // AccessibilityRecord
      end

      attribute 736130 "mIsInPool"
	private explicit_type "boolean"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 736258 "mSealed"
	package explicit_type "boolean"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 736386 "mBooleanProperties"
	package explicit_type "int"
	init_value " 0"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 736514 "mCurrentItemIndex"
	package explicit_type "int"
	init_value " UNDEFINED"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 736642 "mItemCount"
	package explicit_type "int"
	init_value " UNDEFINED"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 736770 "mFromIndex"
	package explicit_type "int"
	init_value " UNDEFINED"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 736898 "mToIndex"
	package explicit_type "int"
	init_value " UNDEFINED"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 737026 "mScrollX"
	package explicit_type "int"
	init_value " UNDEFINED"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 737154 "mScrollY"
	package explicit_type "int"
	init_value " UNDEFINED"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 737282 "mMaxScrollX"
	package explicit_type "int"
	init_value " UNDEFINED"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 737410 "mMaxScrollY"
	package explicit_type "int"
	init_value " UNDEFINED"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 737538 "mAddedCount"
	package explicit_type "int"
	init_value " UNDEFINED"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 737666 "mRemovedCount"
	package explicit_type "int"
	init_value " UNDEFINED"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 737794 "mSourceNodeId"
	package explicit_type "long"
	init_value " AccessibilityNodeInfo.makeNodeId(UNDEFINED, UNDEFINED)"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 737922 "mSourceWindowId"
	package explicit_type "int"
	init_value " UNDEFINED"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 738050 "mClassName"
	package explicit_type "CharSequence"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 738178 "mContentDescription"
	package explicit_type "CharSequence"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 738306 "mBeforeText"
	package explicit_type "CharSequence"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 738434 "mParcelableData"
	package explicit_type "Parcelable"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 738562 "mText"
	const_attribute package explicit_type "CharSequence"
	init_value " new ArrayList<CharSequence>()"
	stereotype "List"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${stereotype}<${type}> ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 738690 "mConnectionId"
	package explicit_type "int"
	init_value " UNDEFINED"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      operation 1057922 "AccessibilityRecord"
	package explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Hide constructor."
      end

      operation 1058050 "setSource"
	public explicit_return_type "void"
	nparams 1
	  param inout name "source" type class_ref 208898 // View
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the event source.

@param source The source.

@throws IllegalStateException If called from an AccessibilityService."
      end

      operation 1058178 "setSource"
	public explicit_return_type "void"
	nparams 2
	  param inout name "root" type class_ref 208898 // View
	  param in name "virtualDescendantId" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the source to be a virtual descendant of the given <code>root</code>.
If <code>virtualDescendantId</code> equals to {@link View#NO_ID} the root
is set as the source.
<p>
A virtual descendant is an imaginary View that is reported as a part of the view
hierarchy for accessibility purposes. This enables custom views that draw complex
content to report them selves as a tree of virtual views, thus conveying their
logical structure.
</p>

@param root The root of the virtual subtree.
@param virtualDescendantId The id of the virtual descendant."
      end

      operation 1058306 "getSource"
	public return_type class_ref 208514 // AccessibilityNodeInfo
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the {@link AccessibilityNodeInfo} of the event source.
<p>
  <strong>Note:</strong> It is a client responsibility to recycle the received info
  by calling {@link AccessibilityNodeInfo#recycle() AccessibilityNodeInfo#recycle()}
  to avoid creating of multiple instances.
</p>
@return The info of the source."
      end

      operation 1058434 "setWindowId"
	public explicit_return_type "void"
	nparams 1
	  param in name "windowId" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the window id.

@param windowId The window id.

@hide"
      end

      operation 1058562 "getWindowId"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the id of the window from which the event comes from.

@return The window id."
      end

      operation 1058690 "isChecked"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets if the source is checked.

@return True if the view is checked, false otherwise."
      end

      operation 1058818 "setChecked"
	public explicit_return_type "void"
	nparams 1
	  param inout name "isChecked" explicit_type "boolean"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets if the source is checked.

@param isChecked True if the view is checked, false otherwise.

@throws IllegalStateException If called from an AccessibilityService."
      end

      operation 1058946 "isEnabled"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets if the source is enabled.

@return True if the view is enabled, false otherwise."
      end

      operation 1059074 "setEnabled"
	public explicit_return_type "void"
	nparams 1
	  param inout name "isEnabled" explicit_type "boolean"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets if the source is enabled.

@param isEnabled True if the view is enabled, false otherwise.

@throws IllegalStateException If called from an AccessibilityService."
      end

      operation 1059202 "isPassword"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets if the source is a password field.

@return True if the view is a password field, false otherwise."
      end

      operation 1059330 "setPassword"
	public explicit_return_type "void"
	nparams 1
	  param inout name "isPassword" explicit_type "boolean"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets if the source is a password field.

@param isPassword True if the view is a password field, false otherwise.

@throws IllegalStateException If called from an AccessibilityService."
      end

      operation 1059458 "isFullScreen"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets if the source is taking the entire screen.

@return True if the source is full screen, false otherwise."
      end

      operation 1059586 "setFullScreen"
	public explicit_return_type "void"
	nparams 1
	  param inout name "isFullScreen" explicit_type "boolean"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets if the source is taking the entire screen.

@param isFullScreen True if the source is full screen, false otherwise.

@throws IllegalStateException If called from an AccessibilityService."
      end

      operation 1059714 "isScrollable"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets if the source is scrollable.

@return True if the source is scrollable, false otherwise."
      end

      operation 1059842 "setScrollable"
	public explicit_return_type "void"
	nparams 1
	  param inout name "scrollable" explicit_type "boolean"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets if the source is scrollable.

@param scrollable True if the source is scrollable, false otherwise.

@throws IllegalStateException If called from an AccessibilityService."
      end

      operation 1059970 "isImportantForAccessibility"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets if the source is important for accessibility.

<strong>Note:</strong> Used only internally to determine whether
to deliver the event to a given accessibility service since some
services may want to regard all views for accessibility while others
may want to regard only the important views for accessibility.

@return True if the source is important for accessibility,
       false otherwise.

@hide"
      end

      operation 1060098 "getItemCount"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the number of items that can be visited.

@return The number of items."
      end

      operation 1060226 "setItemCount"
	public explicit_return_type "void"
	nparams 1
	  param in name "itemCount" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the number of items that can be visited.

@param itemCount The number of items.

@throws IllegalStateException If called from an AccessibilityService."
      end

      operation 1060354 "getCurrentItemIndex"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the index of the source in the list of items the can be visited.

@return The current item index."
      end

      operation 1060482 "setCurrentItemIndex"
	public explicit_return_type "void"
	nparams 1
	  param in name "currentItemIndex" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the index of the source in the list of items that can be visited.

@param currentItemIndex The current item index.

@throws IllegalStateException If called from an AccessibilityService."
      end

      operation 1060610 "getFromIndex"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the index of the first character of the changed sequence,
or the beginning of a text selection or the index of the first
visible item when scrolling.

@return The index of the first character or selection
       start or the first visible item."
      end

      operation 1060738 "setFromIndex"
	public explicit_return_type "void"
	nparams 1
	  param in name "fromIndex" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the index of the first character of the changed sequence
or the beginning of a text selection or the index of the first
visible item when scrolling.

@param fromIndex The index of the first character or selection
       start or the first visible item.

@throws IllegalStateException If called from an AccessibilityService."
      end

      operation 1060866 "getToIndex"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the index of text selection end or the index of the last
visible item when scrolling.

@return The index of selection end or last item index."
      end

      operation 1060994 "setToIndex"
	public explicit_return_type "void"
	nparams 1
	  param in name "toIndex" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the index of text selection end or the index of the last
visible item when scrolling.

@param toIndex The index of selection end or last item index."
      end

      operation 1061122 "getScrollX"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the scroll offset of the source left edge in pixels.

@return The scroll."
      end

      operation 1061250 "setScrollX"
	public explicit_return_type "void"
	nparams 1
	  param in name "scrollX" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the scroll offset of the source left edge in pixels.

@param scrollX The scroll."
      end

      operation 1061378 "getScrollY"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the scroll offset of the source top edge in pixels.

@return The scroll."
      end

      operation 1061506 "setScrollY"
	public explicit_return_type "void"
	nparams 1
	  param in name "scrollY" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the scroll offset of the source top edge in pixels.

@param scrollY The scroll."
      end

      operation 1061634 "getMaxScrollX"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the max scroll offset of the source left edge in pixels.

@return The max scroll."
      end

      operation 1061762 "setMaxScrollX"
	public explicit_return_type "void"
	nparams 1
	  param in name "maxScrollX" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the max scroll offset of the source left edge in pixels.

@param maxScrollX The max scroll."
      end

      operation 1061890 "getMaxScrollY"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the max scroll offset of the source top edge in pixels.

@return The max scroll."
      end

      operation 1062018 "setMaxScrollY"
	public explicit_return_type "void"
	nparams 1
	  param in name "maxScrollY" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the max scroll offset of the source top edge in pixels.

@param maxScrollY The max scroll."
      end

      operation 1062146 "getAddedCount"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the number of added characters.

@return The number of added characters."
      end

      operation 1062274 "setAddedCount"
	public explicit_return_type "void"
	nparams 1
	  param in name "addedCount" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the number of added characters.

@param addedCount The number of added characters.

@throws IllegalStateException If called from an AccessibilityService."
      end

      operation 1062402 "getRemovedCount"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the number of removed characters.

@return The number of removed characters."
      end

      operation 1062530 "setRemovedCount"
	public explicit_return_type "void"
	nparams 1
	  param in name "removedCount" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the number of removed characters.

@param removedCount The number of removed characters.

@throws IllegalStateException If called from an AccessibilityService."
      end

      operation 1062658 "getClassName"
	public explicit_return_type "CharSequence"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the class name of the source.

@return The class name."
      end

      operation 1062786 "setClassName"
	public explicit_return_type "void"
	nparams 1
	  param inout name "className" explicit_type "CharSequence"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the class name of the source.

@param className The lass name.

@throws IllegalStateException If called from an AccessibilityService."
      end

      operation 1062914 "getText"
	public explicit_return_type "List<CharSequence>"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the text of the event. The index in the list represents the priority
of the text. Specifically, the lower the index the higher the priority.

@return The text."
      end

      operation 1063042 "getBeforeText"
	public explicit_return_type "CharSequence"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the text before a change.

@return The text before the change."
      end

      operation 1063170 "setBeforeText"
	public explicit_return_type "void"
	nparams 1
	  param inout name "beforeText" explicit_type "CharSequence"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the text before a change.

@param beforeText The text before the change.

@throws IllegalStateException If called from an AccessibilityService."
      end

      operation 1063298 "getContentDescription"
	public explicit_return_type "CharSequence"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the description of the source.

@return The description."
      end

      operation 1063426 "setContentDescription"
	public explicit_return_type "void"
	nparams 1
	  param inout name "contentDescription" explicit_type "CharSequence"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the description of the source.

@param contentDescription The description.

@throws IllegalStateException If called from an AccessibilityService."
      end

      operation 1063554 "getParcelableData"
	public explicit_return_type "Parcelable"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the {@link Parcelable} data.

@return The parcelable data."
      end

      operation 1063682 "setParcelableData"
	public explicit_return_type "void"
	nparams 1
	  param inout name "parcelableData" explicit_type "Parcelable"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the {@link Parcelable} data of the event.

@param parcelableData The parcelable data.

@throws IllegalStateException If called from an AccessibilityService."
      end

      operation 1063810 "getSourceNodeId"
	public explicit_return_type "long"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the id of the source node.

@return The id.

@hide"
      end

      operation 1063938 "setConnectionId"
	public explicit_return_type "void"
	nparams 1
	  param in name "connectionId" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the unique id of the IAccessibilityServiceConnection over which
this instance can send requests to the system.

@param connectionId The connection id.

@hide"
      end

      operation 1064066 "setSealed"
	public explicit_return_type "void"
	nparams 1
	  param inout name "sealed" explicit_type "boolean"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets if this instance is sealed.

@param sealed Whether is sealed.

@hide"
      end

      operation 1064194 "isSealed"
	package explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets if this instance is sealed.

@return Whether is sealed."
      end

      operation 1064322 "enforceSealed"
	package explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Enforces that this instance is sealed.

@throws IllegalStateException If this instance is not sealed."
      end

      operation 1064450 "enforceNotSealed"
	package explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Enforces that this instance is not sealed.

@throws IllegalStateException If this instance is sealed."
      end

      operation 1064578 "getBooleanProperty"
	private explicit_return_type "boolean"
	nparams 1
	  param in name "property" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the value of a boolean property.

@param property The property.
@return The value."
      end

      operation 1064706 "setBooleanProperty"
	private explicit_return_type "void"
	nparams 2
	  param in name "property" explicit_type "int"
	  param inout name "value" explicit_type "boolean"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets a boolean property.

@param property The property.
@param value The value."
      end

      operation 1064834 "obtain"
	class_operation public return_type class_ref 247810 // AccessibilityRecord
	nparams 1
	  param inout name "record" type class_ref 247810 // AccessibilityRecord
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a cached instance if such is available or a new one is
instantiated. The instance is initialized with data from the
given record.

@return An instance."
      end

      operation 1064962 "obtain"
	class_operation public return_type class_ref 247810 // AccessibilityRecord
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a cached instance if such is available or a new one is
instantiated.

@return An instance."
      end

      operation 1065090 "recycle"
	public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return an instance back to be reused.
<p>
<strong>Note:</strong> You must not touch the object after calling this function.

@throws IllegalStateException If the record is already recycled."
      end

      operation 1065218 "init"
	package explicit_return_type "void"
	nparams 1
	  param inout name "record" type class_ref 247810 // AccessibilityRecord
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Initialize this record from another one.

@param record The to initialize from."
      end

      operation 1065346 "clear"
	package explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Clears the state of this instance."
      end

      operation 1065474 "toString"
	public explicit_return_type "String"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end
    end

    class 247938 "AccessibilityInteractionClient"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      final java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "This class is a singleton that performs accessibility interaction
which is it queries remote view hierarchies about snapshots of their
views as well requests from these hierarchies to perform certain
actions on their views.

Rationale: The content retrieval APIs are synchronous from a client's
    perspective but internally they are asynchronous. The client thread
    calls into the system requesting an action and providing a callback
    to receive the result after which it waits up to a timeout for that
    result. The system enforces security and the delegates the request
    to a given view hierarchy where a message is posted (from a binder
    thread) describing what to be performed by the main UI thread the
    result of which it delivered via the mentioned callback. However,
    the blocked client thread and the main UI thread of the target view
    hierarchy can be the same thread, for example an accessibility service
    and an activity run in the same process, thus they are executed on the
    same main thread. In such a case the retrieval will fail since the UI
    thread that has to process the message describing the work to be done
    is blocked waiting for a result is has to compute! To avoid this scenario
    when making a call the client also passes its process and thread ids so
    the accessed view hierarchy can detect if the client making the request
    is running in its main UI thread. In such a case the view hierarchy,
    specifically the binder thread performing the IPC to it, does not post a
    message to be run on the UI thread but passes it to the singleton
    interaction client through which all interactions occur and the latter is
    responsible to execute the message before starting to wait for the
    asynchronous result delivered via the callback. In this case the expected
    result is already received so no waiting is performed.

@hide"
      classrelation 275714 // <generalisation>
	relation 274818 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 275714 // <generalisation>
	  b parent class_ref 248066 // Stub
      end

      attribute 743682 "NO_ID"
	class_attribute const_attribute public explicit_type "int"
	init_value " -1"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 743810 "LOG_TAG"
	class_attribute const_attribute private explicit_type "String"
	init_value " \"AccessibilityInteractionClient\""
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 743938 "DEBUG"
	class_attribute const_attribute private explicit_type "boolean"
	init_value " false"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 744066 "CHECK_INTEGRITY"
	class_attribute const_attribute private explicit_type "boolean"
	init_value " true"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 744194 "TIMEOUT_INTERACTION_MILLIS"
	class_attribute const_attribute private explicit_type "long"
	init_value " 5000"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 744322 "sStaticLock"
	class_attribute const_attribute private explicit_type "Object"
	init_value " new Object()"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 275842 // sClients (<unidirectional association>)
	relation 274946 --->
	  stereotype "LongSparseArray"
	  a role_name "sClients" init_value "
        new LongSparseArray<>()" class_relation const_relation private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${stereotype}<${type}> ${name}${value};
"
	    classrelation_ref 275842 // sClients (<unidirectional association>)
	  b parent class_ref 247938 // AccessibilityInteractionClient
      end

      attribute 744450 "mInteractionIdCounter"
	const_attribute private explicit_type "AtomicInteger"
	init_value " new AtomicInteger()"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 744578 "mInstanceLock"
	const_attribute private explicit_type "Object"
	init_value " new Object()"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 744706 "mInteractionId"
	volatile private explicit_type "int"
	init_value " -1"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 275970 // mFindAccessibilityNodeInfoResult (<unidirectional association>)
	relation 275074 --->
	  a role_name "mFindAccessibilityNodeInfoResult" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 275970 // mFindAccessibilityNodeInfoResult (<unidirectional association>)
	  b parent class_ref 208514 // AccessibilityNodeInfo
      end

      classrelation 276098 // mFindAccessibilityNodeInfosResult (<unidirectional association>)
	relation 275202 --->
	  stereotype "List"
	  a role_name "mFindAccessibilityNodeInfosResult" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${stereotype}<${type}> ${name}${value};
"
	    classrelation_ref 276098 // mFindAccessibilityNodeInfosResult (<unidirectional association>)
	  b parent class_ref 208514 // AccessibilityNodeInfo
      end

      attribute 744834 "mPerformAccessibilityActionResult"
	private explicit_type "boolean"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 744962 "mComputeClickPointResult"
	private explicit_type "Point"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 745090 "mSameThreadMessage"
	private explicit_type "Message"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 745218 "sConnectionCache"
	class_attribute const_attribute private explicit_type "IAccessibilityServiceConnection"
	init_value "
        new SparseArray<>()"
	stereotype "SparseArray"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${stereotype}<${type}> ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 276226 // sAccessibilityCache (<unidirectional association>)
	relation 275330 --->
	  a role_name "sAccessibilityCache" init_value "
        new AccessibilityCache()" class_relation const_relation private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 276226 // sAccessibilityCache (<unidirectional association>)
	  b parent class_ref 247554 // AccessibilityCache
      end

      operation 1069442 "getInstance"
	class_operation public return_type class_ref 247938 // AccessibilityInteractionClient
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@return The client for the current thread."
      end

      operation 1069570 "getInstanceForThread"
	class_operation public return_type class_ref 247938 // AccessibilityInteractionClient
	nparams 1
	  param in name "threadId" explicit_type "long"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<strong>Note:</strong> We keep one instance per interrogating thread since
the instance contains state which can lead to undesired thread interleavings.
We do not have a thread local variable since other threads should be able to
look up the correct client knowing a thread id. See ViewRootImpl for details.

@return The client for a given <code>threadId</code>."
      end

      operation 1069698 "AccessibilityInteractionClient"
	private explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1069826 "setSameThreadMessage"
	public explicit_return_type "void"
	nparams 1
	  param inout name "message" explicit_type "Message"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the message to be processed if the interacted view hierarchy
and the interacting client are running in the same thread.

@param message The message."
      end

      operation 1069954 "getRootInActiveWindow"
	public return_type class_ref 208514 // AccessibilityNodeInfo
	nparams 1
	  param in name "connectionId" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the root {@link AccessibilityNodeInfo} in the currently active window.

@param connectionId The id of a connection for interacting with the system.
@return The root {@link AccessibilityNodeInfo} if found, null otherwise."
      end

      operation 1070082 "getWindow"
	public return_type class_ref 247682 // AccessibilityWindowInfo
	nparams 2
	  param in name "connectionId" explicit_type "int"
	  param in name "accessibilityWindowId" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the info for a window.

@param connectionId The id of a connection for interacting with the system.
@param accessibilityWindowId A unique window id. Use
    {@link android.view.accessibility.AccessibilityNodeInfo#ACTIVE_WINDOW_ID}
    to query the currently active window.
@return The {@link AccessibilityWindowInfo}."
      end

      operation 1070210 "getWindows"
	public return_type class_ref 247682 // AccessibilityWindowInfo
	nparams 1
	  param in name "connectionId" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}List<${type}> ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the info for all windows.

@param connectionId The id of a connection for interacting with the system.
@return The {@link AccessibilityWindowInfo} list."
      end

      operation 1070338 "findAccessibilityNodeInfoByAccessibilityId"
	public return_type class_ref 208514 // AccessibilityNodeInfo
	nparams 5
	  param in name "connectionId" explicit_type "int"
	  param in name "accessibilityWindowId" explicit_type "int"
	  param in name "accessibilityNodeId" explicit_type "long"
	  param inout name "bypassCache" explicit_type "boolean"
	  param in name "prefetchFlags" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Finds an {@link AccessibilityNodeInfo} by accessibility id.

@param connectionId The id of a connection for interacting with the system.
@param accessibilityWindowId A unique window id. Use
    {@link android.view.accessibility.AccessibilityNodeInfo#ACTIVE_WINDOW_ID}
    to query the currently active window.
@param accessibilityNodeId A unique view id or virtual descendant id from
    where to start the search. Use
    {@link android.view.accessibility.AccessibilityNodeInfo#ROOT_NODE_ID}
    to start from the root.
@param bypassCache Whether to bypass the cache while looking for the node.
@param prefetchFlags flags to guide prefetching.
@return An {@link AccessibilityNodeInfo} if found, null otherwise."
      end

      operation 1070466 "findAccessibilityNodeInfosByViewId"
	public return_type class_ref 208514 // AccessibilityNodeInfo
	nparams 4
	  param in name "connectionId" explicit_type "int"
	  param in name "accessibilityWindowId" explicit_type "int"
	  param in name "accessibilityNodeId" explicit_type "long"
	  param in name "viewId" explicit_type "String"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}List<${type}> ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Finds an {@link AccessibilityNodeInfo} by View id. The search is performed in
the window whose id is specified and starts from the node whose accessibility
id is specified.

@param connectionId The id of a connection for interacting with the system.
@param accessibilityWindowId A unique window id. Use
    {@link android.view.accessibility.AccessibilityNodeInfo#ACTIVE_WINDOW_ID}
    to query the currently active window.
@param accessibilityNodeId A unique view id or virtual descendant id from
    where to start the search. Use
    {@link android.view.accessibility.AccessibilityNodeInfo#ROOT_NODE_ID}
    to start from the root.
@param viewId The fully qualified resource name of the view id to find.
@return An list of {@link AccessibilityNodeInfo} if found, empty list otherwise."
      end

      operation 1070594 "findAccessibilityNodeInfosByText"
	public return_type class_ref 208514 // AccessibilityNodeInfo
	nparams 4
	  param in name "connectionId" explicit_type "int"
	  param in name "accessibilityWindowId" explicit_type "int"
	  param in name "accessibilityNodeId" explicit_type "long"
	  param in name "text" explicit_type "String"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}List<${type}> ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Finds {@link AccessibilityNodeInfo}s by View text. The match is case
insensitive containment. The search is performed in the window whose
id is specified and starts from the node whose accessibility id is
specified.

@param connectionId The id of a connection for interacting with the system.
@param accessibilityWindowId A unique window id. Use
    {@link android.view.accessibility.AccessibilityNodeInfo#ACTIVE_WINDOW_ID}
    to query the currently active window.
@param accessibilityNodeId A unique view id or virtual descendant id from
    where to start the search. Use
    {@link android.view.accessibility.AccessibilityNodeInfo#ROOT_NODE_ID}
    to start from the root.
@param text The searched text.
@return A list of found {@link AccessibilityNodeInfo}s."
      end

      operation 1070722 "findFocus"
	public return_type class_ref 208514 // AccessibilityNodeInfo
	nparams 4
	  param in name "connectionId" explicit_type "int"
	  param in name "accessibilityWindowId" explicit_type "int"
	  param in name "accessibilityNodeId" explicit_type "long"
	  param in name "focusType" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Finds the {@link android.view.accessibility.AccessibilityNodeInfo} that has the
specified focus type. The search is performed in the window whose id is specified
and starts from the node whose accessibility id is specified.

@param connectionId The id of a connection for interacting with the system.
@param accessibilityWindowId A unique window id. Use
    {@link android.view.accessibility.AccessibilityNodeInfo#ACTIVE_WINDOW_ID}
    to query the currently active window.
@param accessibilityNodeId A unique view id or virtual descendant id from
    where to start the search. Use
    {@link android.view.accessibility.AccessibilityNodeInfo#ROOT_NODE_ID}
    to start from the root.
@param focusType The focus type.
@return The accessibility focused {@link AccessibilityNodeInfo}."
      end

      operation 1070850 "focusSearch"
	public return_type class_ref 208514 // AccessibilityNodeInfo
	nparams 4
	  param in name "connectionId" explicit_type "int"
	  param in name "accessibilityWindowId" explicit_type "int"
	  param in name "accessibilityNodeId" explicit_type "long"
	  param in name "direction" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Finds the accessibility focused {@link android.view.accessibility.AccessibilityNodeInfo}.
The search is performed in the window whose id is specified and starts from the
node whose accessibility id is specified.

@param connectionId The id of a connection for interacting with the system.
@param accessibilityWindowId A unique window id. Use
    {@link android.view.accessibility.AccessibilityNodeInfo#ACTIVE_WINDOW_ID}
    to query the currently active window.
@param accessibilityNodeId A unique view id or virtual descendant id from
    where to start the search. Use
    {@link android.view.accessibility.AccessibilityNodeInfo#ROOT_NODE_ID}
    to start from the root.
@param direction The direction in which to search for focusable.
@return The accessibility focused {@link AccessibilityNodeInfo}."
      end

      operation 1070978 "performAccessibilityAction"
	public explicit_return_type "boolean"
	nparams 5
	  param in name "connectionId" explicit_type "int"
	  param in name "accessibilityWindowId" explicit_type "int"
	  param in name "accessibilityNodeId" explicit_type "long"
	  param in name "action" explicit_type "int"
	  param inout name "arguments" explicit_type "Bundle"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Performs an accessibility action on an {@link AccessibilityNodeInfo}.

@param connectionId The id of a connection for interacting with the system.
@param accessibilityWindowId A unique window id. Use
    {@link android.view.accessibility.AccessibilityNodeInfo#ACTIVE_WINDOW_ID}
    to query the currently active window.
@param accessibilityNodeId A unique view id or virtual descendant id from
    where to start the search. Use
    {@link android.view.accessibility.AccessibilityNodeInfo#ROOT_NODE_ID}
    to start from the root.
@param action The action to perform.
@param arguments Optional action arguments.
@return Whether the action was performed."
      end

      operation 1071106 "computeClickPointInScreen"
	public explicit_return_type "Point"
	nparams 3
	  param in name "connectionId" explicit_type "int"
	  param in name "accessibilityWindowId" explicit_type "int"
	  param in name "accessibilityNodeId" explicit_type "long"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Computes a point in screen coordinates where sending a down/up events would
perform a click on an {@link AccessibilityNodeInfo}.

@param connectionId The id of a connection for interacting with the system.
@param accessibilityWindowId A unique window id. Use
    {@link android.view.accessibility.AccessibilityNodeInfo#ACTIVE_WINDOW_ID}
    to query the currently active window.
@param accessibilityNodeId A unique view id or virtual descendant id from
    where to start the search. Use
    {@link android.view.accessibility.AccessibilityNodeInfo#ROOT_NODE_ID}
    to start from the root.
@return Point the click point of null if no such point."
      end

      operation 1071234 "clearCache"
	public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1071362 "onAccessibilityEvent"
	public explicit_return_type "void"
	nparams 1
	  param inout name "event" type class_ref 217346 // AccessibilityEvent
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1071490 "getFindAccessibilityNodeInfoResultAndClear"
	private return_type class_ref 208514 // AccessibilityNodeInfo
	nparams 1
	  param in name "interactionId" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the the result of an async request that returns an {@link AccessibilityNodeInfo}.

@param interactionId The interaction id to match the result with the request.
@return The result {@link AccessibilityNodeInfo}."
      end

      operation 1071618 "setFindAccessibilityNodeInfoResult"
	public explicit_return_type "void"
	nparams 2
	  param inout name "info" type class_ref 208514 // AccessibilityNodeInfo
	  param in name "interactionId" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "{@inheritDoc}"
      end

      operation 1071746 "getFindAccessibilityNodeInfosResultAndClear"
	private return_type class_ref 208514 // AccessibilityNodeInfo
	nparams 1
	  param in name "interactionId" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}List<${type}> ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the the result of an async request that returns {@link AccessibilityNodeInfo}s.

@param interactionId The interaction id to match the result with the request.
@return The result {@link AccessibilityNodeInfo}s."
      end

      operation 1071874 "setFindAccessibilityNodeInfosResult"
	public explicit_return_type "void"
	nparams 2
	  param inout name "infos" explicit_type "List<AccessibilityNodeInfo>"
	  param in name "interactionId" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "{@inheritDoc}"
      end

      operation 1072002 "getPerformAccessibilityActionResultAndClear"
	private explicit_return_type "boolean"
	nparams 1
	  param in name "interactionId" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the result of a request to perform an accessibility action.

@param interactionId The interaction id to match the result with the request.
@return Whether the action was performed."
      end

      operation 1072130 "setPerformAccessibilityActionResult"
	public explicit_return_type "void"
	nparams 2
	  param inout name "succeeded" explicit_type "boolean"
	  param in name "interactionId" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "{@inheritDoc}"
      end

      operation 1072258 "getComputeClickPointInScreenResultAndClear"
	private explicit_return_type "Point"
	nparams 1
	  param in name "interactionId" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the result of a request to compute a point in screen for clicking on a node.

@param interactionId The interaction id to match the result with the request.
@return The point or null if no such point."
      end

      operation 1072386 "setComputeClickPointInScreenActionResult"
	public explicit_return_type "void"
	nparams 2
	  param inout name "point" explicit_type "Point"
	  param in name "interactionId" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "{@inheritDoc}"
      end

      operation 1072514 "clearResultLocked"
	private explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Clears the result state."
      end

      operation 1072642 "waitForResultTimedLocked"
	private explicit_return_type "boolean"
	nparams 1
	  param in name "interactionId" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Waits up to a given bound for a result of a request and returns it.

@param interactionId The interaction id to match the result with the request.
@return Whether the result was received."
      end

      operation 1072770 "finalizeAndCacheAccessibilityNodeInfo"
	private explicit_return_type "void"
	nparams 2
	  param inout name "info" type class_ref 208514 // AccessibilityNodeInfo
	  param in name "connectionId" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Finalize an {@link AccessibilityNodeInfo} before passing it to the client.

@param info The info.
@param connectionId The id of the connection to the system."
      end

      operation 1072898 "finalizeAndCacheAccessibilityNodeInfos"
	private explicit_return_type "void"
	nparams 2
	  param inout name "infos" explicit_type "List<AccessibilityNodeInfo>"
	  param in name "connectionId" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Finalize {@link AccessibilityNodeInfo}s before passing them to the client.

@param infos The {@link AccessibilityNodeInfo}s.
@param connectionId The id of the connection to the system."
      end

      operation 1073026 "getSameProcessMessageAndClear"
	private explicit_return_type "Message"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the message stored if the interacted and interacting
threads are the same.

@return The message."
      end

      operation 1073154 "getConnection"
	public explicit_return_type "IAccessibilityServiceConnection"
	nparams 1
	  param in name "connectionId" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets a cached accessibility service connection.

@param connectionId The connection id.
@return The cached connection if such."
      end

      operation 1073282 "addConnection"
	public explicit_return_type "void"
	nparams 2
	  param in name "connectionId" explicit_type "int"
	  param inout name "connection" explicit_type "IAccessibilityServiceConnection"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Adds a cached accessibility service connection.

@param connectionId The connection id.
@param connection The connection."
      end

      operation 1073410 "removeConnection"
	public explicit_return_type "void"
	nparams 1
	  param in name "connectionId" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Removes a cached accessibility service connection.

@param connectionId The connection id."
      end

      operation 1073538 "checkFindAccessibilityNodeInfoResultIntegrity"
	private explicit_return_type "void"
	nparams 1
	  param inout name "infos" explicit_type "List<AccessibilityNodeInfo>"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Checks whether the infos are a fully connected tree with no duplicates.

@param infos The result list to check."
      end
    end

    class 248706 "CaptioningManager"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Contains methods for accessing and monitoring preferred video captioning state and visual
properties.
<p>
To obtain a handle to the captioning manager, do the following:
<p>
<code>
<pre>CaptioningManager captioningManager =
       (CaptioningManager) context.getSystemService(Context.CAPTIONING_SERVICE);</pre>
</code>"
      attribute 762754 "DEFAULT_ENABLED"
	class_attribute const_attribute private explicit_type "int"
	init_value " 0"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Default captioning enabled value. "
      end

      attribute 762882 "DEFAULT_PRESET"
	class_attribute const_attribute private explicit_type "int"
	init_value " 0"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Default style preset as an index into {@link CaptionStyle#PRESETS}. "
      end

      attribute 763010 "DEFAULT_FONT_SCALE"
	class_attribute const_attribute private explicit_type "float"
	init_value " 1"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Default scaling value for caption fonts. "
      end

      class 248834 "CaptioningChangeListener"
	abstract visibility public 
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	operation 1104258 "onEnabledChanged"
	  public explicit_return_type "void"
	  nparams 1
	    param inout name "enabled" explicit_type "boolean"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Called when the captioning enabled state changes.

@param enabled the user's new preferred captioning enabled state"
	end

	operation 1104386 "onUserStyleChanged"
	  public explicit_return_type "void"
	  nparams 1
	    param inout name "userStyle" type class_ref 248962 // CaptionStyle
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}@NonNull ${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Called when the captioning user style changes.

@param userStyle the user's new preferred style
@see CaptioningManager#getUserStyle()"
	end

	operation 1104514 "onLocaleChanged"
	  public explicit_return_type "void"
	  nparams 1
	    param inout name "locale" explicit_type "Locale"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}@Nullable ${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Called when the captioning locale changes.

@param locale the preferred captioning locale, or {@code null} if not specified
@see CaptioningManager#getLocale()"
	end

	operation 1104642 "onFontScaleChanged"
	  public explicit_return_type "void"
	  nparams 1
	    param in name "fontScale" explicit_type "float"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Called when the captioning font scaling factor changes.

@param fontScale the preferred font scaling factor
@see CaptioningManager#getFontScale()"
	end
      end

      classrelation 280962 // mListeners (<unidirectional association>)
	relation 280066 --->
	  stereotype "ArrayList"
	  a role_name "mListeners" init_value " new ArrayList<CaptioningChangeListener>()" const_relation private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${stereotype}<${type}> ${name}${value};
"
	    classrelation_ref 280962 // mListeners (<unidirectional association>)
	  b parent class_ref 248834 // CaptioningChangeListener
      end

      attribute 763138 "mHandler"
	const_attribute private explicit_type "Handler"
	init_value " new Handler()"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 763266 "mContentResolver"
	const_attribute private explicit_type "ContentResolver"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      operation 1101314 "CaptioningManager"
	public explicit_return_type ""
	nparams 1
	  param inout name "context" explicit_type "Context"
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new captioning manager for the specified context.

@hide"
      end

      operation 1101442 "isEnabled"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@return the user's preferred captioning enabled state"
      end

      operation 1101570 "getRawLocale"
	public explicit_return_type "String"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Nullable
"
	
	
	
	comment "@return the raw locale string for the user's preferred captioning
        language
@hide"
      end

      operation 1101698 "getLocale"
	public explicit_return_type "Locale"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Nullable
"
	
	
	
	comment "@return the locale for the user's preferred captioning language, or null
        if not specified"
      end

      operation 1101826 "getFontScale"
	public explicit_return_type "float"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@return the user's preferred font scaling factor for video captions, or 1 if not
        specified"
      end

      operation 1101954 "getRawUserStyle"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@return the raw preset number, or the first preset if not specified
@hide"
      end

      class 248962 "CaptionStyle"
	visibility public 
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	final java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	attribute 763650 "COLOR_NONE_OPAQUE"
	  class_attribute const_attribute private explicit_type "int"
	  init_value " 0x000000FF"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  comment " Packed value for a color of 'none' and a cached opacity of 100%. "
	end

	attribute 763778 "COLOR_UNSPECIFIED"
	  class_attribute const_attribute private explicit_type "int"
	  init_value " 0x000001FF"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  comment " Packed value for an unspecified color and opacity. "
	end

	classrelation 281090 // WHITE_ON_BLACK (<unidirectional association>)
	  relation 280194 --->
	    a role_name "WHITE_ON_BLACK" class_relation const_relation private
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 281090 // WHITE_ON_BLACK (<unidirectional association>)
	    b parent class_ref 248962 // CaptionStyle
	end

	classrelation 281218 // BLACK_ON_WHITE (<unidirectional association>)
	  relation 280322 --->
	    a role_name "BLACK_ON_WHITE" class_relation const_relation private
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 281218 // BLACK_ON_WHITE (<unidirectional association>)
	    b parent class_ref 248962 // CaptionStyle
	end

	classrelation 281346 // YELLOW_ON_BLACK (<unidirectional association>)
	  relation 280450 --->
	    a role_name "YELLOW_ON_BLACK" class_relation const_relation private
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 281346 // YELLOW_ON_BLACK (<unidirectional association>)
	    b parent class_ref 248962 // CaptionStyle
	end

	classrelation 281474 // YELLOW_ON_BLUE (<unidirectional association>)
	  relation 280578 --->
	    a role_name "YELLOW_ON_BLUE" class_relation const_relation private
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 281474 // YELLOW_ON_BLUE (<unidirectional association>)
	    b parent class_ref 248962 // CaptionStyle
	end

	classrelation 281602 // DEFAULT_CUSTOM (<unidirectional association>)
	  relation 280706 --->
	    a role_name "DEFAULT_CUSTOM" class_relation const_relation private
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 281602 // DEFAULT_CUSTOM (<unidirectional association>)
	    b parent class_ref 248962 // CaptionStyle
	end

	classrelation 281730 // UNSPECIFIED (<unidirectional association>)
	  relation 280834 --->
	    a role_name "UNSPECIFIED" class_relation const_relation private
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 281730 // UNSPECIFIED (<unidirectional association>)
	    b parent class_ref 248962 // CaptionStyle
	end

	classrelation 281858 // DEFAULT (<unidirectional association>)
	  relation 280962 --->
	    a role_name "DEFAULT" class_relation const_relation public
	      comment " The default caption style used to fill in unspecified values. @hide 
"
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 281858 // DEFAULT (<unidirectional association>)
	    b parent class_ref 248962 // CaptionStyle
	end

	classrelation 281986 // PRESETS (<unidirectional association>)
	  relation 281090 --->
	    a role_name "PRESETS" multiplicity "[]" class_relation const_relation public
	      comment " @hide 
"
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	      classrelation_ref 281986 // PRESETS (<unidirectional association>)
	    b parent class_ref 248962 // CaptionStyle
	end

	attribute 763906 "PRESET_CUSTOM"
	  class_attribute const_attribute public explicit_type "int"
	  init_value " -1"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  comment " @hide "
	end

	attribute 764034 "EDGE_TYPE_UNSPECIFIED"
	  class_attribute const_attribute public explicit_type "int"
	  init_value " -1"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  comment " Unspecified edge type value. "
	end

	attribute 764162 "EDGE_TYPE_NONE"
	  class_attribute const_attribute public explicit_type "int"
	  init_value " 0"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  comment " Edge type value specifying no character edges. "
	end

	attribute 764290 "EDGE_TYPE_OUTLINE"
	  class_attribute const_attribute public explicit_type "int"
	  init_value " 1"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  comment " Edge type value specifying uniformly outlined character edges. "
	end

	attribute 764418 "EDGE_TYPE_DROP_SHADOW"
	  class_attribute const_attribute public explicit_type "int"
	  init_value " 2"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  comment " Edge type value specifying drop-shadowed character edges. "
	end

	attribute 764546 "EDGE_TYPE_RAISED"
	  class_attribute const_attribute public explicit_type "int"
	  init_value " 3"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  comment " Edge type value specifying raised bevel character edges. "
	end

	attribute 764674 "EDGE_TYPE_DEPRESSED"
	  class_attribute const_attribute public explicit_type "int"
	  init_value " 4"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  comment " Edge type value specifying depressed bevel character edges. "
	end

	attribute 764802 "foregroundColor"
	  const_attribute public explicit_type "int"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  comment " The preferred foreground color for video captions. "
	end

	attribute 764930 "backgroundColor"
	  const_attribute public explicit_type "int"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  comment " The preferred background color for video captions. "
	end

	attribute 765058 "edgeType"
	  const_attribute public explicit_type "int"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  comment "The preferred edge type for video captions, one of:
<ul>
<li>{@link #EDGE_TYPE_UNSPECIFIED}
<li>{@link #EDGE_TYPE_NONE}
<li>{@link #EDGE_TYPE_OUTLINE}
<li>{@link #EDGE_TYPE_DROP_SHADOW}
<li>{@link #EDGE_TYPE_RAISED}
<li>{@link #EDGE_TYPE_DEPRESSED}
</ul>
"
	end

	attribute 765186 "edgeColor"
	  const_attribute public explicit_type "int"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  comment "The preferred edge color for video captions, if using an edge type
other than {@link #EDGE_TYPE_NONE}.
"
	end

	attribute 765314 "windowColor"
	  const_attribute public explicit_type "int"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  comment " The preferred window color for video captions. "
	end

	attribute 765442 "mRawTypeface"
	  const_attribute public explicit_type "String"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  comment "@hide
"
	end

	attribute 765570 "mHasForegroundColor"
	  const_attribute private explicit_type "boolean"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 765698 "mHasBackgroundColor"
	  const_attribute private explicit_type "boolean"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 765826 "mHasEdgeType"
	  const_attribute private explicit_type "boolean"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 765954 "mHasEdgeColor"
	  const_attribute private explicit_type "boolean"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 766082 "mHasWindowColor"
	  const_attribute private explicit_type "boolean"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 766210 "mParsedTypeface"
	  private explicit_type "Typeface"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  comment " Lazily-created typeface based on the raw typeface string. "
	end

	operation 1103106 "CaptionStyle"
	  private explicit_return_type ""
	  nparams 6
	    param in name "foregroundColor" explicit_type "int"
	    param in name "backgroundColor" explicit_type "int"
	    param in name "edgeType" explicit_type "int"
	    param in name "edgeColor" explicit_type "int"
	    param in name "windowColor" explicit_type "int"
	    param in name "rawTypeface" explicit_type "String"
	  cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	  cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 1103234 "applyStyle"
	  public return_type class_ref 248962 // CaptionStyle
	  nparams 1
	    param inout name "overlay" type class_ref 248962 // CaptionStyle
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}@NonNull ${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@NonNull
"
	  
	  
	  
	  comment "Applies a caption style, overriding any properties that are specified
in the overlay caption.

@param overlay The style to apply
@return A caption style with the overlay style applied
@hide"
	end

	operation 1103362 "hasBackgroundColor"
	  public explicit_return_type "boolean"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "@return {@code true} if the user has specified a background color
        that should override the application default, {@code false}
        otherwise"
	end

	operation 1103490 "hasForegroundColor"
	  public explicit_return_type "boolean"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "@return {@code true} if the user has specified a foreground color
        that should override the application default, {@code false}
        otherwise"
	end

	operation 1103618 "hasEdgeType"
	  public explicit_return_type "boolean"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "@return {@code true} if the user has specified an edge type that
        should override the application default, {@code false}
        otherwise"
	end

	operation 1103746 "hasEdgeColor"
	  public explicit_return_type "boolean"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "@return {@code true} if the user has specified an edge color that
        should override the application default, {@code false}
        otherwise"
	end

	operation 1103874 "hasWindowColor"
	  public explicit_return_type "boolean"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "@return {@code true} if the user has specified a window color that
        should override the application default, {@code false}
        otherwise"
	end

	operation 1104002 "getTypeface"
	  public explicit_return_type "Typeface"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Nullable
"
	  
	  
	  
	  comment "@return the preferred {@link Typeface} for video captions, or null if
        not specified"
	end

	operation 1104130 "getCustomStyle"
	  class_operation public return_type class_ref 248962 // CaptionStyle
	  nparams 1
	    param inout name "cr" explicit_type "ContentResolver"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@NonNull
"
	  
	  
	  
	  comment "@hide"
	end

	extra_member 136322 "initialization"
	  
	  cpp "" ""
	  java "  static {
            WHITE_ON_BLACK = new CaptionStyle(Color.WHITE, Color.BLACK, EDGE_TYPE_NONE,
                    Color.BLACK, COLOR_NONE_OPAQUE, null);
            BLACK_ON_WHITE = new CaptionStyle(Color.BLACK, Color.WHITE, EDGE_TYPE_NONE,
                    Color.BLACK, COLOR_NONE_OPAQUE, null);
            YELLOW_ON_BLACK = new CaptionStyle(Color.YELLOW, Color.BLACK, EDGE_TYPE_NONE,
                    Color.BLACK, COLOR_NONE_OPAQUE, null);
            YELLOW_ON_BLUE = new CaptionStyle(Color.YELLOW, Color.BLUE, EDGE_TYPE_NONE,
                    Color.BLACK, COLOR_NONE_OPAQUE, null);
            UNSPECIFIED = new CaptionStyle(COLOR_UNSPECIFIED, COLOR_UNSPECIFIED,
                    EDGE_TYPE_UNSPECIFIED, COLOR_UNSPECIFIED, COLOR_UNSPECIFIED, null);

            // The ordering of these cannot change since we store the index
            // directly in preferences.
            PRESETS = new CaptionStyle[] {
                    WHITE_ON_BLACK, BLACK_ON_WHITE, YELLOW_ON_BLACK, YELLOW_ON_BLUE, UNSPECIFIED
            };

            DEFAULT_CUSTOM = WHITE_ON_BLACK;
            DEFAULT = WHITE_ON_BLACK;
        }"
	  php ""
	  python ""
	  idl ""
	end
      end

      operation 1102082 "getUserStyle"
	public return_type class_ref 248962 // CaptionStyle
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@NonNull
"
	
	
	
	comment "@return the user's preferred visual properties for captions as a
        {@link CaptionStyle}, or the default style if not specified"
      end

      operation 1102210 "addCaptioningChangeListener"
	public explicit_return_type "void"
	nparams 1
	  param inout name "listener" type class_ref 248834 // CaptioningChangeListener
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}@NonNull ${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Adds a listener for changes in the user's preferred captioning enabled
state and visual properties.

@param listener the listener to add"
      end

      operation 1102338 "registerObserver"
	private explicit_return_type "void"
	nparams 1
	  param in name "key" explicit_type "String"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1102466 "removeCaptioningChangeListener"
	public explicit_return_type "void"
	nparams 1
	  param inout name "listener" type class_ref 248834 // CaptioningChangeListener
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}@NonNull ${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Removes a listener previously added using
{@link #addCaptioningChangeListener}.

@param listener the listener to remove"
      end

      operation 1102594 "notifyEnabledChanged"
	private explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1102722 "notifyUserStyleChanged"
	private explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1102850 "notifyLocaleChanged"
	private explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1102978 "notifyFontScaleChanged"
	private explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      attribute 763394 "mContentObserver"
	const_attribute private explicit_type "ContentObserver"
	init_value " new ContentObserver(mHandler) {
        @Override
        public void onChange(boolean selfChange, Uri uri) {
            final String uriPath = uri.getPath();
            final String name = uriPath.substring(uriPath.lastIndexOf('/') + 1);
            if (Secure.ACCESSIBILITY_CAPTIONING_ENABLED.equals(name)) {
                notifyEnabledChanged();
            } else if (Secure.ACCESSIBILITY_CAPTIONING_LOCALE.equals(name)) {
                notifyLocaleChanged();
            } else if (Secure.ACCESSIBILITY_CAPTIONING_FONT_SCALE.equals(name)) {
                notifyFontScaleChanged();
            } else {
                // We only need a single callback when multiple style properties
                // change in rapid succession.
                mHandler.removeCallbacks(mStyleChangedRunnable);
                mHandler.post(mStyleChangedRunnable);
            }
        }
    }"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 763522 "mStyleChangedRunnable"
	const_attribute private explicit_type "Runnable"
	init_value " new Runnable() {
        @Override
        public void run() {
            notifyUserStyleChanged();
        }
    }"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Runnable posted when user style properties change. This is used to
prevent unnecessary change notifications when multiple properties change
in rapid succession.
"
      end
    end
  end

  deploymentview 142722 "accessibility"
    //deployment diagram settings
    package_name_in_tab default show_context default write_horizontally default auto_label_position default draw_all_relations default shadow default
    draw_component_as_icon default show_component_req_prov default show_component_rea default show_stereotype_properties default
    artifact 160514 "AccessibilityEventSource"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 217218 // AccessibilityEventSource
      end
      comment "Copyright (C) 2009 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 167554 "AccessibilityManager"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.Manifest;
import android.accessibilityservice.AccessibilityServiceInfo;
import android.annotation.NonNull;
import android.content.Context;
import android.content.pm.PackageManager;
import android.content.pm.ServiceInfo;
import android.os.Binder;
import android.os.Handler;
import android.os.IBinder;
import android.os.Looper;
import android.os.Message;
import android.os.Process;
import android.os.RemoteException;
import android.os.ServiceManager;
import android.os.SystemClock;
import android.os.UserHandle;
import android.util.Log;
import android.view.IWindow;
import android.view.View;
import java.util.ArrayList;
import java.util.Collections;
import java.util.List;
import java.util.concurrent.CopyOnWriteArrayList;
${definition}"
      associated_classes
	class_ref 237442 // AccessibilityManager
      end
      comment "Copyright (C) 2009 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 169602 "AccessibilityCache"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.os.Build;
import android.util.ArraySet;
import android.util.Log;
import android.util.LongArray;
import android.util.LongSparseArray;
import android.util.SparseArray;
import java.util.ArrayList;
import java.util.List;
${definition}"
      associated_classes
	class_ref 247554 // AccessibilityCache
      end
      comment "Copyright (C) 2012 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 169730 "AccessibilityRecord"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.os.Parcelable;
import android.view.View;
import java.util.ArrayList;
import java.util.List;
${definition}"
      associated_classes
	class_ref 247810 // AccessibilityRecord
      end
      comment "Copyright (C) 2011 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 169858 "AccessibilityEvent"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.os.Parcel;
import android.os.Parcelable;
import android.text.TextUtils;
import android.util.Pools.SynchronizedPool;
import java.util.ArrayList;
import java.util.List;
${definition}"
      associated_classes
	class_ref 217346 // AccessibilityEvent
      end
      comment "Copyright (C) 2009 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 169986 "AccessibilityInteractionClient"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.accessibilityservice.IAccessibilityServiceConnection;
import android.graphics.Point;
import android.os.Binder;
import android.os.Build;
import android.os.Bundle;
import android.os.Message;
import android.os.Process;
import android.os.RemoteException;
import android.os.SystemClock;
import android.util.Log;
import android.util.LongSparseArray;
import android.util.SparseArray;
import java.util.ArrayList;
import java.util.Collections;
import java.util.HashSet;
import java.util.LinkedList;
import java.util.List;
import java.util.Queue;
import java.util.concurrent.atomic.AtomicInteger;
${definition}"
      associated_classes
	class_ref 247938 // AccessibilityInteractionClient
      end
      comment "* Copyright 2011, The Android Open Source Project
*
* Licensed under the Apache License, Version 2.0 (the \"License\");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*     http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an \"AS IS\" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License."
    end

    artifact 170114 "AccessibilityNodeInfo"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.accessibilityservice.AccessibilityServiceInfo;
import android.annotation.Nullable;
import android.graphics.Rect;
import android.os.Bundle;
import android.os.Parcel;
import android.os.Parcelable;
import android.text.InputType;
import android.text.TextUtils;
import android.util.ArraySet;
import android.util.LongArray;
import android.util.Pools.SynchronizedPool;
import android.view.View;
import java.util.ArrayList;
import java.util.Collections;
import java.util.List;
${definition}"
      associated_classes
	class_ref 208514 // AccessibilityNodeInfo
      end
      comment "Copyright (C) 2011 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 170242 "AccessibilityNodeProvider"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.accessibilityservice.AccessibilityService;
import android.os.Bundle;
import android.view.View;
import java.util.List;
${definition}"
      associated_classes
	class_ref 209282 // AccessibilityNodeProvider
      end
      comment "Copyright (C) 2011 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 170370 "AccessibilityWindowInfo"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.graphics.Rect;
import android.os.Parcel;
import android.os.Parcelable;
import android.util.LongArray;
import android.util.Pools.SynchronizedPool;
${definition}"
      associated_classes
	class_ref 247682 // AccessibilityWindowInfo
      end
      comment "Copyright (C) 2014 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 170498 "CaptioningManager"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.annotation.NonNull;
import android.annotation.Nullable;
import android.content.ContentResolver;
import android.content.Context;
import android.database.ContentObserver;
import android.graphics.Color;
import android.graphics.Typeface;
import android.net.Uri;
import android.os.Handler;
import android.provider.Settings.Secure;
import android.text.TextUtils;
import java.util.ArrayList;
import java.util.Locale;
${definition}"
      associated_classes
	class_ref 248706 // CaptioningManager
      end
      comment "Copyright (C) 2013 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end
  end
end
