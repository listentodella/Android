class ReceiverDispatcher
!!!1654530.java!!!	ReceiverDispatcher(inout receiver : BroadcastReceiver, inout context : Context, inout activityThread : Handler, inout instrumentation : Instrumentation, inout registered : boolean)
            if (activityThread == null) {
                throw new NullPointerException("Handler must not be null");
            }

            mIIntentReceiver = new InnerReceiver(this, !registered);
            mReceiver = receiver;
            mContext = context;
            mActivityThread = activityThread;
            mInstrumentation = instrumentation;
            mRegistered = registered;
            mLocation = new IntentReceiverLeaked(null);
            mLocation.fillInStackTrace();
!!!1654658.java!!!	validate(inout context : Context, inout activityThread : Handler) : void
            if (mContext != context) {
                throw new IllegalStateException(
                    "Receiver " + mReceiver +
                    " registered with differing Context (was " +
                    mContext + " now " + context + ")");
            }
            if (mActivityThread != activityThread) {
                throw new IllegalStateException(
                    "Receiver " + mReceiver +
                    " registered with differing handler (was " +
                    mActivityThread + " now " + activityThread + ")");
            }
!!!1654786.java!!!	getLocation() : IntentReceiverLeaked
            return mLocation;
!!!1654914.java!!!	getIntentReceiver() : BroadcastReceiver
            return mReceiver;
!!!1655042.java!!!	getIIntentReceiver() : IIntentReceiver
            return mIIntentReceiver;
!!!1655170.java!!!	setUnregisterLocation(inout ex : RuntimeException) : void
            mUnregisterLocation = ex;
!!!1655298.java!!!	getUnregisterLocation() : RuntimeException
            return mUnregisterLocation;
!!!1655426.java!!!	performReceive(inout intent : Intent, in resultCode : int, in data : String, inout extras : Bundle, inout ordered : boolean, inout sticky : boolean, in sendingUser : int) : void
            if (ActivityThread.DEBUG_BROADCAST) {
                int seq = intent.getIntExtra("seq", -1);
                Slog.i(ActivityThread.TAG, "Enqueueing broadcast " + intent.getAction() + " seq=" + seq
                        + " to " + mReceiver);
            }
            Args args = new Args(intent, resultCode, data, extras, ordered,
                    sticky, sendingUser);
            if (!mActivityThread.post(args)) {
                if (mRegistered && ordered) {
                    IActivityManager mgr = ActivityManagerNative.getDefault();
                    if (ActivityThread.DEBUG_BROADCAST) Slog.i(ActivityThread.TAG,
                            "Finishing sync broadcast to " + mReceiver);
                    args.sendFinished(mgr);
                }
            }
