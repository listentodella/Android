format 76
"android" // ui::android
  revision 1
  modified_by 2 "thisway_diy"
  // class settings
  //class diagram settings
  draw_all_relations default hide_attributes default hide_operations default hide_getset_operations default show_members_full_definition default show_members_visibility default show_members_stereotype default show_members_context default show_members_multiplicity default show_members_initialization default show_attribute_modifiers default member_max_width 0 show_parameter_dir default show_parameter_name default package_name_in_tab default class_drawing_mode default drawing_language default show_context_mode default auto_label_position default show_relation_modifiers default show_relation_visibility default show_infonote default shadow default show_stereotype_properties default
  //use case diagram settings
  package_name_in_tab default show_context default auto_label_position default draw_all_relations default class_drawing_mode default shadow default show_stereotype_properties default
  //sequence diagram settings
  show_full_operations_definition default write_horizontally default class_drawing_mode default drawing_language default draw_all_relations default shadow default show_stereotype_properties default show_class_context_mode default show_msg_context_mode default
  //collaboration diagram settings
  show_full_operations_definition default show_hierarchical_rank default write_horizontally default class_drawing_mode default drawing_language default package_name_in_tab default show_context default show_msg_context default draw_all_relations default shadow default show_stereotype_properties default
  //object diagram settings
   write_horizontally default package_name_in_tab default show_context default auto_label_position default draw_all_relations default shadow default show_stereotype_properties default
  //component diagram settings
  package_name_in_tab default show_context default auto_label_position default draw_all_relations default shadow default
  draw_component_as_icon default show_component_req_prov default show_component_rea default show_stereotype_properties default
  //deployment diagram settings
  package_name_in_tab default show_context default write_horizontally default auto_label_position default draw_all_relations default shadow default
  draw_component_as_icon default show_component_req_prov default show_component_rea default show_stereotype_properties default
  //state diagram settings
  package_name_in_tab default show_context default auto_label_position default write_trans_label_horizontally default show_trans_definition default draw_all_relations default shadow default
  show_activities default region_horizontally default drawing_language default show_stereotype_properties default
  //activity diagram settings
  package_name_in_tab default show_context default show_opaque_action_definition default auto_label_position default write_flow_label_horizontally default draw_all_relations default shadow default
  show_infonote default drawing_language default show_stereotype_properties default
  
  cpp_h_dir "L:/android_projects/uml_tmp_file/include/ui/"
  cpp_src_dir "L:/android_projects/uml_tmp_file/include/ui/"
  cpp_namespace "android"
  classview 148994 "ui"
    //class diagram settings
    draw_all_relations default hide_attributes default hide_operations default hide_getset_operations default show_members_full_definition default show_members_visibility default show_members_stereotype default show_members_context default show_members_multiplicity default show_members_initialization default show_attribute_modifiers default member_max_width 0 show_parameter_dir default show_parameter_name default package_name_in_tab default class_drawing_mode default drawing_language default show_context_mode default auto_label_position default show_relation_modifiers default show_relation_visibility default show_infonote default shadow default show_stereotype_properties default
    //collaboration diagram settings
    show_full_operations_definition default show_hierarchical_rank default write_horizontally default class_drawing_mode default drawing_language default package_name_in_tab default show_context default show_msg_context default draw_all_relations default shadow default show_stereotype_properties default
    //object diagram settings
     write_horizontally default package_name_in_tab default show_context default auto_label_position default draw_all_relations default shadow default show_stereotype_properties default
    //sequence diagram settings
    show_full_operations_definition default write_horizontally default class_drawing_mode default drawing_language default draw_all_relations default shadow default show_stereotype_properties default show_class_context_mode default show_msg_context_mode default
    //state diagram settings
    package_name_in_tab default show_context default auto_label_position default write_trans_label_horizontally default show_trans_definition default draw_all_relations default shadow default
    show_activities default region_horizontally default drawing_language default show_stereotype_properties default
    //class settings
    //activity diagram settings
    package_name_in_tab default show_context default show_opaque_action_definition default auto_label_position default write_flow_label_horizontally default draw_all_relations default shadow default
    show_infonote default drawing_language default show_stereotype_properties default
    class 199426 "ANativeObjectBase"
      visibility package 
      nformals 3
      formal name "NATIVE_TYPE" type "typename" explicit_default_value ""
        explicit_extends ""
      formal name "TYPE" type "typename" explicit_default_value ""
        explicit_extends ""
      formal name "REF" type "typename" explicit_default_value ""
        explicit_extends ""
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl ""
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment " * This helper class turns a ANativeXXX object type into a C++
 * reference-counted object; with proper type conversions."
      classrelation 182914 // <generalisation>
	relation 182914 ---|>
	  a public
	    cpp default "${type}"
	    classrelation_ref 182914 // <generalisation>
	  b parent class_ref 199554 // typedef1
      end

      classrelation 183042 // <generalisation>
	relation 183042 ---|>
	  a public
	    cpp default "${type}"
	    classrelation_ref 183042 // <generalisation>
	  b parent class_ref 199682 // typedef2
      end

      operation 326658 "incStrong"
	const cpp_inline public explicit_return_type "void"
	nparams 1
	  param in name "id" explicit_type "void"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} * ${p0}${v0}${)}${const}${volatile}${throw}${abstract} {
        REF::incStrong(id);
    };
"
	
	
	
	
	comment " Disambiguate between the incStrong in REF and NATIVE_TYPE"
      end

      operation 326786 "decStrong"
	const cpp_inline public explicit_return_type "void"
	nparams 1
	  param in name "id" explicit_type "void"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} * ${p0}${v0}${)}${const}${volatile}${throw}${abstract} {
        REF::decStrong(id);
    };
"
	
	
	
	
      end

      class 199810 "BASE"
	visibility package stereotype "typedef" explicit_base_type "ANativeObjectBase<NATIVE_TYPE, TYPE, REF>"
	cpp_decl "${comment}typedef ${type} ${name};
"
	java_decl ""
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
      end

      operation 326914 "ANativeObjectBase"
	cpp_inline protected explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw} : NATIVE_TYPE(), REF() {
        NATIVE_TYPE::common.incRef = incRef;
        NATIVE_TYPE::common.decRef = decRef;
    };
"
	
	
	
	
      end

      operation 327042 "getSelf"
	class_operation cpp_inline protected explicit_return_type "TYPE"
	nparams 1
	  param inout name "self" explicit_type "NATIVE_TYPE"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} * ${name}${(}${t0} * ${p0}${v0}${)}${const}${volatile}${throw}${abstract} {
        return static_cast<TYPE*>(self);
    };
"
	
	
	
	
      end

      operation 327170 "getSelf"
	class_operation cpp_inline protected explicit_return_type "TYPE"
	nparams 1
	  param in name "self" explicit_type "NATIVE_TYPE"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}const ${type} * ${name}${(}const ${t0} * ${p0}${v0}${)}${const}${volatile}${throw}${abstract} {
        return static_cast<TYPE const *>(self);
    };
"
	
	
	
	
      end

      operation 327298 "getSelf"
	class_operation cpp_inline protected explicit_return_type "TYPE"
	nparams 1
	  param inout name "base" explicit_type "android_native_base_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} * ${name}${(}${t0} * ${p0}${v0}${)}${const}${volatile}${throw}${abstract} {
        return getSelf(reinterpret_cast<NATIVE_TYPE*>(base));
    };
"
	
	
	
	
      end

      operation 327426 "getSelf"
	class_operation cpp_inline protected explicit_return_type "TYPE"
	nparams 1
	  param in name "base" explicit_type "android_native_base_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}const ${type} * ${name}${(}const ${t0} * ${p0}${v0}${)}${const}${volatile}${throw}${abstract} {
        return getSelf(reinterpret_cast<NATIVE_TYPE const*>(base));
    };
"
	
	
	
	
      end

      operation 327554 "incRef"
	class_operation cpp_inline protected explicit_return_type "void"
	nparams 1
	  param inout name "base" explicit_type "android_native_base_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}${)}${const}${volatile}${throw}${abstract} {
        ANativeObjectBase* self = getSelf(base);
        self->incStrong(self);
    };
"
	
	
	
	
      end

      operation 327682 "decRef"
	class_operation cpp_inline protected explicit_return_type "void"
	nparams 1
	  param inout name "base" explicit_type "android_native_base_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}${)}${const}${volatile}${throw}${abstract} {
        ANativeObjectBase* self = getSelf(base);
        self->decStrong(self);
    };
"
	
	
	
	
      end
    end

    class 199554 "typedef1"
      visibility package stereotype "typedef" explicit_base_type "NATIVE_TYPE"
      cpp_decl "${comment}typedef ${type} ${name};
"
      java_decl ""
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
    end

    class 199682 "typedef2"
      visibility package stereotype "typedef" explicit_base_type "REF"
      cpp_decl "${comment}typedef ${type} ${name};
"
      java_decl ""
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
    end

    class 199938 "DisplayInfo"
      visibility package stereotype "struct"
      cpp_decl "${comment}${template}struct ${name}${inherit} {
${members}};
${inlines}
"
      java_decl ""
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      attribute 258690 "w"
	public explicit_type "uint32_t"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 258818 "h"
	public explicit_type "uint32_t"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 258946 "xdpi"
	public explicit_type "float"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 259074 "ydpi"
	public explicit_type "float"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 259202 "fps"
	public explicit_type "float"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 259330 "density"
	public explicit_type "float"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 259458 "orientation"
	public explicit_type "uint8_t"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 259586 "secure"
	public explicit_type "bool"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 259714 "appVsyncOffset"
	public explicit_type "nsecs_t"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 259842 "presentationDeadline"
	public explicit_type "nsecs_t"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end
    end

    class 200194 "DisplayStatInfo"
      visibility package stereotype "struct"
      cpp_decl "${comment}${template}struct ${name}${inherit} {
${members}};
${inlines}
"
      java_decl ""
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      attribute 260482 "vsyncTime"
	public explicit_type "nsecs_t"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 260610 "vsyncPeriod"
	public explicit_type "nsecs_t"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end
    end

    class 200322 "Fence"
      visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl ""
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment " ===========================================================================
 Fence
 ==========================================================================="
      classrelation 183170 // <generalisation>
	relation 183170 ---|>
	  a public
	    cpp default "${type}"
	    classrelation_ref 183170 // <generalisation>
	  b parent class_ref 200450 // typedef3
      end

      classrelation 183298 // <generalisation>
	relation 183298 ---|>
	  a public
	    cpp default "${type}"
	    classrelation_ref 183298 // <generalisation>
	  b parent class_ref 200578 // typedef4
      end

      classrelation 183426 // NO_FENCE (<directional composition>)
	relation 183426 *-->
	  stereotype "sp"
	  a role_name "NO_FENCE" class_relation const_relation public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${stereotype}<${type}> ${name}${value};
"
	    classrelation_ref 183426 // NO_FENCE (<directional composition>)
	  b parent class_ref 200322 // Fence
      end

      class 200706 "anonymous2"
	visibility package stereotype "enum"
	cpp_decl "${comment}enum  {
${items}
};
"
	java_decl ""
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	attribute 260738 "TIMEOUT_NEVER"
	  public type class_ref 200706 // anonymous2
	  init_value " -1 "
	  cpp_decl "  ${name}${value},${comment}"
	  java_decl ""
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end
      end

      operation 327810 "Fence"
	public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${throw}{
  ${body}}
"
	
	
	
	
	comment " Construct a new Fence object with an invalid file descriptor.  This
 should be done when the Fence object will be set up by unflattening
 serialized data."
      end

      operation 327938 "Fence"
	public explicit_return_type ""
	nparams 1
	  param in name "fenceFd" explicit_type "int"
	cpp_decl "    ${comment}${inline}${name}${(}${t0} ${p0}${v0}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${t0} ${p0}${)}${throw}{
  ${body}}
"
	
	
	
	
	comment " Construct a new Fence object to manage a given fence file descriptor.
 When the new Fence object is destructed the file descriptor will be
 closed."
      end

      operation 328066 "isValid"
	const cpp_inline public explicit_return_type "bool"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} { return mFenceFd != -1; };
"
	
	
	
	
	comment " Check whether the Fence has an open fence file descriptor. Most Fence
 methods treat an invalid file descriptor just like a valid fence that
 is already signalled, so using this is usually not necessary."
      end

      operation 328194 "wait"
	public explicit_return_type "status_t"
	nparams 1
	  param in name "timeout" explicit_type "uint"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment " wait waits for up to timeout milliseconds for the fence to signal.  If
 the fence signals then NO_ERROR is returned. If the timeout expires
 before the fence signals then -ETIME is returned.  A timeout of
 TIMEOUT_NEVER may be used to indicate that the call should wait
 indefinitely for the fence to signal."
      end

      operation 328322 "waitForever"
	public explicit_return_type "status_t"
	nparams 1
	  param in name "logname" explicit_type "char"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} * ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} * ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment " waitForever is a convenience function for waiting forever for a fence to
 signal (just like wait(TIMEOUT_NEVER)), but issuing an error to the
 system log and fence state to the kernel log if the wait lasts longer
 than a warning timeout.
 The logname argument should be a string identifying
 the caller and will be included in the log message."
      end

      operation 328450 "merge"
	class_operation public explicit_return_type "sp<Fence>"
	nparams 3
	  param in name "name" explicit_type "String8"
	  param in name "f1" explicit_type "sp<Fence>"
	  param in name "f2" explicit_type "sp<Fence>"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}, const ${t1} & ${p1}${v1}, const ${t2} & ${p2}${v2}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}, const ${t1} & ${p1}, const ${t2} & ${p2}${)}${const}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment " merge combines two Fence objects, creating a new Fence object that
 becomes signaled when both f1 and f2 are signaled (even if f1 or f2 is
 destroyed before it becomes signaled).  The name argument specifies the
 human-readable name to associated with the new Fence object."
      end

      operation 328578 "dup"
	const public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment " Return a duplicate of the fence file descriptor. The caller is
 responsible for closing the returned file descriptor. On error, -1 will
 be returned and errno will indicate the problem."
      end

      operation 328706 "getSignalTime"
	const public explicit_return_type "nsecs_t"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment " getSignalTime returns the system monotonic clock time at which the
 fence transitioned to the signaled state.  If the fence is not signaled
 then INT64_MAX is returned.  If the fence is invalid or if an error
 occurs then -1 is returned."
      end

      operation 328834 "getFlattenedSize"
	const public explicit_return_type "size_t"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment " Flattenable interface"
      end

      operation 328962 "getFdCount"
	const public explicit_return_type "size_t"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 329090 "flatten"
	const public explicit_return_type "status_t"
	nparams 4
	  param inout name "buffer" explicit_type "void"
	  param inout name "size" explicit_type "size_t"
	  param inout name "fds" explicit_type "int"
	  param inout name "count" explicit_type "size_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * & ${p0}${v0}, ${t1} & ${p1}${v1}, ${t2} * & ${p2}${v2}, ${t3} & ${p3}${v3}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} * & ${p0}, ${t1} & ${p1}, ${t2} * & ${p2}, ${t3} & ${p3}${)}${const}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 329218 "unflatten"
	public explicit_return_type "status_t"
	nparams 4
	  param in name "buffer" explicit_type "void"
	  param inout name "size" explicit_type "size_t"
	  param in name "fds" explicit_type "int"
	  param inout name "count" explicit_type "size_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} * & ${p0}${v0}, ${t1} & ${p1}${v1}, const ${t2} * & ${p2}${v2}, ${t3} & ${p3}${v3}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} * & ${p0}, ${t1} & ${p1}, const ${t2} * & ${p2}, ${t3} & ${p3}${)}${const}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      extra_member 149122 "friend"
	
	cpp "
    // Only allow instantiation using ref counting.
    friend class LightRefBase<Fence>;" ""
	java ""
	php ""
	python ""
	idl ""
      end

      operation 329346 "~Fence"
	private explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${virtual}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${throw}{
  ${body}}
"
	
	
	
	
      end

      operation 329474 "Fence"
	private explicit_return_type ""
	nparams 1
	  param in name "rhs" type class_ref 200322 // Fence
	cpp_decl "    ${comment}${inline}${name}${(}const ${t0} & ${p0}${v0}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}const ${t0} & ${p0}${)}${throw}{
  ${body}}
"
	
	
	
	
	comment " Disallow copying"
      end

      operation 329602 "operator ="
	private return_type class_ref 200322 // Fence
	nparams 1
	  param in name "rhs" type class_ref 200322 // Fence
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} & ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} & ${class}::${name}${(}const ${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 329730 "operator ="
	const private return_type class_ref 200322 // Fence
	nparams 1
	  param in name "rhs" type class_ref 200322 // Fence
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}const ${type} & ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}const ${type} & ${class}::${name}${(}const ${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      attribute 260866 "mFenceFd"
	private explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end
    end

    class 200450 "typedef3"
      visibility package stereotype "typedef" explicit_base_type "LightRefBase<Fence>"
      cpp_decl "${comment}typedef ${type} ${name};
"
      java_decl ""
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
    end

    class 200578 "typedef4"
      visibility package stereotype "typedef" explicit_base_type "Flattenable<Fence>"
      cpp_decl "${comment}typedef ${type} ${name};
"
      java_decl ""
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
    end

    class 200834 "FramebufferNativeWindow"
      visibility package 
      nactuals 3
      actual class class_ref 199426 // ANativeObjectBase
        rank 0 explicit_value "ANativeWindow"
      actual class class_ref 199426 // ANativeObjectBase
        rank 1 value class_ref 200834 // FramebufferNativeWindow
      actual class class_ref 199426 // ANativeObjectBase
        rank 2 explicit_value "LightRefBase<FramebufferNativeWindow>"
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl ""
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment " ---------------------------------------------------------------------------"
      classrelation 183554 // <realization>
	relation 183554 -_-|>
	  stereotype "bind"
	  a public
	    cpp default "${type}"
	    classrelation_ref 183554 // <realization>
	  b parent class_ref 199426 // ANativeObjectBase
      end

      operation 329858 "FramebufferNativeWindow"
	public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${throw}{
  ${body}}
"
	
	
	
	
      end

      operation 329986 "getDevice"
	const cpp_inline public explicit_return_type "framebuffer_device_t"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}const ${type} * ${name}${(}${)}${const}${volatile}${throw}${abstract} { return fbDev; };
"
	
	
	
	
      end

      operation 330114 "isUpdateOnDemand"
	const cpp_inline public explicit_return_type "bool"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} { return mUpdateOnDemand; };
"
	
	
	
	
      end

      operation 330242 "setUpdateRectangle"
	public explicit_return_type "status_t"
	nparams 1
	  param in name "updateRect" type class_ref 200962 // Rect
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 330370 "compositionComplete"
	public explicit_return_type "status_t"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 330498 "dump"
	public explicit_return_type "void"
	nparams 1
	  param inout name "result" explicit_type "String8"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 330626 "getCurrentBufferIndex"
	const public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment " for debugging only"
      end

      extra_member 149250 "friend"
	
	cpp "
    friend class LightRefBase<FramebufferNativeWindow>;" ""
	java ""
	php ""
	python ""
	idl ""
      end

      operation 330754 "~FramebufferNativeWindow"
	private explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${virtual}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${throw}{
  ${body}}
"
	
	
	
	
      end

      operation 330882 "setSwapInterval"
	class_operation private explicit_return_type "int"
	nparams 2
	  param inout name "window" explicit_type "ANativeWindow"
	  param in name "interval" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}, ${t1} ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} * ${p0}, ${t1} ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment " this class cannot be overloaded"
      end

      operation 331010 "dequeueBuffer"
	class_operation private explicit_return_type "int"
	nparams 3
	  param inout name "window" explicit_type "ANativeWindow"
	  param inout name "buffer" explicit_type "ANativeWindowBuffer"
	  param inout name "fenceFd" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}, ${t1} * * ${p1}${v1}, ${t2} * ${p2}${v2}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} * ${p0}, ${t1} * * ${p1}, ${t2} * ${p2}${)}${const}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 331138 "queueBuffer"
	class_operation private explicit_return_type "int"
	nparams 3
	  param inout name "window" explicit_type "ANativeWindow"
	  param inout name "buffer" explicit_type "ANativeWindowBuffer"
	  param in name "fenceFd" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}, ${t1} * ${p1}${v1}, ${t2} ${p2}${v2}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} * ${p0}, ${t1} * ${p1}, ${t2} ${p2}${)}${const}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 331266 "query"
	class_operation private explicit_return_type "int"
	nparams 3
	  param in name "window" explicit_type "ANativeWindow"
	  param in name "what" explicit_type "int"
	  param inout name "value" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} * ${p0}${v0}, ${t1} ${p1}${v1}, ${t2} * ${p2}${v2}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} * ${p0}, ${t1} ${p1}, ${t2} * ${p2}${)}${const}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 331394 "perform"
	class_operation private explicit_return_type "int"
	nparams 2
	  param inout name "window" explicit_type "ANativeWindow"
	  param in name "operation" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}, ${t1} ${p1}${v1}, ...${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} * ${p0}, ${t1} ${p1}, ...${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 331522 "dequeueBuffer_DEPRECATED"
	class_operation private explicit_return_type "int"
	nparams 2
	  param inout name "window" explicit_type "ANativeWindow"
	  param inout name "buffer" explicit_type "ANativeWindowBuffer"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}, ${t1} * * ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} * ${p0}, ${t1} * * ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 331650 "queueBuffer_DEPRECATED"
	class_operation private explicit_return_type "int"
	nparams 2
	  param inout name "window" explicit_type "ANativeWindow"
	  param inout name "buffer" explicit_type "ANativeWindowBuffer"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}, ${t1} * ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} * ${p0}, ${t1} * ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 331778 "lockBuffer_DEPRECATED"
	class_operation private explicit_return_type "int"
	nparams 2
	  param inout name "window" explicit_type "ANativeWindow"
	  param inout name "buffer" explicit_type "ANativeWindowBuffer"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}, ${t1} * ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} * ${p0}, ${t1} * ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      attribute 260994 "fbDev"
	private explicit_type "framebuffer_device_t"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 261122 "grDev"
	private explicit_type "alloc_device_t"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 261250 "buffers"
	private explicit_type "NativeBuffer"
	multiplicity "[MAX_NUM_FRAME_BUFFERS]"
	stereotype "sp"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${stereotype}<${type}> ${name}${multiplicity}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 261378 "front"
	private explicit_type "NativeBuffer"
	stereotype "sp"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${stereotype}<${type}> ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 261506 "mutex"
	private explicit_type "Mutex"
	cpp_mutable cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 261634 "mCondition"
	private explicit_type "Condition"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 261762 "mNumBuffers"
	private explicit_type "int32_t"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 261890 "mNumFreeBuffers"
	private explicit_type "int32_t"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 262018 "mBufferHead"
	private explicit_type "int32_t"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 262146 "mCurrentBufferIndex"
	private explicit_type "int32_t"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 262274 "mUpdateOnDemand"
	private explicit_type "bool"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end
    end

    class 200962 "Rect"
      visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl ""
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      classrelation 185730 // <generalisation>
	relation 185730 ---|>
	  a public
	    cpp default "${type}"
	    classrelation_ref 185730 // <generalisation>
	  b parent class_ref 205570 // typedef10
      end

      classrelation 185858 // <generalisation>
	relation 185858 ---|>
	  a public
	    cpp default "${type}"
	    classrelation_ref 185858 // <generalisation>
	  b parent class_ref 205698 // typedef11
      end

      class 205826 "value_type"
	visibility package stereotype "typedef" explicit_base_type "ARect::value_type"
	cpp_decl "${comment}typedef ${type} ${name};
"
	java_decl ""
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
      end

      operation 343554 "Rect"
	cpp_inline public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw} {
    };
"
	
	
	
	
	comment " we don't provide copy-ctor and operator= on purpose
 because we want the compiler generated versions"
      end

      operation 343682 "Rect"
	cpp_inline public explicit_return_type ""
	nparams 2
	  param in name "w" explicit_type "int32_t"
	  param in name "h" explicit_type "int32_t"
	cpp_decl "    ${comment}${inline}${name}${(}${t0} ${p0}${v0}, ${t1} ${p1}${v1}${)}${volatile}${throw} {
        left = top = 0;
        right = w;
        bottom = h;
    };
"
	
	
	
	
      end

      operation 343810 "Rect"
	cpp_inline public explicit_return_type ""
	nparams 4
	  param in name "l" explicit_type "int32_t"
	  param in name "t" explicit_type "int32_t"
	  param in name "r" explicit_type "int32_t"
	  param in name "b" explicit_type "int32_t"
	cpp_decl "    ${comment}${inline}${name}${(}${t0} ${p0}${v0}, ${t1} ${p1}${v1}, ${t2} ${p2}${v2}, ${t3} ${p3}${v3}${)}${volatile}${throw} {
        left = l;
        top = t;
        right = r;
        bottom = b;
    };
"
	
	
	
	
      end

      operation 343938 "Rect"
	cpp_inline public explicit_return_type ""
	nparams 2
	  param in name "lt" type class_ref 205314 // Point
	  param in name "rb" type class_ref 205314 // Point
	cpp_decl "    ${comment}${inline}${name}${(}const ${t0} & ${p0}${v0}, const ${t1} & ${p1}${v1}${)}${volatile}${throw} {
        left = lt.x;
        top = lt.y;
        right = rb.x;
        bottom = rb.y;
    };
"
	
	
	
	
      end

      operation 344066 "makeInvalid"
	public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 344194 "clear"
	cpp_inline public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} {
        left = top = right = bottom = 0;
    };
"
	
	
	
	
      end

      operation 344322 "isValid"
	const cpp_inline public explicit_return_type "bool"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} {
        return (getWidth() >= 0) && (getHeight() >= 0);
    };
"
	
	
	
	
	comment " a valid rectangle has a non negative width and height"
      end

      operation 344450 "isEmpty"
	const cpp_inline public explicit_return_type "bool"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} {
        return (getWidth() <= 0) || (getHeight() <= 0);
    };
"
	
	
	
	
	comment " an empty rect has a zero width or height, or is invalid"
      end

      operation 344578 "getWidth"
	const cpp_inline public explicit_return_type "int32_t"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} {
        return right - left;
    };
"
	
	
	
	
	comment " rectangle's width"
      end

      operation 344706 "getHeight"
	const cpp_inline public explicit_return_type "int32_t"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} {
        return bottom - top;
    };
"
	
	
	
	
	comment " rectangle's height"
      end

      operation 344834 "getBounds"
	const cpp_inline public return_type class_ref 200962 // Rect
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} {
        return Rect(right - left, bottom - top);
    };
"
	
	
	
	
      end

      operation 344962 "setLeftTop"
	cpp_inline public explicit_return_type "void"
	nparams 1
	  param in name "lt" type class_ref 205314 // Point
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract} {
        left = lt.x;
        top = lt.y;
    };
"
	
	
	
	
      end

      operation 345090 "setRightBottom"
	cpp_inline public explicit_return_type "void"
	nparams 1
	  param in name "rb" type class_ref 205314 // Point
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract} {
        right = rb.x;
        bottom = rb.y;
    };
"
	
	
	
	
      end

      operation 345218 "leftTop"
	const cpp_inline public return_type class_ref 205314 // Point
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} {
        return Point(left, top);
    };
"
	
	
	
	
	comment " the following 4 functions return the 4 corners of the rect as Point"
      end

      operation 345346 "rightBottom"
	const cpp_inline public return_type class_ref 205314 // Point
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} {
        return Point(right, bottom);
    };
"
	
	
	
	
      end

      operation 345474 "rightTop"
	const cpp_inline public return_type class_ref 205314 // Point
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} {
        return Point(right, top);
    };
"
	
	
	
	
      end

      operation 345602 "leftBottom"
	const cpp_inline public return_type class_ref 205314 // Point
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} {
        return Point(left, bottom);
    };
"
	
	
	
	
      end

      operation 345730 "operator =="
	const cpp_inline public explicit_return_type "bool"
	nparams 1
	  param in name "rhs" type class_ref 200962 // Rect
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract} {
        return (left == rhs.left) && (top == rhs.top) &&
               (right == rhs.right) && (bottom == rhs.bottom);
    };
"
	
	
	
	
	comment " comparisons"
      end

      operation 345858 "operator !="
	const cpp_inline public explicit_return_type "bool"
	nparams 1
	  param in name "rhs" type class_ref 200962 // Rect
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract} {
        return !operator == (rhs);
    };
"
	
	
	
	
      end

      operation 345986 "operator <"
	const public explicit_return_type "bool"
	nparams 1
	  param in name "rhs" type class_ref 200962 // Rect
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment " operator < defines an order which allows to use rectangles in sorted
 vectors."
      end

      operation 346114 "operator +"
	const public return_type class_ref 200962 // Rect
	nparams 1
	  param in name "rhs" type class_ref 205314 // Point
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}const ${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}const ${type} ${class}::${name}${(}const ${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 346242 "operator -"
	const public return_type class_ref 200962 // Rect
	nparams 1
	  param in name "rhs" type class_ref 205314 // Point
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}const ${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}const ${type} ${class}::${name}${(}const ${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 346370 "operator +="
	cpp_inline public return_type class_ref 200962 // Rect
	nparams 1
	  param in name "rhs" type class_ref 205314 // Point
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} & ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract} {
        return offsetBy(rhs.x, rhs.y);
    };
"
	
	
	
	
      end

      operation 346498 "operator -="
	cpp_inline public return_type class_ref 200962 // Rect
	nparams 1
	  param in name "rhs" type class_ref 205314 // Point
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} & ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract} {
        return offsetBy(-rhs.x, -rhs.y);
    };
"
	
	
	
	
      end

      operation 346626 "offsetToOrigin"
	cpp_inline public return_type class_ref 200962 // Rect
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} & ${name}${(}${)}${const}${volatile}${throw}${abstract} {
        right -= left;
        bottom -= top;
        left = top = 0;
        return *this;
    };
"
	
	
	
	
      end

      operation 346754 "offsetTo"
	cpp_inline public return_type class_ref 200962 // Rect
	nparams 1
	  param in name "p" type class_ref 205314 // Point
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} & ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract} {
        return offsetTo(p.x, p.y);
    };
"
	
	
	
	
      end

      operation 346882 "offsetBy"
	cpp_inline public return_type class_ref 200962 // Rect
	nparams 1
	  param in name "dp" type class_ref 205314 // Point
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} & ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract} {
        return offsetBy(dp.x, dp.y);
    };
"
	
	
	
	
      end

      operation 347010 "offsetTo"
	public return_type class_ref 200962 // Rect
	nparams 2
	  param in name "x" explicit_type "int32_t"
	  param in name "y" explicit_type "int32_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} & ${name}${(}${t0} ${p0}${v0}, ${t1} ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} & ${class}::${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 347138 "offsetBy"
	public return_type class_ref 200962 // Rect
	nparams 2
	  param in name "x" explicit_type "int32_t"
	  param in name "y" explicit_type "int32_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} & ${name}${(}${t0} ${p0}${v0}, ${t1} ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} & ${class}::${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 347266 "intersect"
	const public explicit_return_type "bool"
	nparams 2
	  param in name "with" type class_ref 200962 // Rect
	  param inout name "result" type class_ref 200962 // Rect
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}, ${t1} * ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}, ${t1} * ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 347394 "transform"
	const public return_type class_ref 200962 // Rect
	nparams 3
	  param in name "xform" explicit_type "uint32_t"
	  param in name "width" explicit_type "int32_t"
	  param in name "height" explicit_type "int32_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} ${p1}${v1}, ${t2} ${p2}${v2}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${const}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment " Create a new Rect by transforming this one using a graphics HAL
 transform.  This rectangle is defined in a coordinate space starting at
 the origin and extending to (width, height).  If the transform includes
 a ROT90 then the output rectangle is defined in a space extending to
 (height, width).  Otherwise the output rectangle is in the same space as
 the input."
      end

      operation 347522 "reduce"
	const public return_type class_ref 200962 // Rect
	nparams 1
	  param in name "exclude" type class_ref 200962 // Rect
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment " this calculates (Region(*this) - exclude).bounds() efficiently"
      end

      operation 347650 "width"
	const cpp_inline public explicit_return_type "int32_t"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} { return getWidth(); };
"
	
	
	
	
	comment " for backward compatibility"
      end

      operation 347778 "height"
	const cpp_inline public explicit_return_type "int32_t"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} { return getHeight(); };
"
	
	
	
	
      end

      operation 347906 "set"
	cpp_inline public explicit_return_type "void"
	nparams 1
	  param in name "rhs" type class_ref 200962 // Rect
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract} { operator = (rhs); };
"
	
	
	
	
      end
    end

    class 201090 "FrameStats"
      visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl ""
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      classrelation 183682 // <generalisation>
	relation 183682 ---|>
	  a public
	    cpp default "${type}"
	    classrelation_ref 183682 // <generalisation>
	  b parent class_ref 201218 // typedef5
      end

      attribute 262402 "refreshPeriodNano"
	public explicit_type "nsecs_t"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "     * Approximate refresh time, in nanoseconds.
     "
      end

      attribute 262530 "desiredPresentTimesNano"
	public explicit_type "nsecs_t"
	stereotype "Vector"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${stereotype}<${type}> ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "    * The times in nanoseconds for when the frame contents were posted by the producer (e.g.
    * the application). They are either explicitly set or defaulted to the time when
    * Surface::queueBuffer() was called.
    "
      end

      attribute 262658 "actualPresentTimesNano"
	public explicit_type "nsecs_t"
	stereotype "Vector"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${stereotype}<${type}> ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "    * The times in milliseconds for when the frame contents were presented on the screen.
    "
      end

      attribute 262786 "frameReadyTimesNano"
	public explicit_type "nsecs_t"
	stereotype "Vector"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${stereotype}<${type}> ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "    * The times in nanoseconds for when the frame contents were ready to be presented. Note that
    * a frame can be posted and still it contents being rendered asynchronously in GL. In such a
    * case these are the times when the frame contents were completely rendered (i.e. their fences
    * signaled).
    "
      end

      operation 331906 "isFixedSize"
	const public explicit_return_type "bool"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment " LightFlattenable"
      end

      operation 332034 "getFlattenedSize"
	const public explicit_return_type "size_t"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 332162 "flatten"
	const public explicit_return_type "status_t"
	nparams 2
	  param inout name "buffer" explicit_type "void"
	  param in name "size" explicit_type "size_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}, ${t1} ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} * ${p0}, ${t1} ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 332290 "unflatten"
	public explicit_return_type "status_t"
	nparams 2
	  param in name "buffer" explicit_type "void"
	  param in name "size" explicit_type "size_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} * ${p0}${v0}, ${t1} ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} * ${p0}, ${t1} ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end
    end

    class 201218 "typedef5"
      visibility package stereotype "typedef" explicit_base_type "LightFlattenable<FrameStats>"
      cpp_decl "${comment}typedef ${type} ${name};
"
      java_decl ""
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
    end

    class 201346 "GraphicBuffer"
      visibility package 
      nactuals 3
      actual class class_ref 199426 // ANativeObjectBase
        rank 0 explicit_value "ANativeWindowBuffer"
      actual class class_ref 199426 // ANativeObjectBase
        rank 1 value class_ref 201346 // GraphicBuffer
      actual class class_ref 199426 // ANativeObjectBase
        rank 2 explicit_value "RefBase"
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl ""
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment " ===========================================================================
 GraphicBuffer
 ==========================================================================="
      classrelation 183810 // <realization>
	relation 183810 -_-|>
	  stereotype "bind"
	  a public
	    cpp default "${type}"
	    classrelation_ref 183810 // <realization>
	  b parent class_ref 199426 // ANativeObjectBase
      end

      classrelation 183938 // <generalisation>
	relation 183938 ---|>
	  a public
	    cpp default "${type}"
	    classrelation_ref 183938 // <generalisation>
	  b parent class_ref 201474 // typedef6
      end

      extra_member 149378 "friend"
	
	cpp "
    friend class Flattenable<GraphicBuffer>;" ""
	java ""
	php ""
	python ""
	idl ""
      end

      class 201602 "anonymous3"
	visibility package stereotype "enum"
	cpp_decl "${comment}enum  {
${items}
};
"
	java_decl ""
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	attribute 262914 "USAGE_SW_READ_NEVER"
	  public type class_ref 201602 // anonymous3
	  init_value " GRALLOC_USAGE_SW_READ_NEVER"
	  cpp_decl "  ${name}${value},${comment}"
	  java_decl ""
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 263042 "USAGE_SW_READ_RARELY"
	  public type class_ref 201602 // anonymous3
	  init_value " GRALLOC_USAGE_SW_READ_RARELY"
	  cpp_decl "  ${name}${value},${comment}"
	  java_decl ""
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 263170 "USAGE_SW_READ_OFTEN"
	  public type class_ref 201602 // anonymous3
	  init_value " GRALLOC_USAGE_SW_READ_OFTEN"
	  cpp_decl "  ${name}${value},${comment}"
	  java_decl ""
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 263298 "USAGE_SW_READ_MASK"
	  public type class_ref 201602 // anonymous3
	  init_value " GRALLOC_USAGE_SW_READ_MASK"
	  cpp_decl "  ${name}${value},${comment}"
	  java_decl ""
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 263426 "USAGE_SW_WRITE_NEVER"
	  public type class_ref 201602 // anonymous3
	  init_value " GRALLOC_USAGE_SW_WRITE_NEVER"
	  cpp_decl "  ${name}${value},${comment}"
	  java_decl ""
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 263554 "USAGE_SW_WRITE_RARELY"
	  public type class_ref 201602 // anonymous3
	  init_value " GRALLOC_USAGE_SW_WRITE_RARELY"
	  cpp_decl "  ${name}${value},${comment}"
	  java_decl ""
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 263682 "USAGE_SW_WRITE_OFTEN"
	  public type class_ref 201602 // anonymous3
	  init_value " GRALLOC_USAGE_SW_WRITE_OFTEN"
	  cpp_decl "  ${name}${value},${comment}"
	  java_decl ""
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 263810 "USAGE_SW_WRITE_MASK"
	  public type class_ref 201602 // anonymous3
	  init_value " GRALLOC_USAGE_SW_WRITE_MASK"
	  cpp_decl "  ${name}${value},${comment}"
	  java_decl ""
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 263938 "USAGE_SOFTWARE_MASK"
	  public type class_ref 201602 // anonymous3
	  init_value " USAGE_SW_READ_MASK|USAGE_SW_WRITE_MASK"
	  cpp_decl "  ${name}${value},${comment}"
	  java_decl ""
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 264066 "USAGE_PROTECTED"
	  public type class_ref 201602 // anonymous3
	  init_value " GRALLOC_USAGE_PROTECTED"
	  cpp_decl "  ${name}${value},${comment}"
	  java_decl ""
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 264194 "USAGE_HW_TEXTURE"
	  public type class_ref 201602 // anonymous3
	  init_value " GRALLOC_USAGE_HW_TEXTURE"
	  cpp_decl "  ${name}${value},${comment}"
	  java_decl ""
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 264322 "USAGE_HW_RENDER"
	  public type class_ref 201602 // anonymous3
	  init_value " GRALLOC_USAGE_HW_RENDER"
	  cpp_decl "  ${name}${value},${comment}"
	  java_decl ""
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 264450 "USAGE_HW_2D"
	  public type class_ref 201602 // anonymous3
	  init_value " GRALLOC_USAGE_HW_2D"
	  cpp_decl "  ${name}${value},${comment}"
	  java_decl ""
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 264578 "USAGE_HW_COMPOSER"
	  public type class_ref 201602 // anonymous3
	  init_value " GRALLOC_USAGE_HW_COMPOSER"
	  cpp_decl "  ${name}${value},${comment}"
	  java_decl ""
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 264706 "USAGE_HW_VIDEO_ENCODER"
	  public type class_ref 201602 // anonymous3
	  init_value " GRALLOC_USAGE_HW_VIDEO_ENCODER"
	  cpp_decl "  ${name}${value},${comment}"
	  java_decl ""
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 264834 "USAGE_HW_MASK"
	  public type class_ref 201602 // anonymous3
	  init_value " GRALLOC_USAGE_HW_MASK"
	  cpp_decl "  ${name}${value},${comment}"
	  java_decl ""
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 264962 "USAGE_HW_FIMC1"
	  public type class_ref 201602 // anonymous3
	  init_value " GRALLOC_USAGE_HW_FIMC1"
	  cpp_decl "  ${name}${value},${comment}"
	  java_decl ""
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 265090 "USAGE_CURSOR"
	  public type class_ref 201602 // anonymous3
	  init_value " GRALLOC_USAGE_CURSOR"
	  cpp_decl "  ${name}${value},${comment}"
	  java_decl ""
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end
      end

      operation 332418 "GraphicBuffer"
	public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${throw}{
  ${body}}
"
	
	
	
	
      end

      operation 332546 "GraphicBuffer"
	public explicit_return_type ""
	nparams 4
	  param in name "w" explicit_type "uint32_t"
	  param in name "h" explicit_type "uint32_t"
	  param in name "format" type class_ref 201730 // PixelFormat
	  param in name "usage" explicit_type "uint32_t"
	cpp_decl "    ${comment}${inline}${name}${(}${t0} ${p0}${v0}, ${t1} ${p1}${v1}, ${t2} ${p2}${v2}, ${t3} ${p3}${v3}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throw}{
  ${body}}
"
	
	
	
	
	comment " creates w * h buffer"
      end

      operation 332674 "GraphicBuffer"
	public explicit_return_type ""
	nparams 7
	  param in name "w" explicit_type "uint32_t"
	  param in name "h" explicit_type "uint32_t"
	  param in name "format" type class_ref 201730 // PixelFormat
	  param in name "usage" explicit_type "uint32_t"
	  param in name "stride" explicit_type "uint32_t"
	  param inout name "handle" explicit_type "native_handle_t"
	  param in name "keepOwnership" explicit_type "bool"
	cpp_decl "    ${comment}${inline}${name}${(}${t0} ${p0}${v0}, ${t1} ${p1}${v1}, ${t2} ${p2}${v2}, ${t3} ${p3}${v3}, ${t4} ${p4}${v4}, ${t5} * ${p5}${v5}, ${t6} ${p6}${v6}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} * ${p5}, ${t6} ${p6}${)}${throw}{
  ${body}}
"
	
	
	
	
	comment " create a buffer from an existing handle"
      end

      operation 332802 "GraphicBuffer"
	public explicit_return_type ""
	nparams 2
	  param inout name "buffer" explicit_type "ANativeWindowBuffer"
	  param in name "keepOwnership" explicit_type "bool"
	cpp_decl "    ${comment}${inline}${name}${(}${t0} * ${p0}${v0}, ${t1} ${p1}${v1}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${t0} * ${p0}, ${t1} ${p1}${)}${throw}{
  ${body}}
"
	
	
	
	
	comment " create a buffer from an existing ANativeWindowBuffer"
      end

      operation 332930 "initCheck"
	const public explicit_return_type "status_t"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment " return status"
      end

      operation 333058 "getWidth"
	const cpp_inline public explicit_return_type "uint32_t"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} { return width; };
"
	
	
	
	
      end

      operation 333186 "getHeight"
	const cpp_inline public explicit_return_type "uint32_t"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} { return height; };
"
	
	
	
	
      end

      operation 333314 "getStride"
	const cpp_inline public explicit_return_type "uint32_t"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} { return stride; };
"
	
	
	
	
      end

      operation 333442 "getUsage"
	const cpp_inline public explicit_return_type "uint32_t"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} { return usage; };
"
	
	
	
	
      end

      operation 333570 "getPixelFormat"
	const cpp_inline public return_type class_ref 201730 // PixelFormat
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} { return format; };
"
	
	
	
	
      end

      operation 333698 "getBounds"
	const cpp_inline public return_type class_ref 200962 // Rect
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} { return Rect(width, height); };
"
	
	
	
	
      end

      operation 333826 "getId"
	const cpp_inline public explicit_return_type "uint64_t"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} { return mId; };
"
	
	
	
	
      end

      operation 333954 "reallocate"
	public explicit_return_type "status_t"
	nparams 4
	  param in name "w" explicit_type "uint32_t"
	  param in name "h" explicit_type "uint32_t"
	  param in name "f" type class_ref 201730 // PixelFormat
	  param in name "usage" explicit_type "uint32_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} ${p1}${v1}, ${t2} ${p2}${v2}, ${t3} ${p3}${v3}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${const}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 334082 "lock"
	public explicit_return_type "status_t"
	nparams 2
	  param in name "usage" explicit_type "uint32_t"
	  param inout name "vaddr" explicit_type "void"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} * * ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}, ${t1} * * ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 334210 "lock"
	public explicit_return_type "status_t"
	nparams 3
	  param in name "usage" explicit_type "uint32_t"
	  param in name "rect" type class_ref 200962 // Rect
	  param inout name "vaddr" explicit_type "void"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, const ${t1} & ${p1}${v1}, ${t2} * * ${p2}${v2}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}, const ${t1} & ${p1}, ${t2} * * ${p2}${)}${const}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 334338 "lockYCbCr"
	public explicit_return_type "status_t"
	nparams 2
	  param in name "usage" explicit_type "uint32_t"
	  param inout name "ycbcr" explicit_type "android_ycbcr"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} * ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}, ${t1} * ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment " For HAL_PIXEL_FORMAT_YCbCr_420_888"
      end

      operation 334466 "lockYCbCr"
	public explicit_return_type "status_t"
	nparams 3
	  param in name "usage" explicit_type "uint32_t"
	  param in name "rect" type class_ref 200962 // Rect
	  param inout name "ycbcr" explicit_type "android_ycbcr"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, const ${t1} & ${p1}${v1}, ${t2} * ${p2}${v2}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}, const ${t1} & ${p1}, ${t2} * ${p2}${)}${const}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 334594 "unlock"
	public explicit_return_type "status_t"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 334722 "lockAsync"
	public explicit_return_type "status_t"
	nparams 3
	  param in name "usage" explicit_type "uint32_t"
	  param inout name "vaddr" explicit_type "void"
	  param in name "fenceFd" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} * * ${p1}${v1}, ${t2} ${p2}${v2}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}, ${t1} * * ${p1}, ${t2} ${p2}${)}${const}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 334850 "lockAsync"
	public explicit_return_type "status_t"
	nparams 4
	  param in name "usage" explicit_type "uint32_t"
	  param in name "rect" type class_ref 200962 // Rect
	  param inout name "vaddr" explicit_type "void"
	  param in name "fenceFd" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, const ${t1} & ${p1}${v1}, ${t2} * * ${p2}${v2}, ${t3} ${p3}${v3}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}, const ${t1} & ${p1}, ${t2} * * ${p2}, ${t3} ${p3}${)}${const}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 334978 "lockAsyncYCbCr"
	public explicit_return_type "status_t"
	nparams 3
	  param in name "usage" explicit_type "uint32_t"
	  param inout name "ycbcr" explicit_type "android_ycbcr"
	  param in name "fenceFd" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} * ${p1}${v1}, ${t2} ${p2}${v2}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}, ${t1} * ${p1}, ${t2} ${p2}${)}${const}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 335106 "lockAsyncYCbCr"
	public explicit_return_type "status_t"
	nparams 4
	  param in name "usage" explicit_type "uint32_t"
	  param in name "rect" type class_ref 200962 // Rect
	  param inout name "ycbcr" explicit_type "android_ycbcr"
	  param in name "fenceFd" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, const ${t1} & ${p1}${v1}, ${t2} * ${p2}${v2}, ${t3} ${p3}${v3}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}, const ${t1} & ${p1}, ${t2} * ${p2}, ${t3} ${p3}${)}${const}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 335234 "unlockAsync"
	public explicit_return_type "status_t"
	nparams 1
	  param inout name "fenceFd" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} * ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 335362 "getNativeBuffer"
	const public explicit_return_type "ANativeWindowBuffer"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} * ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} * ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 335490 "dumpAllocationsToSystemLog"
	class_operation public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment " for debugging"
      end

      operation 335618 "getFlattenedSize"
	const public explicit_return_type "size_t"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment " Flattenable protocol"
      end

      operation 335746 "getFdCount"
	const public explicit_return_type "size_t"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 335874 "flatten"
	const public explicit_return_type "status_t"
	nparams 4
	  param inout name "buffer" explicit_type "void"
	  param inout name "size" explicit_type "size_t"
	  param inout name "fds" explicit_type "int"
	  param inout name "count" explicit_type "size_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * & ${p0}${v0}, ${t1} & ${p1}${v1}, ${t2} * & ${p2}${v2}, ${t3} & ${p3}${v3}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} * & ${p0}, ${t1} & ${p1}, ${t2} * & ${p2}, ${t3} & ${p3}${)}${const}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 336002 "unflatten"
	public explicit_return_type "status_t"
	nparams 4
	  param in name "buffer" explicit_type "void"
	  param inout name "size" explicit_type "size_t"
	  param in name "fds" explicit_type "int"
	  param inout name "count" explicit_type "size_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} * & ${p0}${v0}, ${t1} & ${p1}${v1}, const ${t2} * & ${p2}${v2}, ${t3} & ${p3}${v3}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} * & ${p0}, ${t1} & ${p1}, const ${t2} * & ${p2}, ${t3} & ${p3}${)}${const}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 336130 "~GraphicBuffer"
	private explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${virtual}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${throw}{
  ${body}}
"
	
	
	
	
      end

      class 201858 "anonymous4"
	visibility package stereotype "enum"
	cpp_decl "${comment}enum  {
${items}
};
"
	java_decl ""
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	attribute 265218 "ownNone"
	  public type class_ref 201858 // anonymous4
	  init_value " 0"
	  cpp_decl "  ${name}${value},${comment}"
	  java_decl ""
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 265346 "ownHandle"
	  public type class_ref 201858 // anonymous4
	  init_value " 1"
	  cpp_decl "  ${name}${value},${comment}"
	  java_decl ""
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 265474 "ownData"
	  public type class_ref 201858 // anonymous4
	  init_value " 2"
	  cpp_decl "  ${name}${value},${comment}"
	  java_decl ""
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end
      end

      operation 336258 "getBufferMapper"
	const cpp_inline private return_type class_ref 201986 // GraphicBufferMapper
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}const ${type} & ${name}${(}${)}${const}${volatile}${throw}${abstract} {
        return mBufferMapper;
    };
"
	
	
	
	
      end

      operation 336386 "getBufferMapper"
	cpp_inline private return_type class_ref 201986 // GraphicBufferMapper
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} & ${name}${(}${)}${const}${volatile}${throw}${abstract} {
        return mBufferMapper;
    };
"
	
	
	
	
      end

      attribute 265602 "mOwner"
	private explicit_type "uint8_t"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      extra_member 149506 "friend"
	
	cpp "
    friend class Surface;" ""
	java ""
	php ""
	python ""
	idl ""
      end

      extra_member 149634 "friend"
	
	cpp "    friend class BpSurface;" ""
	java ""
	php ""
	python ""
	idl ""
      end

      extra_member 149762 "friend"
	
	cpp "    friend class BnSurface;" ""
	java ""
	php ""
	python ""
	idl ""
      end

      extra_member 149890 "friend"
	
	cpp "    friend class LightRefBase<GraphicBuffer>;" ""
	java ""
	php ""
	python ""
	idl ""
      end

      operation 336514 "GraphicBuffer"
	private explicit_return_type ""
	nparams 1
	  param in name "rhs" type class_ref 201346 // GraphicBuffer
	cpp_decl "    ${comment}${inline}${name}${(}const ${t0} & ${p0}${v0}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}const ${t0} & ${p0}${)}${throw}{
  ${body}}
"
	
	
	
	
      end

      operation 336642 "operator ="
	private return_type class_ref 201346 // GraphicBuffer
	nparams 1
	  param in name "rhs" type class_ref 201346 // GraphicBuffer
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} & ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} & ${class}::${name}${(}const ${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 336770 "operator ="
	const private return_type class_ref 201346 // GraphicBuffer
	nparams 1
	  param in name "rhs" type class_ref 201346 // GraphicBuffer
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}const ${type} & ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}const ${type} & ${class}::${name}${(}const ${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 336898 "initSize"
	private explicit_return_type "status_t"
	nparams 4
	  param in name "w" explicit_type "uint32_t"
	  param in name "h" explicit_type "uint32_t"
	  param in name "format" type class_ref 201730 // PixelFormat
	  param in name "usage" explicit_type "uint32_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} ${p1}${v1}, ${t2} ${p2}${v2}, ${t3} ${p3}${v3}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${const}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 337026 "free_handle"
	private explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      classrelation 184066 // mBufferMapper (<unidirectional association>)
	relation 184066 --->
	  a role_name "mBufferMapper" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} & ${name}${value};
"
	    classrelation_ref 184066 // mBufferMapper (<unidirectional association>)
	  b parent class_ref 201986 // GraphicBufferMapper
      end

      attribute 265730 "mInitCheck"
	private explicit_type "ssize_t"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 265858 "mWrappedBuffer"
	private explicit_type "ANativeWindowBuffer"
	stereotype "sp"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${stereotype}<${type}> ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " If we're wrapping another buffer then this reference will make sure it
 doesn't get freed."
      end

      attribute 265986 "mId"
	private explicit_type "uint64_t"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end
    end

    class 201474 "typedef6"
      visibility package stereotype "typedef" explicit_base_type "Flattenable<GraphicBuffer>"
      cpp_decl "${comment}typedef ${type} ${name};
"
      java_decl ""
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
    end

    class 201730 "PixelFormat"
      visibility package stereotype "typedef" explicit_base_type "int32_t"
      cpp_decl "${comment}typedef ${type} ${name};
"
      java_decl ""
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment " these constants need to match those
 in graphics/PixelFormat.java & pixelflinger/format.h

 logical pixel formats used by the SurfaceFlinger -----------------------
 Custom pixel-format described by a PixelFormatInfo structure
 System chooses a format that supports translucency (many alpha bits)
 System chooses a format that supports transparency
 (at least 1 alpha bit)
 System chooses an opaque format (no alpha bits required)
 real pixel formats supported for rendering -----------------------------
 4x8-bit RGBA
 4x8-bit RGB0
 3x8-bit RGB
 16-bit RGB
 4x8-bit BGRA
 16-bit ARGB
 16-bit ARGB
 4x8-bit sRGB + A
 4x8-bit sRGB, no A"
    end

    class 201986 "GraphicBufferMapper"
      visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl ""
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      classrelation 184578 // <generalisation>
	relation 184578 ---|>
	  a public
	    cpp default "${type}"
	    classrelation_ref 184578 // <generalisation>
	  b parent class_ref 202626 // typedef8
      end

      operation 338050 "get"
	class_operation cpp_inline public return_type class_ref 201986 // GraphicBufferMapper
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} & ${name}${(}${)}${const}${volatile}${throw}${abstract} { return getInstance(); };
"
	
	
	
	
      end

      operation 338178 "registerBuffer"
	public explicit_return_type "status_t"
	nparams 1
	  param in name "handle" explicit_type "buffer_handle_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 338306 "unregisterBuffer"
	public explicit_return_type "status_t"
	nparams 1
	  param in name "handle" explicit_type "buffer_handle_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 338434 "lock"
	public explicit_return_type "status_t"
	nparams 4
	  param in name "handle" explicit_type "buffer_handle_t"
	  param in name "usage" explicit_type "int"
	  param in name "bounds" type class_ref 200962 // Rect
	  param inout name "vaddr" explicit_type "void"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} ${p1}${v1}, const ${t2} & ${p2}${v2}, ${t3} * * ${p3}${v3}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}, ${t1} ${p1}, const ${t2} & ${p2}, ${t3} * * ${p3}${)}${const}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 338562 "lockYCbCr"
	public explicit_return_type "status_t"
	nparams 4
	  param in name "handle" explicit_type "buffer_handle_t"
	  param in name "usage" explicit_type "int"
	  param in name "bounds" type class_ref 200962 // Rect
	  param inout name "ycbcr" explicit_type "android_ycbcr"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} ${p1}${v1}, const ${t2} & ${p2}${v2}, ${t3} * ${p3}${v3}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}, ${t1} ${p1}, const ${t2} & ${p2}, ${t3} * ${p3}${)}${const}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 338690 "unlock"
	public explicit_return_type "status_t"
	nparams 1
	  param in name "handle" explicit_type "buffer_handle_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 338818 "lockAsync"
	public explicit_return_type "status_t"
	nparams 5
	  param in name "handle" explicit_type "buffer_handle_t"
	  param in name "usage" explicit_type "int"
	  param in name "bounds" type class_ref 200962 // Rect
	  param inout name "vaddr" explicit_type "void"
	  param in name "fenceFd" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} ${p1}${v1}, const ${t2} & ${p2}${v2}, ${t3} * * ${p3}${v3}, ${t4} ${p4}${v4}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}, ${t1} ${p1}, const ${t2} & ${p2}, ${t3} * * ${p3}, ${t4} ${p4}${)}${const}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 338946 "lockAsyncYCbCr"
	public explicit_return_type "status_t"
	nparams 5
	  param in name "handle" explicit_type "buffer_handle_t"
	  param in name "usage" explicit_type "int"
	  param in name "bounds" type class_ref 200962 // Rect
	  param inout name "ycbcr" explicit_type "android_ycbcr"
	  param in name "fenceFd" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} ${p1}${v1}, const ${t2} & ${p2}${v2}, ${t3} * ${p3}${v3}, ${t4} ${p4}${v4}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}, ${t1} ${p1}, const ${t2} & ${p2}, ${t3} * ${p3}, ${t4} ${p4}${)}${const}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 339074 "unlockAsync"
	public explicit_return_type "status_t"
	nparams 2
	  param in name "handle" explicit_type "buffer_handle_t"
	  param inout name "fenceFd" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} * ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}, ${t1} * ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 339202 "getphys"
	public explicit_return_type "status_t"
	nparams 2
	  param in name "handle" explicit_type "buffer_handle_t"
	  param inout name "paddr" explicit_type "void"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} * * ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}, ${t1} * * ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 339330 "dump"
	public explicit_return_type "void"
	nparams 1
	  param in name "handle" explicit_type "buffer_handle_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment " dumps information about the mapping of this handle"
      end

      extra_member 150146 "friend"
	
	cpp "
    friend class Singleton<GraphicBufferMapper>;" ""
	java ""
	php ""
	python ""
	idl ""
      end

      operation 339458 "GraphicBufferMapper"
	private explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${throw}{
  ${body}}
"
	
	
	
	
      end

      attribute 268802 "mAllocMod"
	const_attribute private explicit_type "gralloc_module_t"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end
    end

    class 202114 "GraphicBufferAllocator"
      visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl ""
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      classrelation 184194 // <generalisation>
	relation 184194 ---|>
	  a public
	    cpp default "${type}"
	    classrelation_ref 184194 // <generalisation>
	  b parent class_ref 202242 // typedef7
      end

      class 202370 "anonymous5"
	visibility package stereotype "enum"
	cpp_decl "${comment}enum  {
${items}
};
"
	java_decl ""
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	attribute 266114 "USAGE_SW_READ_NEVER"
	  public type class_ref 202370 // anonymous5
	  init_value " GRALLOC_USAGE_SW_READ_NEVER"
	  cpp_decl "  ${name}${value},${comment}"
	  java_decl ""
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 266242 "USAGE_SW_READ_RARELY"
	  public type class_ref 202370 // anonymous5
	  init_value " GRALLOC_USAGE_SW_READ_RARELY"
	  cpp_decl "  ${name}${value},${comment}"
	  java_decl ""
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 266370 "USAGE_SW_READ_OFTEN"
	  public type class_ref 202370 // anonymous5
	  init_value " GRALLOC_USAGE_SW_READ_OFTEN"
	  cpp_decl "  ${name}${value},${comment}"
	  java_decl ""
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 266498 "USAGE_SW_READ_MASK"
	  public type class_ref 202370 // anonymous5
	  init_value " GRALLOC_USAGE_SW_READ_MASK"
	  cpp_decl "  ${name}${value},${comment}"
	  java_decl ""
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 266626 "USAGE_SW_WRITE_NEVER"
	  public type class_ref 202370 // anonymous5
	  init_value " GRALLOC_USAGE_SW_WRITE_NEVER"
	  cpp_decl "  ${name}${value},${comment}"
	  java_decl ""
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 266754 "USAGE_SW_WRITE_RARELY"
	  public type class_ref 202370 // anonymous5
	  init_value " GRALLOC_USAGE_SW_WRITE_RARELY"
	  cpp_decl "  ${name}${value},${comment}"
	  java_decl ""
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 266882 "USAGE_SW_WRITE_OFTEN"
	  public type class_ref 202370 // anonymous5
	  init_value " GRALLOC_USAGE_SW_WRITE_OFTEN"
	  cpp_decl "  ${name}${value},${comment}"
	  java_decl ""
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 267010 "USAGE_SW_WRITE_MASK"
	  public type class_ref 202370 // anonymous5
	  init_value " GRALLOC_USAGE_SW_WRITE_MASK"
	  cpp_decl "  ${name}${value},${comment}"
	  java_decl ""
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 267138 "USAGE_SOFTWARE_MASK"
	  public type class_ref 202370 // anonymous5
	  init_value " USAGE_SW_READ_MASK|USAGE_SW_WRITE_MASK"
	  cpp_decl "  ${name}${value},${comment}"
	  java_decl ""
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 267266 "USAGE_HW_TEXTURE"
	  public type class_ref 202370 // anonymous5
	  init_value " GRALLOC_USAGE_HW_TEXTURE"
	  cpp_decl "  ${name}${value},${comment}"
	  java_decl ""
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 267394 "USAGE_HW_RENDER"
	  public type class_ref 202370 // anonymous5
	  init_value " GRALLOC_USAGE_HW_RENDER"
	  cpp_decl "  ${name}${value},${comment}"
	  java_decl ""
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 267522 "USAGE_HW_2D"
	  public type class_ref 202370 // anonymous5
	  init_value " GRALLOC_USAGE_HW_2D"
	  cpp_decl "  ${name}${value},${comment}"
	  java_decl ""
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 267650 "USAGE_HW_MASK"
	  public type class_ref 202370 // anonymous5
	  init_value " GRALLOC_USAGE_HW_MASK"
	  cpp_decl "  ${name}${value},${comment}"
	  java_decl ""
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 267778 "USAGE_HW_FIMC1"
	  public type class_ref 202370 // anonymous5
	  init_value " GRALLOC_USAGE_HW_FIMC1"
	  cpp_decl "  ${name}${value},${comment}"
	  java_decl ""
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end
      end

      operation 337154 "get"
	class_operation cpp_inline public return_type class_ref 202114 // GraphicBufferAllocator
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} & ${name}${(}${)}${const}${volatile}${throw}${abstract} { return getInstance(); };
"
	
	
	
	
      end

      operation 337282 "alloc"
	public explicit_return_type "status_t"
	nparams 6
	  param in name "w" explicit_type "uint32_t"
	  param in name "h" explicit_type "uint32_t"
	  param in name "format" type class_ref 201730 // PixelFormat
	  param in name "usage" explicit_type "int"
	  param inout name "handle" explicit_type "buffer_handle_t"
	  param inout name "stride" explicit_type "int32_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} ${p1}${v1}, ${t2} ${p2}${v2}, ${t3} ${p3}${v3}, ${t4} * ${p4}${v4}, ${t5} * ${p5}${v5}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} * ${p4}, ${t5} * ${p5}${)}${const}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 337410 "free"
	public explicit_return_type "status_t"
	nparams 1
	  param in name "handle" explicit_type "buffer_handle_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 337538 "dump"
	const public explicit_return_type "void"
	nparams 1
	  param inout name "res" explicit_type "String8"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 337666 "dumpToSystemLog"
	class_operation public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      class 202498 "alloc_rec_t"
	visibility package stereotype "struct"
	cpp_decl "${comment}${template}struct ${name}${inherit} {
${members}};
${inlines}
"
	java_decl ""
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	attribute 267906 "w"
	  public explicit_type "uint32_t"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl ""
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 268034 "h"
	  public explicit_type "uint32_t"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl ""
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 268162 "s"
	  public explicit_type "uint32_t"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl ""
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	classrelation 184322 // format (<directional composition>)
	  relation 184322 *-->
	    a role_name "format" public
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	      classrelation_ref 184322 // format (<directional composition>)
	    b parent class_ref 201730 // PixelFormat
	end

	attribute 268290 "usage"
	  public explicit_type "uint32_t"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl ""
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 268418 "size"
	  public explicit_type "size_t"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl ""
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end
      end

      attribute 268546 "sLock"
	class_attribute private explicit_type "Mutex"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 184450 // sAllocList (<directional composition>)
	relation 184450 *-->
	  stereotype "KeyedVector"
	  a role_name "sAllocList" class_relation private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${stereotype}<buffer_handle_t,${type}> ${name}${value};
"
	    classrelation_ref 184450 // sAllocList (<directional composition>)
	  b parent class_ref 202498 // alloc_rec_t
      end

      extra_member 150018 "friend"
	
	cpp "    
    friend class Singleton<GraphicBufferAllocator>;" ""
	java ""
	php ""
	python ""
	idl ""
      end

      operation 337794 "GraphicBufferAllocator"
	private explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${throw}{
  ${body}}
"
	
	
	
	
      end

      operation 337922 "~GraphicBufferAllocator"
	private explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${virtual}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${throw}{
  ${body}}
"
	
	
	
	
      end

      attribute 268674 "mAllocDev"
	private explicit_type "alloc_device_t"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end
    end

    class 202242 "typedef7"
      visibility package stereotype "typedef" explicit_base_type "Singleton<GraphicBufferAllocator>"
      cpp_decl "${comment}typedef ${type} ${name};
"
      java_decl ""
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
    end

    class 202626 "typedef8"
      visibility package stereotype "typedef" explicit_base_type "Singleton<GraphicBufferMapper>"
      cpp_decl "${comment}typedef ${type} ${name};
"
      java_decl ""
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
    end

    class 202754 "tmat44"
      visibility package 
      nformals 1
      formal name "T" type "typename" explicit_default_value ""
        explicit_extends ""
      nactuals 12
      actual class class_ref 202882 // TVecUnaryOperators
        rank 0 value class_ref 202754 // tmat44
      actual class class_ref 202882 // TVecUnaryOperators
        rank 1 explicit_value "T"
      actual class class_ref 203010 // TVecComparisonOperators
        rank 0 value class_ref 202754 // tmat44
      actual class class_ref 203010 // TVecComparisonOperators
        rank 1 explicit_value "T"
      actual class class_ref 203138 // TVecAddOperators
        rank 0 value class_ref 202754 // tmat44
      actual class class_ref 203138 // TVecAddOperators
        rank 1 explicit_value "T"
      actual class class_ref 203266 // TMatProductOperators
        rank 0 value class_ref 202754 // tmat44
      actual class class_ref 203266 // TMatProductOperators
        rank 1 explicit_value "T"
      actual class class_ref 203394 // TMatSquareFunctions
        rank 0 value class_ref 202754 // tmat44
      actual class class_ref 203394 // TMatSquareFunctions
        rank 1 explicit_value "T"
      actual class class_ref 203522 // TMatDebug
        rank 0 value class_ref 202754 // tmat44
      actual class class_ref 203522 // TMatDebug
        rank 1 explicit_value "T"
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl ""
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment " -------------------------------------------------------------------------------------"
      classrelation 184706 // <realization>
	relation 184706 -_-|>
	  stereotype "bind"
	  a public
	    cpp default "${type}"
	    classrelation_ref 184706 // <realization>
	  b parent class_ref 202882 // TVecUnaryOperators
      end

      classrelation 184834 // <realization>
	relation 184834 -_-|>
	  stereotype "bind"
	  a public
	    cpp default "${type}"
	    classrelation_ref 184834 // <realization>
	  b parent class_ref 203010 // TVecComparisonOperators
      end

      classrelation 184962 // <realization>
	relation 184962 -_-|>
	  stereotype "bind"
	  a public
	    cpp default "${type}"
	    classrelation_ref 184962 // <realization>
	  b parent class_ref 203138 // TVecAddOperators
      end

      classrelation 185090 // <realization>
	relation 185090 -_-|>
	  stereotype "bind"
	  a public
	    cpp default "${type}"
	    classrelation_ref 185090 // <realization>
	  b parent class_ref 203266 // TMatProductOperators
      end

      classrelation 185218 // <realization>
	relation 185218 -_-|>
	  stereotype "bind"
	  a public
	    cpp default "${type}"
	    classrelation_ref 185218 // <realization>
	  b parent class_ref 203394 // TMatSquareFunctions
      end

      classrelation 185346 // <realization>
	relation 185346 -_-|>
	  stereotype "bind"
	  a public
	    cpp default "${type}"
	    classrelation_ref 185346 // <realization>
	  b parent class_ref 203522 // TMatDebug
      end

      class 203650 "no_init"
	visibility package stereotype "enum"
	cpp_decl "${comment}enum ${name} {
${items}
};
"
	java_decl ""
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	attribute 268930 "NO_INIT"
	  public type class_ref 203650 // no_init
	  cpp_decl "  ${name}${value},${comment}"
	  java_decl ""
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end
      end

      class 203778 "value_type"
	visibility package stereotype "typedef" explicit_base_type "T"
	cpp_decl "${comment}typedef ${type} ${name};
"
	java_decl ""
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
      end

      class 203906 "reference"
	visibility package stereotype "typedef" explicit_base_type "T"
	cpp_decl "${comment}typedef ${type}&  ${name};
"
	java_decl ""
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
      end

      class 204034 "const_reference"
	visibility package stereotype "typedef" explicit_base_type "T"
	cpp_decl "${comment}typedef ${type}const&  ${name};
"
	java_decl ""
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
      end

      class 204162 "size_type"
	visibility package stereotype "typedef" explicit_base_type "size_t"
	cpp_decl "${comment}typedef ${type} ${name};
"
	java_decl ""
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
      end

      class 204290 "col_type"
	visibility package stereotype "typedef" explicit_base_type "tvec4<T>"
	cpp_decl "${comment}typedef ${type} ${name};
"
	java_decl ""
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
      end

      class 204418 "row_type"
	visibility package stereotype "typedef" explicit_base_type "tvec4<T>"
	cpp_decl "${comment}typedef ${type} ${name};
"
	java_decl ""
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
      end

      class 204546 "anonymous6"
	visibility package stereotype "enum"
	cpp_decl "${comment}enum  {
${items}
};
"
	java_decl ""
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	attribute 269058 "COL_SIZE"
	  public type class_ref 204546 // anonymous6
	  init_value " col_type::SIZE "
	  cpp_decl "  ${name}${value},${comment}"
	  java_decl ""
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end
      end

      operation 339586 "col_size"
	class_operation cpp_inline public explicit_return_type "size_t"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} { return COL_SIZE; };
"
	
	
	
	
      end

      class 204674 "anonymous7"
	visibility package stereotype "enum"
	cpp_decl "${comment}enum  {
${items}
};
"
	java_decl ""
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	attribute 269186 "ROW_SIZE"
	  public type class_ref 204674 // anonymous7
	  init_value " row_type::SIZE "
	  cpp_decl "  ${name}${value},${comment}"
	  java_decl ""
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end
      end

      operation 339714 "row_size"
	class_operation cpp_inline public explicit_return_type "size_t"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} { return ROW_SIZE; };
"
	
	
	
	
      end

      operation 339842 "size"
	class_operation cpp_inline public explicit_return_type "size_t"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} { return row_size(); };
"
	
	
	
	
      end

      classrelation 185474 // mValue (<directional composition>)
	relation 185474 *-->
	  a role_name "mValue" multiplicity "[ROW_SIZE]" private
	    comment " for TVec*<>

     *  <--  N columns  -->
     *
     *  a00 a10 a20 ... aN0    ^
     *  a01 a11 a21 ... aN1    |
     *  a02 a12 a22 ... aN2  M rows
     *  ...                    |
     *  a0M a1M a2M ... aNM    v
     *
     *  COL_SIZE = M
     *  ROW_SIZE = N
     *  m[0] = [a00 a01 a02 ... a01M]
     "
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${multiplicity}${value};
"
	    classrelation_ref 185474 // mValue (<directional composition>)
	  b parent class_ref 204290 // col_type
      end

      operation 339970 "operator []"
	const cpp_inline public return_type class_ref 204290 // col_type
	nparams 1
	  param in name "i" explicit_type "size_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}const ${type} & ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract} { return mValue[i]; };
"
	
	
	
	
	comment " array access"
      end

      operation 340098 "operator []"
	cpp_inline public return_type class_ref 204290 // col_type
	nparams 1
	  param in name "i" explicit_type "size_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} & ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract} { return mValue[i]; };
"
	
	
	
	
      end

      operation 340226 "asArray"
	const cpp_inline public explicit_return_type "T"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}const ${type} * ${name}${(}${)}${const}${volatile}${throw}${abstract} { return &mValue[0][0]; };
"
	
	
	
	
      end

      operation 340354 "tmat44"
	cpp_inline public explicit_return_type ""
	nparams 1
	  param in name "" type class_ref 203650 // no_init
	cpp_decl "    ${comment}${inline}explicit ${name}${(}${t0} ${p0}${v0}${)}${volatile}${throw} { };
"
	
	
	
	
	comment " -----------------------------------------------------------------------
 we don't provide copy-ctor and operator= on purpose
 because we want the compiler generated versions

     *  constructors
     
 leaves object uninitialized. use with caution."
      end

      operation 340482 "tmat44"
	preserve_cpp_body_indent public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "// ----------------------------------------------------------------------------------------
// Constructors
// ----------------------------------------------------------------------------------------
//
// * Since the matrix code could become pretty big quickly, we don't inline most
// * operations.

${inline}${class}::${name}${(}${)}${throw}{
  ${body}}
"
	
	
	
	
	comment " initialize to identity"
      end

      operation 340610 "tmat44"
	stereotype "template"
	preserve_cpp_body_indent public explicit_return_type ""
	nparams 1
	  param in name "v" explicit_type "U"
	cpp_decl "    ${comment}template<typename U>
  ${inline}explicit ${name}${(}${t0} ${p0}${v0}${)}${volatile}${throw};
"
	cpp_def "${comment}template<typename U>
${inline}${class}::${name}${(}${t0} ${p0}${)}${throw}{
  ${body}}
"
	
	
	
	
	comment " initialize to Identity*scalar."
      end

      operation 340738 "tmat44"
	stereotype "template"
	preserve_cpp_body_indent public explicit_return_type ""
	nparams 1
	  param in name "v" explicit_type "tvec4<U>"
	cpp_decl "    ${comment}template<typename U>
  ${inline}explicit ${name}${(}const ${t0} & ${p0}${v0}${)}${volatile}${throw};
"
	cpp_def "${comment}template<typename U>
${inline}${class}::${name}${(}const ${t0} & ${p0}${)}${throw}{
  ${body}}
"
	
	
	
	
	comment " sets the diagonal to the passed vector"
      end

      operation 340866 "tmat44"
	stereotype "template"
	preserve_cpp_body_indent public explicit_return_type ""
	nparams 1
	  param in name "rhs" explicit_type "tmat44<U>"
	cpp_decl "    ${comment}template<typename U>
  ${inline}explicit ${name}${(}const ${t0} & ${p0}${v0}${)}${volatile}${throw};
"
	cpp_def "${comment}template<typename U>
${inline}${class}::${name}${(}const ${t0} & ${p0}${)}${throw}{
  ${body}}
"
	
	
	
	
	comment " construct from another matrix of the same size"
      end

      operation 340994 "tmat44"
	stereotype "template"
	preserve_cpp_body_indent public explicit_return_type ""
	nparams 4
	  param in name "v0" explicit_type "tvec4<A>"
	  param in name "v1" explicit_type "tvec4<B>"
	  param in name "v2" explicit_type "tvec4<C>"
	  param in name "v3" explicit_type "tvec4<D>"
	cpp_decl "    ${comment}template<typename Atemplate<typename Btemplate<typename Ctemplate<typename D>
  ${inline}${name}${(}const ${t0} & ${p0}${v0}, const ${t1} & ${p1}${v1}, const ${t2} & ${p2}${v2}, const ${t3} & ${p3}${v3}${)}${volatile}${throw};
"
	cpp_def "${comment}template<typename Atemplate<typename Btemplate<typename Ctemplate<typename D>
${inline}${class}::${name}${(}const ${t0} & ${p0}, const ${t1} & ${p1}, const ${t2} & ${p2}, const ${t3} & ${p3}${)}${throw}{
  ${body}}
"
	
	
	
	
	comment " construct from 4 column vectors"
      end

      operation 341122 "tmat44"
	stereotype "template"
	preserve_cpp_body_indent public explicit_return_type ""
	nparams 16
	  param in name "m00" explicit_type "A"
	  param in name "m01" explicit_type "B"
	  param in name "m02" explicit_type "C"
	  param in name "m03" explicit_type "D"
	  param in name "m10" explicit_type "E"
	  param in name "m11" explicit_type "F"
	  param in name "m12" explicit_type "G"
	  param in name "m13" explicit_type "H"
	  param in name "m20" explicit_type "I"
	  param in name "m21" explicit_type "J"
	  param in name "m22" explicit_type "K"
	  param in name "m23" explicit_type "L"
	  param in name "m30" explicit_type "M"
	  param in name "m31" explicit_type "N"
	  param in name "m32" explicit_type "O"
	  param in name "m33" explicit_type "P"
	cpp_decl "    ${comment}template<typename Atemplate<typename Btemplate<typename Ctemplate<typename Dtemplate<typename Etemplate<typename Ftemplate<typename Gtemplate<typename Htemplate<typename Itemplate<typename Jtemplate<typename Ktemplate<typename Ltemplate<typename Mtemplate<typename Ntemplate<typename Otemplate<typename P>
  ${inline}${name}${(}${t0} ${p0}${v0}, ${t1} ${p1}${v1}, ${t2} ${p2}${v2}, ${t3} ${p3}${v3}, ${t4} ${p4}${v4}, ${t5} ${p5}${v5}, ${t6} ${p6}${v6}, ${t7} ${p7}${v7}, ${t8} ${p8}${v8}, ${t9} ${p9}${v9}, ${t10} ${p10}${v10}, ${t11} ${p11}${v11}, ${t12} ${p12}${v12}, ${t13} ${p13}${v13}, ${t14} ${p14}${v14}, ${t15} ${p15}${v15}${)}${volatile}${throw};
"
	cpp_def "${comment}template<typename Atemplate<typename Btemplate<typename Ctemplate<typename Dtemplate<typename Etemplate<typename Ftemplate<typename Gtemplate<typename Htemplate<typename Itemplate<typename Jtemplate<typename Ktemplate<typename Ltemplate<typename Mtemplate<typename Ntemplate<typename Otemplate<typename P>
${inline}${class}::${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}, ${t6} ${p6}, ${t7} ${p7}, ${t8} ${p8}, ${t9} ${p9}, ${t10} ${p10}, ${t11} ${p11}, ${t12} ${p12}, ${t13} ${p13}, ${t14} ${p14}, ${t15} ${p15}${)}${throw}{
  ${body}}
"
	
	
	
	
	comment " construct from 16 scalars"
      end

      operation 341250 "tmat44"
	stereotype "template"
	preserve_cpp_body_indent public explicit_return_type ""
	nparams 1
	  param in name "rawArray" explicit_type "U"
	cpp_decl "    ${comment}template<typename U>
  ${inline}explicit ${name}${(}const ${t0} * ${p0}${v0}${)}${volatile}${throw};
"
	cpp_def "${comment}template<typename U>
${inline}${class}::${name}${(}const ${t0} * ${p0}${)}${throw}{
  ${body}}
"
	
	
	
	
	comment " construct from a C array"
      end

      operation 341378 "ortho"
	class_operation preserve_cpp_body_indent public return_type class_ref 202754 // tmat44
	nparams 6
	  param in name "left" explicit_type "T"
	  param in name "right" explicit_type "T"
	  param in name "bottom" explicit_type "T"
	  param in name "top" explicit_type "T"
	  param in name "near" explicit_type "T"
	  param in name "far" explicit_type "T"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} ${p1}${v1}, ${t2} ${p2}${v2}, ${t3} ${p3}${v3}, ${t4} ${p4}${v4}, ${t5} ${p5}${v5}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "// ----------------------------------------------------------------------------------------
// Helpers
// ----------------------------------------------------------------------------------------

${inline}${type} ${class}::${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}${)}${const}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment "     *  helpers"
      end

      operation 341506 "frustum"
	class_operation preserve_cpp_body_indent public return_type class_ref 202754 // tmat44
	nparams 6
	  param in name "left" explicit_type "T"
	  param in name "right" explicit_type "T"
	  param in name "bottom" explicit_type "T"
	  param in name "top" explicit_type "T"
	  param in name "near" explicit_type "T"
	  param in name "far" explicit_type "T"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} ${p1}${v1}, ${t2} ${p2}${v2}, ${t3} ${p3}${v3}, ${t4} ${p4}${v4}, ${t5} ${p5}${v5}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}${)}${const}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 341634 "lookAt"
	stereotype "template"
	class_operation preserve_cpp_body_indent public return_type class_ref 202754 // tmat44
	nparams 3
	  param in name "eye" explicit_type "tvec3<A>"
	  param in name "center" explicit_type "tvec3<B>"
	  param in name "up" explicit_type "tvec3<C>"
	cpp_decl "    ${comment}template<typename Atemplate<typename Btemplate<typename C>
  ${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}, const ${t1} & ${p1}${v1}, const ${t2} & ${p2}${v2}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}template<typename Atemplate<typename Btemplate<typename C>
${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}, const ${t1} & ${p1}, const ${t2} & ${p2}${)}${const}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 341762 "translate"
	stereotype "template"
	class_operation preserve_cpp_body_indent public return_type class_ref 202754 // tmat44
	nparams 1
	  param in name "t" explicit_type "tvec4<A>"
	cpp_decl "    ${comment}template<typename A>
  ${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}template<typename A>
${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 341890 "scale"
	stereotype "template"
	class_operation preserve_cpp_body_indent public return_type class_ref 202754 // tmat44
	nparams 1
	  param in name "s" explicit_type "tvec4<A>"
	cpp_decl "    ${comment}template<typename A>
  ${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}template<typename A>
${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 342018 "rotate"
	stereotype "template"
	class_operation preserve_cpp_body_indent public return_type class_ref 202754 // tmat44
	nparams 2
	  param in name "radian" explicit_type "A"
	  param in name "about" explicit_type "tvec3<B>"
	cpp_decl "    ${comment}template<typename Atemplate<typename B>
  ${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, const ${t1} & ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}template<typename Atemplate<typename B>
${inline}${type} ${class}::${name}${(}${t0} ${p0}, const ${t1} & ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end
    end

    class 202882 "TVecUnaryOperators"
      visibility package 
      nformals 2
      formal name "BASE" type "template<typename T> class" explicit_default_value ""
        explicit_extends ""
      formal name "T" type "typename" explicit_default_value ""
        explicit_extends ""
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl ""
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment " * TVecUnaryOperators implements unary operators on a vector of type BASE<T>.
 *
 * BASE only needs to implement operator[] and size().
 * By simply inheriting from TVecUnaryOperators<BASE, T> BASE will automatically
 * get all the functionality here.
 *
 * These operators are implemented as friend functions of TVecUnaryOperators<BASE, T>"
      operation 359682 "operator ++"
	cpp_inline public explicit_return_type "BASE<T>"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} & ${name}${(}${)}${const}${volatile}${throw}${abstract} {
        BASE<T>& rhs = static_cast<BASE<T>&>(*this);
        for (size_t i=0 ; i<BASE<T>::size() ; i++) {
            ++rhs[i];
        }
        return rhs;
    };
"
	
	
	
	
      end

      operation 359810 "operator --"
	cpp_inline public explicit_return_type "BASE<T>"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} & ${name}${(}${)}${const}${volatile}${throw}${abstract} {
        BASE<T>& rhs = static_cast<BASE<T>&>(*this);
        for (size_t i=0 ; i<BASE<T>::size() ; i++) {
            --rhs[i];
        }
        return rhs;
    };
"
	
	
	
	
      end

      operation 359938 "operator -"
	const cpp_inline public explicit_return_type "BASE<T>"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} {
        BASE<T> r(BASE<T>::NO_INIT);
        BASE<T> const& rv(static_cast<BASE<T> const&>(*this));
        for (size_t i=0 ; i<BASE<T>::size() ; i++) {
            r[i] = -rv[i];
        }
        return r;
    };
"
	
	
	
	
      end
    end

    class 203010 "TVecComparisonOperators"
      visibility package 
      nformals 2
      formal name "BASE" type "template<typename T> class" explicit_default_value ""
        explicit_extends ""
      formal name "T" type "typename" explicit_default_value ""
        explicit_extends ""
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl ""
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment " * TVecComparisonOperators implements relational/comparison operators
 * on a vector of type BASE<T>.
 *
 * BASE only needs to implement operator[] and size().
 * By simply inheriting from TVecComparisonOperators<BASE, T> BASE will automatically
 * get all the functionality here."
    end

    class 203138 "TVecAddOperators"
      visibility package 
      nformals 2
      formal name "BASE" type "template<typename T> class" explicit_default_value ""
        explicit_extends ""
      formal name "T" type "typename" explicit_default_value ""
        explicit_extends ""
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl ""
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment " * TVec{Add|Product}Operators implements basic arithmetic and basic compound assignments
 * operators on a vector of type BASE<T>.
 *
 * BASE only needs to implement operator[] and size().
 * By simply inheriting from TVec{Add|Product}Operators<BASE, T> BASE will automatically
 * get all the functionality here."
      operation 358658 "operator +="
	stereotype "template"
	cpp_inline public explicit_return_type "BASE<T>"
	nparams 1
	  param in name "v" explicit_type "BASE<OTHER>"
	cpp_decl "    ${comment}template<typename OTHER>
  ${friend}${static}${inline}${virtual}${type} & ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract} {
        BASE<T>& rhs = static_cast<BASE<T>&>(*this);
        for (size_t i=0 ; i<BASE<T>::size() ; i++) {
            rhs[i] += v[i];
        }
        return rhs;
    };
"
	
	
	
	
	comment " compound assignment from a another vector of the same size but different
     * element type."
      end

      operation 358786 "operator -="
	stereotype "template"
	cpp_inline public explicit_return_type "BASE<T>"
	nparams 1
	  param in name "v" explicit_type "BASE<OTHER>"
	cpp_decl "    ${comment}template<typename OTHER>
  ${friend}${static}${inline}${virtual}${type} & ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract} {
        BASE<T>& rhs = static_cast<BASE<T>&>(*this);
        for (size_t i=0 ; i<BASE<T>::size() ; i++) {
            rhs[i] -= v[i];
        }
        return rhs;
    };
"
	
	
	
	
      end

      operation 358914 "operator +="
	cpp_inline public explicit_return_type "BASE<T>"
	nparams 1
	  param in name "v" explicit_type "BASE<T>"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} & ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract} {
        BASE<T>& rhs = static_cast<BASE<T>&>(*this);
        for (size_t i=0 ; i<BASE<T>::size() ; i++) {
            rhs[i] += v[i];
        }
        return rhs;
    };
"
	
	
	
	
	comment " compound assignment from a another vector of the same type.
     * These operators can be used for implicit conversion and  handle operations
     * like \"vector *= scalar\" by letting the compiler implicitly convert a scalar
     * to a vector (assuming the BASE<T> allows it)."
      end

      operation 359042 "operator -="
	cpp_inline public explicit_return_type "BASE<T>"
	nparams 1
	  param in name "v" explicit_type "BASE<T>"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} & ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract} {
        BASE<T>& rhs = static_cast<BASE<T>&>(*this);
        for (size_t i=0 ; i<BASE<T>::size() ; i++) {
            rhs[i] -= v[i];
        }
        return rhs;
    };
"
	
	
	
	
      end
    end

    class 203266 "TMatProductOperators"
      visibility package 
      nformals 2
      formal name "BASE" type "template<typename T> class" explicit_default_value ""
        explicit_extends ""
      formal name "T" type "typename" explicit_default_value ""
        explicit_extends ""
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl ""
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment " namespace matrix
 -------------------------------------------------------------------------------------

 * TMatProductOperators implements basic arithmetic and basic compound assignments
 * operators on a vector of type BASE<T>.
 *
 * BASE only needs to implement operator[] and size().
 * By simply inheriting from TMatProductOperators<BASE, T> BASE will automatically
 * get all the functionality here."
      operation 357890 "operator *="
	cpp_inline public explicit_return_type "BASE<T>"
	nparams 1
	  param in name "v" explicit_type "T"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} & ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract} {
        BASE<T>& lhs(static_cast< BASE<T>& >(*this));
        for (size_t r=0 ; r<lhs.row_size() ; r++) {
            lhs[r] *= v;
        }
        return lhs;
    };
"
	
	
	
	
	comment " multiply by a scalar"
      end

      operation 358018 "operator /="
	cpp_inline public explicit_return_type "BASE<T>"
	nparams 1
	  param in name "v" explicit_type "T"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} & ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract} {
        BASE<T>& lhs(static_cast< BASE<T>& >(*this));
        for (size_t r=0 ; r<lhs.row_size() ; r++) {
            lhs[r] /= v;
        }
        return lhs;
    };
"
	
	
	
	
	comment " divide by a scalar"
      end
    end

    class 203394 "TMatSquareFunctions"
      visibility package 
      nformals 2
      formal name "BASE" type "template<typename U> class" explicit_default_value ""
        explicit_extends ""
      formal name "T" type "typename" explicit_default_value ""
        explicit_extends ""
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl ""
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment " * TMatSquareFunctions implements functions on a matrix of type BASE<T>.
 *
 * BASE only needs to implement:
 *  - operator[]
 *  - col_type
 *  - row_type
 *  - COL_SIZE
 *  - ROW_SIZE
 *
 * By simply inheriting from TMatSquareFunctions<BASE, T> BASE will automatically
 * get all the functionality here."
    end

    class 203522 "TMatDebug"
      visibility package 
      nformals 2
      formal name "BASE" type "template<typename T> class" explicit_default_value ""
        explicit_extends ""
      formal name "T" type "typename" explicit_default_value ""
        explicit_extends ""
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl ""
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      operation 358146 "asString"
	const cpp_inline public explicit_return_type "String8"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} {
        return matrix::asString( static_cast< const BASE<T>& >(*this) );
    };
"
	
	
	
	
      end
    end

    class 204802 "tvec4"
      visibility package 
      nformals 1
      formal name "T" type "typename" explicit_default_value ""
        explicit_extends ""
      nactuals 10
      actual class class_ref 206466 // TVecProductOperators
        rank 0 value class_ref 204802 // tvec4
      actual class class_ref 206466 // TVecProductOperators
        rank 1 explicit_value "T"
      actual class class_ref 203138 // TVecAddOperators
        rank 0 value class_ref 204802 // tvec4
      actual class class_ref 203138 // TVecAddOperators
        rank 1 explicit_value "T"
      actual class class_ref 202882 // TVecUnaryOperators
        rank 0 value class_ref 204802 // tvec4
      actual class class_ref 202882 // TVecUnaryOperators
        rank 1 explicit_value "T"
      actual class class_ref 203010 // TVecComparisonOperators
        rank 0 value class_ref 204802 // tvec4
      actual class class_ref 203010 // TVecComparisonOperators
        rank 1 explicit_value "T"
      actual class class_ref 206594 // TVecFunctions
        rank 0 value class_ref 204802 // tvec4
      actual class class_ref 206594 // TVecFunctions
        rank 1 explicit_value "T"
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl ""
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment " -------------------------------------------------------------------------------------"
      classrelation 187650 // <realization>
	relation 187650 -_-|>
	  stereotype "bind"
	  a public
	    cpp default "${type}"
	    classrelation_ref 187650 // <realization>
	  b parent class_ref 206466 // TVecProductOperators
      end

      classrelation 187778 // <realization>
	relation 187778 -_-|>
	  stereotype "bind"
	  a public
	    cpp default "${type}"
	    classrelation_ref 187778 // <realization>
	  b parent class_ref 203138 // TVecAddOperators
      end

      classrelation 187906 // <realization>
	relation 187906 -_-|>
	  stereotype "bind"
	  a public
	    cpp default "${type}"
	    classrelation_ref 187906 // <realization>
	  b parent class_ref 202882 // TVecUnaryOperators
      end

      classrelation 188034 // <realization>
	relation 188034 -_-|>
	  stereotype "bind"
	  a public
	    cpp default "${type}"
	    classrelation_ref 188034 // <realization>
	  b parent class_ref 203010 // TVecComparisonOperators
      end

      classrelation 188162 // <realization>
	relation 188162 -_-|>
	  stereotype "bind"
	  a public
	    cpp default "${type}"
	    classrelation_ref 188162 // <realization>
	  b parent class_ref 206594 // TVecFunctions
      end

      class 208386 "no_init"
	visibility package stereotype "enum"
	cpp_decl "${comment}enum ${name} {
${items}
};
"
	java_decl ""
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	attribute 272002 "NO_INIT"
	  public type class_ref 208386 // no_init
	  cpp_decl "  ${name}${value},${comment}"
	  java_decl ""
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end
      end

      class 208514 "value_type"
	visibility package stereotype "typedef" explicit_base_type "T"
	cpp_decl "${comment}typedef ${type} ${name};
"
	java_decl ""
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
      end

      class 208642 "reference"
	visibility package stereotype "typedef" explicit_base_type "T"
	cpp_decl "${comment}typedef ${type}&  ${name};
"
	java_decl ""
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
      end

      class 208770 "const_reference"
	visibility package stereotype "typedef" explicit_base_type "T"
	cpp_decl "${comment}typedef ${type}const&  ${name};
"
	java_decl ""
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
      end

      class 208898 "size_type"
	visibility package stereotype "typedef" explicit_base_type "size_t"
	cpp_decl "${comment}typedef ${type} ${name};
"
	java_decl ""
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
      end
    end

    class 204930 "tvec3"
      visibility package 
      nformals 1
      formal name "T" type "typename" explicit_default_value ""
        explicit_extends ""
      nactuals 10
      actual class class_ref 206466 // TVecProductOperators
        rank 0 value class_ref 204930 // tvec3
      actual class class_ref 206466 // TVecProductOperators
        rank 1 explicit_value "T"
      actual class class_ref 203138 // TVecAddOperators
        rank 0 value class_ref 204930 // tvec3
      actual class class_ref 203138 // TVecAddOperators
        rank 1 explicit_value "T"
      actual class class_ref 202882 // TVecUnaryOperators
        rank 0 value class_ref 204930 // tvec3
      actual class class_ref 202882 // TVecUnaryOperators
        rank 1 explicit_value "T"
      actual class class_ref 203010 // TVecComparisonOperators
        rank 0 value class_ref 204930 // tvec3
      actual class class_ref 203010 // TVecComparisonOperators
        rank 1 explicit_value "T"
      actual class class_ref 206594 // TVecFunctions
        rank 0 value class_ref 204930 // tvec3
      actual class class_ref 206594 // TVecFunctions
        rank 1 explicit_value "T"
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl ""
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment " -------------------------------------------------------------------------------------"
      classrelation 187010 // <realization>
	relation 187010 -_-|>
	  stereotype "bind"
	  a public
	    cpp default "${type}"
	    classrelation_ref 187010 // <realization>
	  b parent class_ref 206466 // TVecProductOperators
      end

      classrelation 187138 // <realization>
	relation 187138 -_-|>
	  stereotype "bind"
	  a public
	    cpp default "${type}"
	    classrelation_ref 187138 // <realization>
	  b parent class_ref 203138 // TVecAddOperators
      end

      classrelation 187266 // <realization>
	relation 187266 -_-|>
	  stereotype "bind"
	  a public
	    cpp default "${type}"
	    classrelation_ref 187266 // <realization>
	  b parent class_ref 202882 // TVecUnaryOperators
      end

      classrelation 187394 // <realization>
	relation 187394 -_-|>
	  stereotype "bind"
	  a public
	    cpp default "${type}"
	    classrelation_ref 187394 // <realization>
	  b parent class_ref 203010 // TVecComparisonOperators
      end

      classrelation 187522 // <realization>
	relation 187522 -_-|>
	  stereotype "bind"
	  a public
	    cpp default "${type}"
	    classrelation_ref 187522 // <realization>
	  b parent class_ref 206594 // TVecFunctions
      end

      class 207618 "no_init"
	visibility package stereotype "enum"
	cpp_decl "${comment}enum ${name} {
${items}
};
"
	java_decl ""
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	attribute 271746 "NO_INIT"
	  public type class_ref 207618 // no_init
	  cpp_decl "  ${name}${value},${comment}"
	  java_decl ""
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end
      end

      class 207746 "value_type"
	visibility package stereotype "typedef" explicit_base_type "T"
	cpp_decl "${comment}typedef ${type} ${name};
"
	java_decl ""
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
      end

      class 207874 "reference"
	visibility package stereotype "typedef" explicit_base_type "T"
	cpp_decl "${comment}typedef ${type}&  ${name};
"
	java_decl ""
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
      end

      class 208002 "const_reference"
	visibility package stereotype "typedef" explicit_base_type "T"
	cpp_decl "${comment}typedef ${type}const&  ${name};
"
	java_decl ""
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
      end

      class 208130 "size_type"
	visibility package stereotype "typedef" explicit_base_type "size_t"
	cpp_decl "${comment}typedef ${type} ${name};
"
	java_decl ""
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
      end
    end

    class 205058 "mat4"
      visibility package stereotype "typedef" explicit_base_type "tmat44<float>"
      cpp_decl "${comment}typedef ${type} ${name};
"
      java_decl ""
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment " ----------------------------------------------------------------------------------------"
    end

    class 205314 "Point"
      visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl ""
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      classrelation 185602 // <generalisation>
	relation 185602 ---|>
	  a public
	    cpp default "${type}"
	    classrelation_ref 185602 // <generalisation>
	  b parent class_ref 205442 // typedef9
      end

      attribute 271234 "x"
	public explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 271362 "y"
	public explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      operation 342146 "Point"
	cpp_inline public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw} {
    };
"
	
	
	
	
	comment " we don't provide copy-ctor and operator= on purpose
 because we want the compiler generated versions
 Default constructor doesn't initialize the Point"
      end

      operation 342274 "Point"
	cpp_inline public explicit_return_type ""
	nparams 2
	  param in name "x" explicit_type "int"
	  param in name "y" explicit_type "int"
	cpp_decl "    ${comment}${inline}${name}${(}${t0} ${p0}${v0}, ${t1} ${p1}${v1}${)}${volatile}${throw} : x(x), y(y) {
    };
"
	
	
	
	
      end

      operation 342402 "operator =="
	const cpp_inline public explicit_return_type "bool"
	nparams 1
	  param in name "rhs" type class_ref 205314 // Point
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract} {
        return (x == rhs.x) && (y == rhs.y);
    };
"
	
	
	
	
      end

      operation 342530 "operator !="
	const cpp_inline public explicit_return_type "bool"
	nparams 1
	  param in name "rhs" type class_ref 205314 // Point
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract} {
        return !operator == (rhs);
    };
"
	
	
	
	
      end

      operation 342658 "isOrigin"
	const cpp_inline public explicit_return_type "bool"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} {
        return !(x|y);
    };
"
	
	
	
	
      end

      operation 342786 "operator <"
	const cpp_inline public explicit_return_type "bool"
	nparams 1
	  param in name "rhs" type class_ref 205314 // Point
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract} {
        return y<rhs.y || (y==rhs.y && x<rhs.x);
    };
"
	
	
	
	
	comment " operator < defines an order which allows to use points in sorted
 vectors."
      end

      operation 342914 "operator -"
	cpp_inline public return_type class_ref 205314 // Point
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} & ${name}${(}${)}${const}${volatile}${throw}${abstract} {
        x = -x;
        y = -y;
        return *this;
    };
"
	
	
	
	
      end

      operation 343042 "operator +="
	cpp_inline public return_type class_ref 205314 // Point
	nparams 1
	  param in name "rhs" type class_ref 205314 // Point
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} & ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract} {
        x += rhs.x;
        y += rhs.y;
        return *this;
    };
"
	
	
	
	
      end

      operation 343170 "operator -="
	cpp_inline public return_type class_ref 205314 // Point
	nparams 1
	  param in name "rhs" type class_ref 205314 // Point
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} & ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract} {
        x -= rhs.x;
        y -= rhs.y;
        return *this;
    };
"
	
	
	
	
      end

      operation 343298 "operator +"
	const cpp_inline public return_type class_ref 205314 // Point
	nparams 1
	  param in name "rhs" type class_ref 205314 // Point
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}const ${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract} {
        const Point result(x+rhs.x, y+rhs.y);
        return result;
    };
"
	
	
	
	
      end

      operation 343426 "operator -"
	const cpp_inline public return_type class_ref 205314 // Point
	nparams 1
	  param in name "rhs" type class_ref 205314 // Point
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}const ${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract} {
        const Point result(x-rhs.x, y-rhs.y);
        return result;
    };
"
	
	
	
	
      end
    end

    class 205442 "typedef9"
      visibility package stereotype "typedef" explicit_base_type "LightFlattenablePod<Point>"
      cpp_decl "${comment}typedef ${type} ${name};
"
      java_decl ""
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
    end

    class 205570 "typedef10"
      visibility package stereotype "typedef" explicit_base_type "ARect"
      cpp_decl "${comment}typedef ${type} ${name};
"
      java_decl ""
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
    end

    class 205698 "typedef11"
      visibility package stereotype "typedef" explicit_base_type "LightFlattenablePod<Rect>"
      cpp_decl "${comment}typedef ${type} ${name};
"
      java_decl ""
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
    end

    class 205954 "Region"
      visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl ""
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment " ---------------------------------------------------------------------------"
      classrelation 185986 // <generalisation>
	relation 185986 ---|>
	  a public
	    cpp default "${type}"
	    classrelation_ref 185986 // <generalisation>
	  b parent class_ref 206082 // typedef12
      end

      operation 348034 "Region"
	public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${throw}{
  ${body}}
"
	
	
	
	
      end

      operation 348162 "Region"
	public explicit_return_type ""
	nparams 1
	  param in name "rhs" type class_ref 205954 // Region
	cpp_decl "    ${comment}${inline}${name}${(}const ${t0} & ${p0}${v0}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}const ${t0} & ${p0}${)}${throw}{
  ${body}}
"
	
	
	
	
      end

      operation 348290 "Region"
	public explicit_return_type ""
	nparams 1
	  param in name "rhs" type class_ref 200962 // Rect
	cpp_decl "    ${comment}${inline}explicit ${name}${(}const ${t0} & ${p0}${v0}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}const ${t0} & ${p0}${)}${throw}{
  ${body}}
"
	
	
	
	
      end

      operation 348418 "~Region"
	public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${virtual}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${throw}{
  ${body}}
"
	
	
	
	
      end

      operation 348546 "createTJunctionFreeRegion"
	class_operation public return_type class_ref 205954 // Region
	nparams 1
	  param in name "r" type class_ref 205954 // Region
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 348674 "operator ="
	public return_type class_ref 205954 // Region
	nparams 1
	  param in name "rhs" type class_ref 205954 // Region
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} & ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} & ${class}::${name}${(}const ${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 348802 "isEmpty"
	const cpp_inline public explicit_return_type "bool"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} { return getBounds().isEmpty(); };
"
	
	
	
	
      end

      operation 348930 "isRect"
	const cpp_inline public explicit_return_type "bool"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} { return mStorage.size() == 1; };
"
	
	
	
	
      end

      operation 349058 "getBounds"
	const cpp_inline public return_type class_ref 200962 // Rect
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} { return mStorage[mStorage.size() - 1]; };
"
	
	
	
	
      end

      operation 349186 "bounds"
	const cpp_inline public return_type class_ref 200962 // Rect
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} { return getBounds(); };
"
	
	
	
	
      end

      operation 349314 "contains"
	const public explicit_return_type "bool"
	nparams 1
	  param in name "point" type class_ref 205314 // Point
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 349442 "contains"
	const public explicit_return_type "bool"
	nparams 2
	  param in name "x" explicit_type "int"
	  param in name "y" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 349570 "makeBoundsSelf"
	public return_type class_ref 205954 // Region
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} & ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} & ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment " the region becomes its bounds"
      end

      operation 349698 "clear"
	public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 349826 "set"
	public explicit_return_type "void"
	nparams 1
	  param in name "r" type class_ref 200962 // Rect
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 349954 "set"
	public explicit_return_type "void"
	nparams 2
	  param in name "w" explicit_type "uint32_t"
	  param in name "h" explicit_type "uint32_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 350082 "orSelf"
	public return_type class_ref 205954 // Region
	nparams 1
	  param in name "rhs" type class_ref 200962 // Rect
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} & ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} & ${class}::${name}${(}const ${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 350210 "xorSelf"
	public return_type class_ref 205954 // Region
	nparams 1
	  param in name "rhs" type class_ref 200962 // Rect
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} & ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} & ${class}::${name}${(}const ${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 350338 "andSelf"
	public return_type class_ref 205954 // Region
	nparams 1
	  param in name "rhs" type class_ref 200962 // Rect
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} & ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} & ${class}::${name}${(}const ${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 350466 "subtractSelf"
	public return_type class_ref 205954 // Region
	nparams 1
	  param in name "rhs" type class_ref 200962 // Rect
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} & ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} & ${class}::${name}${(}const ${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 350594 "orSelf"
	public return_type class_ref 205954 // Region
	nparams 1
	  param in name "rhs" type class_ref 205954 // Region
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} & ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} & ${class}::${name}${(}const ${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment " boolean operators, applied on this"
      end

      operation 350722 "xorSelf"
	public return_type class_ref 205954 // Region
	nparams 1
	  param in name "rhs" type class_ref 205954 // Region
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} & ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} & ${class}::${name}${(}const ${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 350850 "andSelf"
	public return_type class_ref 205954 // Region
	nparams 1
	  param in name "rhs" type class_ref 205954 // Region
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} & ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} & ${class}::${name}${(}const ${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 350978 "subtractSelf"
	public return_type class_ref 205954 // Region
	nparams 1
	  param in name "rhs" type class_ref 205954 // Region
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} & ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} & ${class}::${name}${(}const ${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 351106 "merge"
	const public return_type class_ref 205954 // Region
	nparams 1
	  param in name "rhs" type class_ref 200962 // Rect
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}const ${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}const ${type} ${class}::${name}${(}const ${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment " boolean operators"
      end

      operation 351234 "mergeExclusive"
	const public return_type class_ref 205954 // Region
	nparams 1
	  param in name "rhs" type class_ref 200962 // Rect
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}const ${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}const ${type} ${class}::${name}${(}const ${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 351362 "intersect"
	const public return_type class_ref 205954 // Region
	nparams 1
	  param in name "rhs" type class_ref 200962 // Rect
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}const ${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}const ${type} ${class}::${name}${(}const ${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 351490 "subtract"
	const public return_type class_ref 205954 // Region
	nparams 1
	  param in name "rhs" type class_ref 200962 // Rect
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}const ${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}const ${type} ${class}::${name}${(}const ${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 351618 "merge"
	const public return_type class_ref 205954 // Region
	nparams 1
	  param in name "rhs" type class_ref 205954 // Region
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}const ${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}const ${type} ${class}::${name}${(}const ${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment " boolean operators"
      end

      operation 351746 "mergeExclusive"
	const public return_type class_ref 205954 // Region
	nparams 1
	  param in name "rhs" type class_ref 205954 // Region
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}const ${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}const ${type} ${class}::${name}${(}const ${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 351874 "intersect"
	const public return_type class_ref 205954 // Region
	nparams 1
	  param in name "rhs" type class_ref 205954 // Region
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}const ${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}const ${type} ${class}::${name}${(}const ${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 352002 "subtract"
	const public return_type class_ref 205954 // Region
	nparams 1
	  param in name "rhs" type class_ref 205954 // Region
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}const ${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}const ${type} ${class}::${name}${(}const ${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 352130 "translateSelf"
	public return_type class_ref 205954 // Region
	nparams 2
	  param in name "dx" explicit_type "int"
	  param in name "dy" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} & ${name}${(}${t0} ${p0}${v0}, ${t1} ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} & ${class}::${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment " these translate rhs first"
      end

      operation 352258 "orSelf"
	public return_type class_ref 205954 // Region
	nparams 3
	  param in name "rhs" type class_ref 205954 // Region
	  param in name "dx" explicit_type "int"
	  param in name "dy" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} & ${name}${(}const ${t0} & ${p0}${v0}, ${t1} ${p1}${v1}, ${t2} ${p2}${v2}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} & ${class}::${name}${(}const ${t0} & ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${const}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 352386 "xorSelf"
	public return_type class_ref 205954 // Region
	nparams 3
	  param in name "rhs" type class_ref 205954 // Region
	  param in name "dx" explicit_type "int"
	  param in name "dy" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} & ${name}${(}const ${t0} & ${p0}${v0}, ${t1} ${p1}${v1}, ${t2} ${p2}${v2}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} & ${class}::${name}${(}const ${t0} & ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${const}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 352514 "andSelf"
	public return_type class_ref 205954 // Region
	nparams 3
	  param in name "rhs" type class_ref 205954 // Region
	  param in name "dx" explicit_type "int"
	  param in name "dy" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} & ${name}${(}const ${t0} & ${p0}${v0}, ${t1} ${p1}${v1}, ${t2} ${p2}${v2}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} & ${class}::${name}${(}const ${t0} & ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${const}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 352642 "subtractSelf"
	public return_type class_ref 205954 // Region
	nparams 3
	  param in name "rhs" type class_ref 205954 // Region
	  param in name "dx" explicit_type "int"
	  param in name "dy" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} & ${name}${(}const ${t0} & ${p0}${v0}, ${t1} ${p1}${v1}, ${t2} ${p2}${v2}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} & ${class}::${name}${(}const ${t0} & ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${const}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 352770 "translate"
	const public return_type class_ref 205954 // Region
	nparams 2
	  param in name "dx" explicit_type "int"
	  param in name "dy" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}const ${type} ${name}${(}${t0} ${p0}${v0}, ${t1} ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}const ${type} ${class}::${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment " these translate rhs first"
      end

      operation 352898 "merge"
	const public return_type class_ref 205954 // Region
	nparams 3
	  param in name "rhs" type class_ref 205954 // Region
	  param in name "dx" explicit_type "int"
	  param in name "dy" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}const ${type} ${name}${(}const ${t0} & ${p0}${v0}, ${t1} ${p1}${v1}, ${t2} ${p2}${v2}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}const ${type} ${class}::${name}${(}const ${t0} & ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${const}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 353026 "mergeExclusive"
	const public return_type class_ref 205954 // Region
	nparams 3
	  param in name "rhs" type class_ref 205954 // Region
	  param in name "dx" explicit_type "int"
	  param in name "dy" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}const ${type} ${name}${(}const ${t0} & ${p0}${v0}, ${t1} ${p1}${v1}, ${t2} ${p2}${v2}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}const ${type} ${class}::${name}${(}const ${t0} & ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${const}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 353154 "intersect"
	const public return_type class_ref 205954 // Region
	nparams 3
	  param in name "rhs" type class_ref 205954 // Region
	  param in name "dx" explicit_type "int"
	  param in name "dy" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}const ${type} ${name}${(}const ${t0} & ${p0}${v0}, ${t1} ${p1}${v1}, ${t2} ${p2}${v2}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}const ${type} ${class}::${name}${(}const ${t0} & ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${const}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 353282 "subtract"
	const public return_type class_ref 205954 // Region
	nparams 3
	  param in name "rhs" type class_ref 205954 // Region
	  param in name "dx" explicit_type "int"
	  param in name "dy" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}const ${type} ${name}${(}const ${t0} & ${p0}${v0}, ${t1} ${p1}${v1}, ${t2} ${p2}${v2}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}const ${type} ${class}::${name}${(}const ${t0} & ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${const}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 353410 "operator |"
	preserve_cpp_body_indent const cpp_inline public return_type class_ref 205954 // Region
	nparams 1
	  param in name "rhs" type class_ref 205954 // Region
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}const ${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}const ${type} ${class}::${name}${(}const ${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment " convenience operators overloads"
      end

      operation 353538 "operator ^"
	preserve_cpp_body_indent const cpp_inline public return_type class_ref 205954 // Region
	nparams 1
	  param in name "rhs" type class_ref 205954 // Region
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}const ${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}const ${type} ${class}::${name}${(}const ${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 353666 "operator &"
	preserve_cpp_body_indent const cpp_inline public return_type class_ref 205954 // Region
	nparams 1
	  param in name "rhs" type class_ref 205954 // Region
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}const ${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}const ${type} ${class}::${name}${(}const ${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 353794 "operator -"
	preserve_cpp_body_indent const cpp_inline public return_type class_ref 205954 // Region
	nparams 1
	  param in name "rhs" type class_ref 205954 // Region
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}const ${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}const ${type} ${class}::${name}${(}const ${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 353922 "operator +"
	preserve_cpp_body_indent const cpp_inline public return_type class_ref 205954 // Region
	nparams 1
	  param in name "pt" type class_ref 205314 // Point
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}const ${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}const ${type} ${class}::${name}${(}const ${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 354050 "operator |="
	preserve_cpp_body_indent cpp_inline public return_type class_ref 205954 // Region
	nparams 1
	  param in name "rhs" type class_ref 205954 // Region
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} & ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} & ${class}::${name}${(}const ${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 354178 "operator ^="
	preserve_cpp_body_indent cpp_inline public return_type class_ref 205954 // Region
	nparams 1
	  param in name "rhs" type class_ref 205954 // Region
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} & ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} & ${class}::${name}${(}const ${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 354306 "operator &="
	preserve_cpp_body_indent cpp_inline public return_type class_ref 205954 // Region
	nparams 1
	  param in name "rhs" type class_ref 205954 // Region
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} & ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} & ${class}::${name}${(}const ${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 354434 "operator -="
	preserve_cpp_body_indent cpp_inline public return_type class_ref 205954 // Region
	nparams 1
	  param in name "rhs" type class_ref 205954 // Region
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} & ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} & ${class}::${name}${(}const ${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 354562 "operator +="
	preserve_cpp_body_indent cpp_inline public return_type class_ref 205954 // Region
	nparams 1
	  param in name "pt" type class_ref 205314 // Point
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} & ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} & ${class}::${name}${(}const ${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 354690 "isTriviallyEqual"
	const public explicit_return_type "bool"
	nparams 1
	  param in name "region" type class_ref 205954 // Region
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment " returns true if the regions share the same underlying storage"
      end

      class 206210 "const_iterator"
	visibility package stereotype "typedef" base_type class_ref 200962 // Rect
	cpp_decl "${comment}typedef ${type}const*  ${name};
"
	java_decl ""
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	classrelation 186114 // <dependency>
	  relation 186114 -_->
	    a default
	      cpp default "#include in source"
	      classrelation_ref 186114 // <dependency>
	    b parent class_ref 200962 // Rect
	end
      end

      operation 354818 "begin"
	const public return_type class_ref 206210 // const_iterator
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 354946 "end"
	const public return_type class_ref 206210 // const_iterator
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 355074 "getArray"
	const public return_type class_ref 200962 // Rect
	nparams 1
	  param inout name "count" explicit_type "size_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}const ${type} * ${name}${(}${t0} * ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}const ${type} * ${class}::${name}${(}${t0} * ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment " returns an array of rect which has the same life-time has this
 Region object."
      end

      operation 355202 "getSharedBuffer"
	const public explicit_return_type "SharedBuffer"
	nparams 1
	  param inout name "count" explicit_type "size_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}const ${type} * ${name}${(}${t0} * ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}const ${type} * ${class}::${name}${(}${t0} * ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment " returns a SharedBuffer as well as the number of rects.
 ownership is transfered to the caller.
 the caller must call SharedBuffer::release() to free the memory."
      end

      operation 355330 "addRectUnchecked"
	public explicit_return_type "void"
	nparams 4
	  param in name "l" explicit_type "int"
	  param in name "t" explicit_type "int"
	  param in name "r" explicit_type "int"
	  param in name "b" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} ${p1}${v1}, ${t2} ${p2}${v2}, ${t3} ${p3}${v3}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${const}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment " no user serviceable parts here... 
 add a rectangle to the internal list. This rectangle must
 be sorted in Y and X and must not make the region invalid."
      end

      operation 355458 "isFixedSize"
	const cpp_inline public explicit_return_type "bool"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} { return false; };
"
	
	
	
	
      end

      operation 355586 "getFlattenedSize"
	const public explicit_return_type "size_t"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 355714 "flatten"
	const public explicit_return_type "status_t"
	nparams 2
	  param inout name "buffer" explicit_type "void"
	  param in name "size" explicit_type "size_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}, ${t1} ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} * ${p0}, ${t1} ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 355842 "unflatten"
	public explicit_return_type "status_t"
	nparams 2
	  param in name "buffer" explicit_type "void"
	  param in name "size" explicit_type "size_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} * ${p0}${v0}, ${t1} ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} * ${p0}, ${t1} ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 355970 "dump"
	const public explicit_return_type "void"
	nparams 3
	  param inout name "out" explicit_type "String8"
	  param in name "what" explicit_type "char"
	  param in name "flags" explicit_type "uint32_t"
	    defaultvalue "0"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} & ${p0}${v0}, const ${t1} * ${p1}${v1}, ${t2} ${p2}${v2}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} & ${p0}, const ${t1} * ${p1}, ${t2} ${p2}${)}${const}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 356098 "dump"
	const public explicit_return_type "void"
	nparams 2
	  param in name "what" explicit_type "char"
	  param in name "flags" explicit_type "uint32_t"
	    defaultvalue "0"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} * ${p0}${v0}, ${t1} ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} * ${p0}, ${t1} ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      extra_member 150274 "rasterizer"
	
	stereotype "class"
	cpp "    class rasterizer;
" ""
	java ""
	php ""
	python ""
	idl ""
      end

      extra_member 150402 "friend"
	
	cpp "    friend class rasterizer;" ""
	java ""
	php ""
	python ""
	idl ""
      end

      operation 356226 "operationSelf"
	private return_type class_ref 205954 // Region
	nparams 2
	  param in name "r" type class_ref 200962 // Rect
	  param in name "op" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} & ${name}${(}const ${t0} & ${p0}${v0}, ${t1} ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} & ${class}::${name}${(}const ${t0} & ${p0}, ${t1} ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 356354 "operationSelf"
	private return_type class_ref 205954 // Region
	nparams 2
	  param in name "r" type class_ref 205954 // Region
	  param in name "op" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} & ${name}${(}const ${t0} & ${p0}${v0}, ${t1} ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} & ${class}::${name}${(}const ${t0} & ${p0}, ${t1} ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 356482 "operationSelf"
	private return_type class_ref 205954 // Region
	nparams 4
	  param in name "r" type class_ref 205954 // Region
	  param in name "dx" explicit_type "int"
	  param in name "dy" explicit_type "int"
	  param in name "op" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} & ${name}${(}const ${t0} & ${p0}${v0}, ${t1} ${p1}${v1}, ${t2} ${p2}${v2}, ${t3} ${p3}${v3}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} & ${class}::${name}${(}const ${t0} & ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${const}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 356610 "operation"
	const private return_type class_ref 205954 // Region
	nparams 2
	  param in name "rhs" type class_ref 200962 // Rect
	  param in name "op" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}const ${type} ${name}${(}const ${t0} & ${p0}${v0}, ${t1} ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}const ${type} ${class}::${name}${(}const ${t0} & ${p0}, ${t1} ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 356738 "operation"
	const private return_type class_ref 205954 // Region
	nparams 2
	  param in name "rhs" type class_ref 205954 // Region
	  param in name "op" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}const ${type} ${name}${(}const ${t0} & ${p0}${v0}, ${t1} ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}const ${type} ${class}::${name}${(}const ${t0} & ${p0}, ${t1} ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 356866 "operation"
	const private return_type class_ref 205954 // Region
	nparams 4
	  param in name "rhs" type class_ref 205954 // Region
	  param in name "dx" explicit_type "int"
	  param in name "dy" explicit_type "int"
	  param in name "op" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}const ${type} ${name}${(}const ${t0} & ${p0}${v0}, ${t1} ${p1}${v1}, ${t2} ${p2}${v2}, ${t3} ${p3}${v3}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}const ${type} ${class}::${name}${(}const ${t0} & ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${const}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 356994 "boolean_operation"
	class_operation private explicit_return_type "void"
	nparams 6
	  param in name "op" explicit_type "int"
	  param inout name "dst" type class_ref 205954 // Region
	  param in name "lhs" type class_ref 205954 // Region
	  param in name "rhs" type class_ref 205954 // Region
	  param in name "dx" explicit_type "int"
	  param in name "dy" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} & ${p1}${v1}, const ${t2} & ${p2}${v2}, const ${t3} & ${p3}${v3}, ${t4} ${p4}${v4}, ${t5} ${p5}${v5}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}, ${t1} & ${p1}, const ${t2} & ${p2}, const ${t3} & ${p3}, ${t4} ${p4}, ${t5} ${p5}${)}${const}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 357122 "boolean_operation"
	class_operation private explicit_return_type "void"
	nparams 6
	  param in name "op" explicit_type "int"
	  param inout name "dst" type class_ref 205954 // Region
	  param in name "lhs" type class_ref 205954 // Region
	  param in name "rhs" type class_ref 200962 // Rect
	  param in name "dx" explicit_type "int"
	  param in name "dy" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} & ${p1}${v1}, const ${t2} & ${p2}${v2}, const ${t3} & ${p3}${v3}, ${t4} ${p4}${v4}, ${t5} ${p5}${v5}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}, ${t1} & ${p1}, const ${t2} & ${p2}, const ${t3} & ${p3}, ${t4} ${p4}, ${t5} ${p5}${)}${const}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 357250 "boolean_operation"
	class_operation private explicit_return_type "void"
	nparams 4
	  param in name "op" explicit_type "int"
	  param inout name "dst" type class_ref 205954 // Region
	  param in name "lhs" type class_ref 205954 // Region
	  param in name "rhs" type class_ref 205954 // Region
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} & ${p1}${v1}, const ${t2} & ${p2}${v2}, const ${t3} & ${p3}${v3}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}, ${t1} & ${p1}, const ${t2} & ${p2}, const ${t3} & ${p3}${)}${const}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 357378 "boolean_operation"
	class_operation private explicit_return_type "void"
	nparams 4
	  param in name "op" explicit_type "int"
	  param inout name "dst" type class_ref 205954 // Region
	  param in name "lhs" type class_ref 205954 // Region
	  param in name "rhs" type class_ref 200962 // Rect
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} & ${p1}${v1}, const ${t2} & ${p2}${v2}, const ${t3} & ${p3}${v3}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}, ${t1} & ${p1}, const ${t2} & ${p2}, const ${t3} & ${p3}${)}${const}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 357506 "translate"
	class_operation private explicit_return_type "void"
	nparams 3
	  param inout name "reg" type class_ref 205954 // Region
	  param in name "dx" explicit_type "int"
	  param in name "dy" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} & ${p0}${v0}, ${t1} ${p1}${v1}, ${t2} ${p2}${v2}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} & ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${const}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 357634 "translate"
	class_operation private explicit_return_type "void"
	nparams 4
	  param inout name "dst" type class_ref 205954 // Region
	  param in name "reg" type class_ref 205954 // Region
	  param in name "dx" explicit_type "int"
	  param in name "dy" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} & ${p0}${v0}, const ${t1} & ${p1}${v1}, ${t2} ${p2}${v2}, ${t3} ${p3}${v3}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} & ${p0}, const ${t1} & ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${const}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 357762 "validate"
	class_operation private explicit_return_type "bool"
	nparams 3
	  param in name "reg" type class_ref 205954 // Region
	  param in name "name" explicit_type "char"
	  param in name "silent" explicit_type "bool"
	    defaultvalue "false"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}, const ${t1} * ${p1}${v1}, ${t2} ${p2}${v2}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}, const ${t1} * ${p1}, ${t2} ${p2}${)}${const}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      classrelation 186242 // mStorage (<directional composition>)
	relation 186242 *-->
	  stereotype "Vector"
	  a role_name "mStorage" private
	    comment " mStorage is a (manually) sorted array of Rects describing the region
 with an extra Rect as the last element which is set to the
 bounds of the region. However, if the region is
 a simple Rect then mStorage contains only that rect."
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${stereotype}<${type}> ${name}${value};
"
	    classrelation_ref 186242 // mStorage (<directional composition>)
	  b parent class_ref 200962 // Rect
      end
    end

    class 206082 "typedef12"
      visibility package stereotype "typedef" explicit_base_type "LightFlattenable<Region>"
      cpp_decl "${comment}typedef ${type} ${name};
"
      java_decl ""
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
    end

    class 206338 "Impersonator"
      visibility package stereotype "struct"
      nformals 1
      formal name "TYPE" type "typename" explicit_default_value ""
        explicit_extends ""
      cpp_decl "${comment}${template}struct ${name}${inherit} {
${members}};
${inlines}
"
      java_decl ""
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment " -------------------------------------------------------------------------------------

 * No user serviceable parts here.
 *
 * Don't use this file directly, instead include ui/vec{2|3|4}.h
 

 * This class casts itself into anything and assign itself from anything!
 * Use with caution!"
      operation 358274 "operator ="
	cpp_inline public return_type class_ref 206338 // Impersonator
	nparams 1
	  param in name "rhs" explicit_type "TYPE"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} & ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract} {
        reinterpret_cast<TYPE&>(*this) = rhs;
        return *this;
    };
"
	
	
	
	
      end

      operation 358402 "operator TYPE&"
	cpp_inline public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${name}${(}${)}${const}${volatile}${throw}${abstract} {
        return reinterpret_cast<TYPE&>(*this);
    };
"
	
	
	
	
      end

      operation 358530 "operator TYPEconst&"
	const cpp_inline public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${name}${(}${)}${const}${volatile}${throw}${abstract} {
        return reinterpret_cast<TYPE const&>(*this);
    };
"
	
	
	
	
      end
    end

    class 206466 "TVecProductOperators"
      visibility package 
      nformals 2
      formal name "BASE" type "template<typename T> class" explicit_default_value ""
        explicit_extends ""
      formal name "T" type "typename" explicit_default_value ""
        explicit_extends ""
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl ""
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      operation 359170 "operator *="
	stereotype "template"
	cpp_inline public explicit_return_type "BASE<T>"
	nparams 1
	  param in name "v" explicit_type "BASE<OTHER>"
	cpp_decl "    ${comment}template<typename OTHER>
  ${friend}${static}${inline}${virtual}${type} & ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract} {
        BASE<T>& rhs = static_cast<BASE<T>&>(*this);
        for (size_t i=0 ; i<BASE<T>::size() ; i++) {
            rhs[i] *= v[i];
        }
        return rhs;
    };
"
	
	
	
	
	comment " compound assignment from a another vector of the same size but different
     * element type."
      end

      operation 359298 "operator /="
	stereotype "template"
	cpp_inline public explicit_return_type "BASE<T>"
	nparams 1
	  param in name "v" explicit_type "BASE<OTHER>"
	cpp_decl "    ${comment}template<typename OTHER>
  ${friend}${static}${inline}${virtual}${type} & ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract} {
        BASE<T>& rhs = static_cast<BASE<T>&>(*this);
        for (size_t i=0 ; i<BASE<T>::size() ; i++) {
            rhs[i] /= v[i];
        }
        return rhs;
    };
"
	
	
	
	
      end

      operation 359426 "operator *="
	cpp_inline public explicit_return_type "BASE<T>"
	nparams 1
	  param in name "v" explicit_type "BASE<T>"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} & ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract} {
        BASE<T>& rhs = static_cast<BASE<T>&>(*this);
        for (size_t i=0 ; i<BASE<T>::size() ; i++) {
            rhs[i] *= v[i];
        }
        return rhs;
    };
"
	
	
	
	
	comment " compound assignment from a another vector of the same type.
     * These operators can be used for implicit conversion and  handle operations
     * like \"vector *= scalar\" by letting the compiler implicitly convert a scalar
     * to a vector (assuming the BASE<T> allows it)."
      end

      operation 359554 "operator /="
	cpp_inline public explicit_return_type "BASE<T>"
	nparams 1
	  param in name "v" explicit_type "BASE<T>"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} & ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract} {
        BASE<T>& rhs = static_cast<BASE<T>&>(*this);
        for (size_t i=0 ; i<BASE<T>::size() ; i++) {
            rhs[i] /= v[i];
        }
        return rhs;
    };
"
	
	
	
	
      end
    end

    class 206594 "TVecFunctions"
      visibility package 
      nformals 2
      formal name "BASE" type "template<typename T> class" explicit_default_value ""
        explicit_extends ""
      formal name "T" type "typename" explicit_default_value ""
        explicit_extends ""
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl ""
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment " * TVecFunctions implements functions on a vector of type BASE<T>.
 *
 * BASE only needs to implement operator[] and size().
 * By simply inheriting from TVecFunctions<BASE, T> BASE will automatically
 * get all the functionality here."
    end

    class 206722 "tvec2"
      visibility package 
      nformals 1
      formal name "T" type "typename" explicit_default_value ""
        explicit_extends ""
      nactuals 10
      actual class class_ref 206466 // TVecProductOperators
        rank 0 value class_ref 206722 // tvec2
      actual class class_ref 206466 // TVecProductOperators
        rank 1 explicit_value "T"
      actual class class_ref 203138 // TVecAddOperators
        rank 0 value class_ref 206722 // tvec2
      actual class class_ref 203138 // TVecAddOperators
        rank 1 explicit_value "T"
      actual class class_ref 202882 // TVecUnaryOperators
        rank 0 value class_ref 206722 // tvec2
      actual class class_ref 202882 // TVecUnaryOperators
        rank 1 explicit_value "T"
      actual class class_ref 203010 // TVecComparisonOperators
        rank 0 value class_ref 206722 // tvec2
      actual class class_ref 203010 // TVecComparisonOperators
        rank 1 explicit_value "T"
      actual class class_ref 206594 // TVecFunctions
        rank 0 value class_ref 206722 // tvec2
      actual class class_ref 206594 // TVecFunctions
        rank 1 explicit_value "T"
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl ""
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment " -------------------------------------------------------------------------------------"
      classrelation 186370 // <realization>
	relation 186370 -_-|>
	  stereotype "bind"
	  a public
	    cpp default "${type}"
	    classrelation_ref 186370 // <realization>
	  b parent class_ref 206466 // TVecProductOperators
      end

      classrelation 186498 // <realization>
	relation 186498 -_-|>
	  stereotype "bind"
	  a public
	    cpp default "${type}"
	    classrelation_ref 186498 // <realization>
	  b parent class_ref 203138 // TVecAddOperators
      end

      classrelation 186626 // <realization>
	relation 186626 -_-|>
	  stereotype "bind"
	  a public
	    cpp default "${type}"
	    classrelation_ref 186626 // <realization>
	  b parent class_ref 202882 // TVecUnaryOperators
      end

      classrelation 186754 // <realization>
	relation 186754 -_-|>
	  stereotype "bind"
	  a public
	    cpp default "${type}"
	    classrelation_ref 186754 // <realization>
	  b parent class_ref 203010 // TVecComparisonOperators
      end

      classrelation 186882 // <realization>
	relation 186882 -_-|>
	  stereotype "bind"
	  a public
	    cpp default "${type}"
	    classrelation_ref 186882 // <realization>
	  b parent class_ref 206594 // TVecFunctions
      end

      class 206850 "no_init"
	visibility package stereotype "enum"
	cpp_decl "${comment}enum ${name} {
${items}
};
"
	java_decl ""
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	attribute 271490 "NO_INIT"
	  public type class_ref 206850 // no_init
	  cpp_decl "  ${name}${value},${comment}"
	  java_decl ""
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end
      end

      class 206978 "value_type"
	visibility package stereotype "typedef" explicit_base_type "T"
	cpp_decl "${comment}typedef ${type} ${name};
"
	java_decl ""
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
      end

      class 207106 "reference"
	visibility package stereotype "typedef" explicit_base_type "T"
	cpp_decl "${comment}typedef ${type}&  ${name};
"
	java_decl ""
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
      end

      class 207234 "const_reference"
	visibility package stereotype "typedef" explicit_base_type "T"
	cpp_decl "${comment}typedef ${type}const&  ${name};
"
	java_decl ""
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
      end

      class 207362 "size_type"
	visibility package stereotype "typedef" explicit_base_type "size_t"
	cpp_decl "${comment}typedef ${type} ${name};
"
	java_decl ""
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
      end
    end
  end

  deploymentview 149506 "android"
    //deployment diagram settings
    package_name_in_tab default show_context default write_horizontally default auto_label_position default draw_all_relations default shadow default
    draw_component_as_icon default show_component_req_prov default show_component_rea default show_stereotype_properties default
    artifact 166530 "ANativeObjectBase"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      associated_classes
	class_ref 199554 // typedef1
	class_ref 199682 // typedef2
	class_ref 199426 // ANativeObjectBase
      end
    end

    artifact 166658 "DisplayInfo"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      associated_classes
	class_ref 199938 // DisplayInfo
      end
    end

    artifact 166914 "DisplayStatInfo"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      associated_classes
	class_ref 200194 // DisplayStatInfo
      end
    end

    artifact 167042 "Fence"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      associated_classes
	class_ref 200450 // typedef3
	class_ref 200578 // typedef4
	class_ref 200322 // Fence
      end
    end

    artifact 167170 "FramebufferNativeWindow"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      associated_classes
	class_ref 200834 // FramebufferNativeWindow
      end
    end

    artifact 167298 "FrameStats"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      associated_classes
	class_ref 201218 // typedef5
	class_ref 201090 // FrameStats
      end
    end

    artifact 167426 "GraphicBuffer"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      associated_classes
	class_ref 201474 // typedef6
	class_ref 201346 // GraphicBuffer
      end
    end

    artifact 167554 "GraphicBufferAllocator"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      associated_classes
	class_ref 202242 // typedef7
	class_ref 202114 // GraphicBufferAllocator
      end
    end

    artifact 167682 "GraphicBufferMapper"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      associated_classes
	class_ref 202626 // typedef8
	class_ref 201986 // GraphicBufferMapper
      end
    end

    artifact 167810 "mat4"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      associated_classes
	class_ref 202754 // tmat44
	class_ref 205058 // mat4
      end
    end

    artifact 168066 "PixelFormat"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      associated_classes
	class_ref 201730 // PixelFormat
      end
    end

    artifact 168194 "Point"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      associated_classes
	class_ref 205442 // typedef9
	class_ref 205314 // Point
      end
    end

    artifact 168322 "Rect"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      associated_classes
	class_ref 205570 // typedef10
	class_ref 205698 // typedef11
	class_ref 200962 // Rect
      end
    end

    artifact 168450 "Region"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      associated_classes
	class_ref 206082 // typedef12
	class_ref 205954 // Region
      end
    end

    artifact 168578 "TMatHelpers"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      associated_classes
	class_ref 203266 // TMatProductOperators
	class_ref 203394 // TMatSquareFunctions
	class_ref 203522 // TMatDebug
      end
    end

    artifact 168706 "TVecHelpers"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      associated_classes
	class_ref 206338 // Impersonator
	class_ref 203138 // TVecAddOperators
	class_ref 206466 // TVecProductOperators
	class_ref 202882 // TVecUnaryOperators
	class_ref 203010 // TVecComparisonOperators
	class_ref 206594 // TVecFunctions
      end
    end

    artifact 168834 "vec2"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      associated_classes
	class_ref 206722 // tvec2
      end
    end

    artifact 169090 "vec3"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      associated_classes
	class_ref 204930 // tvec3
      end
    end

    artifact 169346 "vec4"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      associated_classes
	class_ref 204802 // tvec4
      end
    end
  end
end
