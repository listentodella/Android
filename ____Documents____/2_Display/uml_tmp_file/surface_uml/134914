format 76
"surfaceflinger" // surfaceflinger
  revision 2
  modified_by 2 "thisway_diy"
  // class settings
  //class diagram settings
  draw_all_relations default hide_attributes default hide_operations default hide_getset_operations default show_members_full_definition default show_members_visibility default show_members_stereotype default show_members_context default show_members_multiplicity default show_members_initialization default show_attribute_modifiers default member_max_width 0 show_parameter_dir default show_parameter_name default package_name_in_tab default class_drawing_mode default drawing_language default show_context_mode default auto_label_position default show_relation_modifiers default show_relation_visibility default show_infonote default shadow default show_stereotype_properties default
  //use case diagram settings
  package_name_in_tab default show_context default auto_label_position default draw_all_relations default class_drawing_mode default shadow default show_stereotype_properties default
  //sequence diagram settings
  show_full_operations_definition default write_horizontally default class_drawing_mode default drawing_language default draw_all_relations default shadow default show_stereotype_properties default show_class_context_mode default show_msg_context_mode default
  //collaboration diagram settings
  show_full_operations_definition default show_hierarchical_rank default write_horizontally default class_drawing_mode default drawing_language default package_name_in_tab default show_context default show_msg_context default draw_all_relations default shadow default show_stereotype_properties default
  //object diagram settings
   write_horizontally default package_name_in_tab default show_context default auto_label_position default draw_all_relations default shadow default show_stereotype_properties default
  //component diagram settings
  package_name_in_tab default show_context default auto_label_position default draw_all_relations default shadow default
  draw_component_as_icon default show_component_req_prov default show_component_rea default show_stereotype_properties default
  //deployment diagram settings
  package_name_in_tab default show_context default write_horizontally default auto_label_position default draw_all_relations default shadow default
  draw_component_as_icon default show_component_req_prov default show_component_rea default show_stereotype_properties default
  //state diagram settings
  package_name_in_tab default show_context default auto_label_position default write_trans_label_horizontally default show_trans_definition default draw_all_relations default shadow default
  show_activities default region_horizontally default drawing_language default show_stereotype_properties default
  //activity diagram settings
  package_name_in_tab default show_context default show_opaque_action_definition default auto_label_position default write_flow_label_horizontally default draw_all_relations default shadow default
  show_infonote default drawing_language default show_stereotype_properties default
  
  cpp_h_dir "L:/android_projects/uml_tmp_file/surfaceflinger/"
  cpp_src_dir "L:/android_projects/uml_tmp_file/surfaceflinger/"
  cpp_namespace "android"
  classview 134914 "surfaceflinger"
    //class diagram settings
    draw_all_relations default hide_attributes default hide_operations default hide_getset_operations default show_members_full_definition default show_members_visibility default show_members_stereotype default show_members_context default show_members_multiplicity default show_members_initialization default show_attribute_modifiers default member_max_width 0 show_parameter_dir default show_parameter_name default package_name_in_tab default class_drawing_mode default drawing_language default show_context_mode default auto_label_position default show_relation_modifiers default show_relation_visibility default show_infonote default shadow default show_stereotype_properties default
    //collaboration diagram settings
    show_full_operations_definition default show_hierarchical_rank default write_horizontally default class_drawing_mode default drawing_language default package_name_in_tab default show_context default show_msg_context default draw_all_relations default shadow default show_stereotype_properties default
    //object diagram settings
     write_horizontally default package_name_in_tab default show_context default auto_label_position default draw_all_relations default shadow default show_stereotype_properties default
    //sequence diagram settings
    show_full_operations_definition default write_horizontally default class_drawing_mode default drawing_language default draw_all_relations default shadow default show_stereotype_properties default show_class_context_mode default show_msg_context_mode default
    //state diagram settings
    package_name_in_tab default show_context default auto_label_position default write_trans_label_horizontally default show_trans_definition default draw_all_relations default shadow default
    show_activities default region_horizontally default drawing_language default show_stereotype_properties default
    //class settings
    //activity diagram settings
    package_name_in_tab default show_context default show_opaque_action_definition default auto_label_position default write_flow_label_horizontally default draw_all_relations default shadow default
    show_infonote default drawing_language default show_stereotype_properties default
    class 144258 "Barrier"
      visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl ""
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      operation 162562 "Barrier"
	cpp_inline public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw} : state(CLOSED) { };
"
	
	
	
	
      end

      operation 162690 "~Barrier"
	cpp_inline public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${virtual}${name}${(}${)}${volatile}${throw} { };
"
	
	
	
	
      end

      operation 162818 "open"
	cpp_inline public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} {
        Mutex::Autolock _l(lock);
        state = OPENED;
        cv.broadcast();
    };
"
	
	
	
	
	comment " Release any threads waiting at the Barrier.
 Provides release semantics: preceding loads and stores will be visible
 to other threads before they wake up."
      end

      operation 162946 "close"
	cpp_inline public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} {
        Mutex::Autolock _l(lock);
        state = CLOSED;
    };
"
	
	
	
	
	comment " Reset the Barrier, so wait() will block until open() has been called."
      end

      operation 163074 "wait"
	const cpp_inline public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} {
        Mutex::Autolock _l(lock);
        while (state == CLOSED) {
            cv.wait(lock);
        }
    };
"
	
	
	
	
	comment " Wait until the Barrier is OPEN.
 Provides acquire semantics: no subsequent loads or stores will occur
 until wait() returns."
      end

      class 144386 "anonymous1"
	visibility package stereotype "enum"
	cpp_decl "${comment}enum  {
${items}
};
"
	java_decl ""
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	attribute 155650 "OPENED"
	  public type class_ref 144386 // anonymous1
	  cpp_decl "  ${name}${value},${comment}"
	  java_decl ""
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 155778 "CLOSED"
	  public type class_ref 144386 // anonymous1
	  cpp_decl "  ${name}${value},${comment}"
	  java_decl ""
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end
      end

      attribute 155906 "lock"
	private explicit_type "Mutex"
	cpp_mutable cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 156034 "cv"
	private explicit_type "Condition"
	cpp_mutable cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 156162 "state"
	volatile private explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end
    end

    class 144514 "Client"
      visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl ""
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment " ---------------------------------------------------------------------------"
      classrelation 140034 // <generalisation>
	relation 140034 ---|>
	  a public
	    cpp default "${type}"
	    classrelation_ref 140034 // <generalisation>
	  b parent class_ref 144642 // typedef1
      end

      operation 163202 "Client"
	preserve_cpp_body_indent public explicit_return_type ""
	nparams 1
	  param in name "flinger" explicit_type "sp<SurfaceFlinger>"
	cpp_decl "    ${comment}${inline}${name}${(}const ${t0} & ${p0}${v0}${)}${volatile}${throw};
"
	cpp_def "// ---------------------------------------------------------------------------

${inline}${class}::${name}${(}const ${t0} & ${p0}${)}
    : mFlinger(flinger)
${throw}{
  ${body}}
"
	
	
	
	
      end

      operation 163330 "~Client"
	preserve_cpp_body_indent public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${virtual}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${throw}{
  ${body}}
"
	
	
	
	
      end

      operation 163458 "initCheck"
	preserve_cpp_body_indent const public explicit_return_type "status_t"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 163586 "attachLayer"
	preserve_cpp_body_indent public explicit_return_type "void"
	nparams 2
	  param in name "handle" explicit_type "sp<IBinder>"
	  param in name "layer" explicit_type "sp<Layer>"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}, const ${t1} & ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}, const ${t1} & ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment " protected by SurfaceFlinger::mStateLock"
      end

      operation 163714 "detachLayer"
	preserve_cpp_body_indent public explicit_return_type "void"
	nparams 1
	  param in name "layer" type class_ref 144770 // Layer
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} * ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} * ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 163842 "getLayerUser"
	preserve_cpp_body_indent const public explicit_return_type "sp<Layer>"
	nparams 1
	  param in name "handle" explicit_type "sp<IBinder>"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 163970 "createSurface"
	preserve_cpp_body_indent cpp_virtual private explicit_return_type "status_t"
	nparams 7
	  param in name "name" explicit_type "String8"
	  param in name "w" explicit_type "uint32_t"
	  param in name "h" explicit_type "uint32_t"
	  param in name "format" explicit_type "PixelFormat"
	  param in name "flags" explicit_type "uint32_t"
	  param inout name "handle" explicit_type "sp<IBinder>"
	  param inout name "gbp" explicit_type "sp<IGraphicBufferProducer>"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}, ${t1} ${p1}${v1}, ${t2} ${p2}${v2}, ${t3} ${p3}${v3}, ${t4} ${p4}${v4}, ${t5} * ${p5}${v5}, ${t6} * ${p6}${v6}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} * ${p5}, ${t6} * ${p6}${)}${const}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment " ISurfaceComposerClient interface"
      end

      operation 164098 "destroySurface"
	preserve_cpp_body_indent cpp_virtual private explicit_return_type "status_t"
	nparams 1
	  param in name "handle" explicit_type "sp<IBinder>"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 164226 "clearLayerFrameStats"
	preserve_cpp_body_indent const cpp_virtual private explicit_return_type "status_t"
	nparams 1
	  param in name "handle" explicit_type "sp<IBinder>"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 164354 "getLayerFrameStats"
	preserve_cpp_body_indent const cpp_virtual private explicit_return_type "status_t"
	nparams 2
	  param in name "handle" explicit_type "sp<IBinder>"
	  param inout name "outStats" explicit_type "FrameStats"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}, ${t1} * ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}, ${t1} * ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 164482 "onTransact"
	preserve_cpp_body_indent cpp_virtual private explicit_return_type "status_t"
	nparams 4
	  param in name "code" explicit_type "uint32_t"
	  param in name "data" explicit_type "Parcel"
	  param inout name "reply" explicit_type "Parcel"
	  param in name "flags" explicit_type "uint32_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, const ${t1} & ${p1}${v1}, ${t2} * ${p2}${v2}, ${t3} ${p3}${v3}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}, const ${t1} & ${p1}, ${t2} * ${p2}, ${t3} ${p3}${)}${const}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      classrelation 140162 // mFlinger (<directional composition>)
	relation 140162 *-->
	  stereotype "sp"
	  a role_name "mFlinger" private
	    comment " constant"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${stereotype}<${type}> ${name}${value};
"
	    classrelation_ref 140162 // mFlinger (<directional composition>)
	  b parent class_ref 144898 // SurfaceFlinger
      end

      attribute 156290 "mLayers"
	private explicit_type " wp<IBinder>, wp<Layer> "
	stereotype "DefaultKeyedVector"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${stereotype}<${type}> ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " protected by mLock"
      end

      attribute 156418 "mLock"
	private explicit_type "Mutex"
	cpp_mutable cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " thread-safe"
      end
    end

    class 144642 "typedef1"
      visibility package stereotype "typedef" explicit_base_type "BnSurfaceComposerClient"
      cpp_decl "${comment}typedef ${type} ${name};
"
      java_decl ""
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
    end

    class 144770 "Layer"
      visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl ""
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment " ---------------------------------------------------------------------------

 * A new BufferQueue and a new SurfaceFlingerConsumer are created when the
 * Layer is first referenced.
 *
 * This also implements onFrameAvailable(), which notifies SurfaceFlinger
 * that new data has arrived."
      classrelation 142978 // <generalisation>
	relation 142978 ---|>
	  a public
	    cpp default "${type}"
	    classrelation_ref 142978 // <generalisation>
	  b parent class_ref 149762 // ContentsChangedListener
      end

      attribute 167554 "sSequence"
	class_attribute private explicit_type "int32_t"
	init_value "= 1"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 167682 "contentDirty"
	public explicit_type "bool"
	cpp_mutable cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 167810 "visibleRegion"
	public explicit_type "Region"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " regions below are in window-manager space"
      end

      attribute 167938 "coveredRegion"
	public explicit_type "Region"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 168066 "visibleNonTransparentRegion"
	public explicit_type "Region"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 168194 "sequence"
	public explicit_type "int32_t"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Layer serial number.  This gives layers an explicit ordering, so we
 have a stable sort order when their layer stack and Z-order are
 the same."
      end

      class 149890 "anonymous10"
	visibility package stereotype "enum"
	cpp_decl "${comment}enum  {
${items}
};
"
	java_decl ""
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	attribute 168322 "eDontUpdateGeometryState"
	  public type class_ref 149890 // anonymous10
	  init_value " 0x00000001"
	  cpp_decl "  ${name}${value},${comment}"
	  java_decl ""
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 168450 "eVisibleRegion"
	  public type class_ref 149890 // anonymous10
	  init_value " 0x00000002"
	  cpp_decl "  ${name}${value},${comment}"
	  java_decl ""
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end
      end

      class 150018 "Geometry"
	visibility package stereotype "struct"
	cpp_decl "${comment}${template}struct ${name}${inherit} {
${members}};
${inlines}
"
	java_decl ""
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	attribute 168578 "w"
	  public explicit_type "uint32_t"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl ""
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 168706 "h"
	  public explicit_type "uint32_t"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl ""
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 168834 "crop"
	  public explicit_type "Rect"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl ""
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	operation 180482 "operator =="
	  const cpp_inline public explicit_return_type "bool"
	  nparams 1
	    param in name "rhs" type class_ref 150018 // Geometry
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract} {
            return (w == rhs.w && h == rhs.h && crop == rhs.crop);
        };
"
	  
	  
	  
	  
	end

	operation 180610 "operator !="
	  const cpp_inline public explicit_return_type "bool"
	  nparams 1
	    param in name "rhs" type class_ref 150018 // Geometry
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract} {
            return !operator ==(rhs);
        };
"
	  
	  
	  
	  
	end
      end

      class 150146 "State"
	visibility package stereotype "struct"
	cpp_decl "${comment}${template}struct ${name}${inherit} {
${members}};
${inlines}
"
	java_decl ""
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	classrelation 143106 // active (<directional composition>)
	  relation 143106 *-->
	    a role_name "active" public
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	      classrelation_ref 143106 // active (<directional composition>)
	    b parent class_ref 150018 // Geometry
	end

	classrelation 143234 // requested (<directional composition>)
	  relation 143234 *-->
	    a role_name "requested" public
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	      classrelation_ref 143234 // requested (<directional composition>)
	    b parent class_ref 150018 // Geometry
	end

	attribute 168962 "z"
	  public explicit_type "uint32_t"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl ""
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 169090 "layerStack"
	  public explicit_type "uint32_t"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl ""
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 169218 "alpha"
	  public explicit_type "uint8_t"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl ""
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 169346 "flags"
	  public explicit_type "uint8_t"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl ""
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 169474 "reserved"
	  public explicit_type "uint8_t"
	  multiplicity "[2]"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${multiplicity}${value};
"
	  java_decl ""
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 169602 "sequence"
	  public explicit_type "int32_t"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl ""
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  comment " changes when visible regions can change"
	end

	classrelation 143362 // transform (<directional composition>)
	  relation 143362 *-->
	    a role_name "transform" public
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	      classrelation_ref 143362 // transform (<directional composition>)
	    b parent class_ref 146050 // Transform
	end

	attribute 169730 "activeTransparentRegion"
	  public explicit_type "Region"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl ""
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  comment " the transparentRegion hint is a bit special, it's latched only
 when we receive a buffer -- this is because it's \"content\"
 dependent."
	end

	attribute 169858 "requestedTransparentRegion"
	  public explicit_type "Region"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl ""
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end
      end

      operation 180738 "Layer"
	preserve_cpp_body_indent public explicit_return_type ""
	nparams 6
	  param inout name "flinger" type class_ref 144898 // SurfaceFlinger
	  param in name "client" explicit_type "sp<Client>"
	  param in name "name" explicit_type "String8"
	  param in name "w" explicit_type "uint32_t"
	  param in name "h" explicit_type "uint32_t"
	  param in name "flags" explicit_type "uint32_t"
	cpp_decl "    ${comment}${inline}${name}${(}${t0} * ${p0}${v0}, const ${t1} & ${p1}${v1}, const ${t2} & ${p2}${v2}, ${t3} ${p3}${v3}, ${t4} ${p4}${v4}, ${t5} ${p5}${v5}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${t0} * ${p0}, const ${t1} & ${p1}, const ${t2} & ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}${)}
    :   contentDirty(false),
        sequence(uint32_t(android_atomic_inc(&sSequence))),
        mFlinger(flinger),
        mTextureName(-1U),
        mPremultipliedAlpha(true),
        mName(\"unnamed\"),
        mDebug(false),
        mFormat(PIXEL_FORMAT_NONE),
        mTransactionFlags(0),
        mQueuedFrames(0),
        mSidebandStreamChanged(false),
        mCurrentTransform(0),
        mCurrentScalingMode(NATIVE_WINDOW_SCALING_MODE_FREEZE),
        mCurrentOpacity(true),
        mRefreshPending(false),
        mFrameLatencyNeeded(false),
        mFiltering(false),
        mNeedsFiltering(false),
        mMesh(Mesh::TRIANGLE_FAN, 4, 2, 2),
        mSecure(false),
        mProtectedByApp(false),
        mHasSurface(false),
        mClientRef(client),
        mPotentialCursor(false)
${throw}{
  ${body}}
"
	
	
	
	
	comment " -----------------------------------------------------------------------"
      end

      operation 180866 "~Layer"
	preserve_cpp_body_indent cpp_virtual public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${virtual}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${throw}{
  ${body}}
"
	
	
	
	
      end

      operation 180994 "setBuffers"
	preserve_cpp_body_indent public explicit_return_type "status_t"
	nparams 4
	  param in name "w" explicit_type "uint32_t"
	  param in name "h" explicit_type "uint32_t"
	  param in name "format" explicit_type "PixelFormat"
	  param in name "flags" explicit_type "uint32_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} ${p1}${v1}, ${t2} ${p2}${v2}, ${t3} ${p3}${v3}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${const}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment " the this layer's size and format"
      end

      operation 181122 "setPosition"
	preserve_cpp_body_indent public explicit_return_type "bool"
	nparams 2
	  param in name "x" explicit_type "float"
	  param in name "y" explicit_type "float"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment " modify current state"
      end

      operation 181250 "setLayer"
	preserve_cpp_body_indent public explicit_return_type "bool"
	nparams 1
	  param in name "z" explicit_type "uint32_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 181378 "setSize"
	preserve_cpp_body_indent public explicit_return_type "bool"
	nparams 2
	  param in name "w" explicit_type "uint32_t"
	  param in name "h" explicit_type "uint32_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 181506 "setAlpha"
	preserve_cpp_body_indent public explicit_return_type "bool"
	nparams 1
	  param in name "alpha" explicit_type "uint8_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 181634 "setMatrix"
	preserve_cpp_body_indent public explicit_return_type "bool"
	nparams 1
	  param in name "matrix" explicit_type "layer_state_t::matrix22_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 181762 "setTransparentRegionHint"
	preserve_cpp_body_indent public explicit_return_type "bool"
	nparams 1
	  param in name "transparent" explicit_type "Region"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 181890 "setFlags"
	preserve_cpp_body_indent public explicit_return_type "bool"
	nparams 2
	  param in name "flags" explicit_type "uint8_t"
	  param in name "mask" explicit_type "uint8_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 182018 "setCrop"
	preserve_cpp_body_indent public explicit_return_type "bool"
	nparams 1
	  param in name "crop" explicit_type "Rect"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 182146 "setLayerStack"
	preserve_cpp_body_indent public explicit_return_type "bool"
	nparams 1
	  param in name "layerStack" explicit_type "uint32_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 182274 "getTransactionFlags"
	preserve_cpp_body_indent public explicit_return_type "uint32_t"
	nparams 1
	  param in name "flags" explicit_type "uint32_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 182402 "setTransactionFlags"
	preserve_cpp_body_indent public explicit_return_type "uint32_t"
	nparams 1
	  param in name "flags" explicit_type "uint32_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 182530 "computeGeometry"
	preserve_cpp_body_indent const public explicit_return_type "void"
	nparams 3
	  param in name "hw" explicit_type "sp<const DisplayDevice>"
	  param inout name "mesh" type class_ref 150274 // Mesh
	  param in name "useIdentityTransform" explicit_type "bool"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}, ${t1} & ${p1}${v1}, ${t2} ${p2}${v2}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "// ----------------------------------------------------------------------------
// local state
// ----------------------------------------------------------------------------

${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}, ${t1} & ${p1}, ${t2} ${p2}${)}${const}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 182658 "computeBounds"
	preserve_cpp_body_indent const public explicit_return_type "Rect"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 182786 "getHandle"
	preserve_cpp_body_indent public explicit_return_type "sp<IBinder>"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 182914 "getProducer"
	preserve_cpp_body_indent const public explicit_return_type "sp<IGraphicBufferProducer>"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 183042 "getName"
	preserve_cpp_body_indent const public explicit_return_type "String8"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}const ${type} & ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "// ---------------------------------------------------------------------------
// set-up
// ---------------------------------------------------------------------------

${inline}const ${type} & ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 183170 "getTypeId"
	const cpp_virtual cpp_inline public explicit_return_type "char"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}const ${type} * ${name}${(}${)}${const}${volatile}${throw}${abstract} { return \"Layer\"; };
"
	
	
	
	
	comment " -----------------------------------------------------------------------
 Virtuals"
      end

      operation 183298 "isOpaque"
	preserve_cpp_body_indent const cpp_virtual public explicit_return_type "bool"
	nparams 1
	  param in name "s" type class_ref 150146 // State
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment "     * isOpaque - true if this surface is opaque
     *
     * This takes into account the buffer format (i.e. whether or not the
     * pixel format includes an alpha channel) and the \"opaque\" flag set
     * on the layer.  It does not examine the current plane alpha value."
      end

      operation 183426 "isSecure"
	const cpp_virtual cpp_inline public explicit_return_type "bool"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} { return mSecure; };
"
	
	
	
	
	comment "     * isSecure - true if this surface is secure, that is if it prevents
     * screenshots or VNC servers."
      end

      operation 183554 "isProtected"
	preserve_cpp_body_indent const cpp_virtual public explicit_return_type "bool"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment "     * isProtected - true if the layer may contain protected content in the
     * GRALLOC_USAGE_PROTECTED sense."
      end

      operation 183682 "isVisible"
	preserve_cpp_body_indent const cpp_virtual public explicit_return_type "bool"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment "     * isVisible - true if this layer is visible, false otherwise"
      end

      operation 183810 "isFixedSize"
	preserve_cpp_body_indent const cpp_virtual public explicit_return_type "bool"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment "     * isFixedSize - true if content has a fixed size"
      end

      operation 183938 "onDraw"
	preserve_cpp_body_indent const cpp_virtual protected explicit_return_type "void"
	nparams 3
	  param in name "hw" explicit_type "sp<const DisplayDevice>"
	  param in name "clip" explicit_type "Region"
	  param in name "useIdentityTransform" explicit_type "bool"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}, const ${t1} & ${p1}${v1}, ${t2} ${p2}${v2}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}, const ${t1} & ${p1}, ${t2} ${p2}${)}${const}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment "     * onDraw - draws the surface."
      end

      operation 184066 "setGeometry"
	preserve_cpp_body_indent public explicit_return_type "void"
	nparams 2
	  param in name "hw" explicit_type "sp<const DisplayDevice>"
	  param inout name "layer" type class_ref 150402 // HWCLayerInterface
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}, ${t1} & ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}, ${t1} & ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment " -----------------------------------------------------------------------"
      end

      operation 184194 "setPerFrameData"
	preserve_cpp_body_indent public explicit_return_type "void"
	nparams 2
	  param in name "hw" explicit_type "sp<const DisplayDevice>"
	  param inout name "layer" type class_ref 150402 // HWCLayerInterface
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}, ${t1} & ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}, ${t1} & ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 184322 "setAcquireFence"
	preserve_cpp_body_indent public explicit_return_type "void"
	nparams 2
	  param in name "hw" explicit_type "sp<const DisplayDevice>"
	  param inout name "layer" type class_ref 150402 // HWCLayerInterface
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}, ${t1} & ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}, ${t1} & ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 184450 "getPosition"
	preserve_cpp_body_indent public explicit_return_type "Rect"
	nparams 1
	  param in name "hw" explicit_type "sp<const DisplayDevice>"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 184578 "onLayerDisplayed"
	preserve_cpp_body_indent public explicit_return_type "void"
	nparams 2
	  param in name "hw" explicit_type "sp<const DisplayDevice>"
	  param inout name "layer" type class_ref 150402 // HWCLayerInterface
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}, ${t1} * ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "// ---------------------------------------------------------------------------
// callbacks
// ---------------------------------------------------------------------------

${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}, ${t1} * ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment "     * called after page-flip"
      end

      operation 184706 "onPreComposition"
	preserve_cpp_body_indent public explicit_return_type "bool"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "// ----------------------------------------------------------------------------
// pageflip handling...
// ----------------------------------------------------------------------------

${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment "     * called before composition.
     * returns true if the layer has pending updates."
      end

      operation 184834 "onPostComposition"
	preserve_cpp_body_indent public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment "     *  called after composition."
      end

      operation 184962 "draw"
	preserve_cpp_body_indent const public explicit_return_type "void"
	nparams 2
	  param in name "hw" explicit_type "sp<const DisplayDevice>"
	  param in name "clip" explicit_type "Region"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}, const ${t1} & ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "// ---------------------------------------------------------------------------
// drawing...
// ---------------------------------------------------------------------------

${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}, const ${t1} & ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment "     * draw - performs some global clipping optimizations
     * and calls onDraw()."
      end

      operation 185090 "draw"
	preserve_cpp_body_indent const public explicit_return_type "void"
	nparams 2
	  param in name "hw" explicit_type "sp<const DisplayDevice>"
	  param in name "useIdentityTransform" explicit_type "bool"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}, ${t1} ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}, ${t1} ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 185218 "draw"
	preserve_cpp_body_indent const public explicit_return_type "void"
	nparams 1
	  param in name "hw" explicit_type "sp<const DisplayDevice>"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 185346 "doTransaction"
	preserve_cpp_body_indent public explicit_return_type "uint32_t"
	nparams 1
	  param in name "flags" explicit_type "uint32_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "// ----------------------------------------------------------------------------
// transaction
// ----------------------------------------------------------------------------

${inline}${type} ${class}::${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment "     * doTransaction - process the transaction. This is a good place to figure
     * out which attributes of the surface have changed."
      end

      operation 185474 "setVisibleRegion"
	preserve_cpp_body_indent public explicit_return_type "void"
	nparams 1
	  param in name "visibleRegion" explicit_type "Region"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment "     * setVisibleRegion - called to set the new visible region. This gives
     * a chance to update the new visible region or record the fact it changed."
      end

      operation 185602 "setCoveredRegion"
	preserve_cpp_body_indent public explicit_return_type "void"
	nparams 1
	  param in name "coveredRegion" explicit_type "Region"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment "     * setCoveredRegion - called when the covered region changes. The covered
     * region corresponds to any area of the surface that is covered
     * (transparently or not) by another surface."
      end

      operation 185730 "setVisibleNonTransparentRegion"
	preserve_cpp_body_indent public explicit_return_type "void"
	nparams 1
	  param in name "setVisibleNonTransparentRegion" explicit_type "Region"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment "     * setVisibleNonTransparentRegion - called when the visible and
     * non-transparent region changes."
      end

      operation 185858 "latchBuffer"
	preserve_cpp_body_indent public explicit_return_type "Region"
	nparams 1
	  param inout name "recomputeVisibleRegions" explicit_type "bool"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment "     * latchBuffer - called each time the screen is redrawn and returns whether
     * the visible regions need to be recomputed (this is a fairly heavy
     * operation, so this should be set only if needed). Typically this is used
     * to figure out if the content or size of a surface has changed."
      end

      operation 185986 "isPotentialCursor"
	const cpp_inline public explicit_return_type "bool"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} { return mPotentialCursor;};
"
	
	
	
	
      end

      operation 186114 "onRemoved"
	preserve_cpp_body_indent public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "// called with SurfaceFlinger::mStateLock from the drawing thread after
// the layer has been remove from the current state list (and just before
// it's removed from the drawing state list)

${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment "     * called with the state lock when the surface is removed from the
     * current list"
      end

      operation 186242 "updateTransformHint"
	preserve_cpp_body_indent const public explicit_return_type "void"
	nparams 1
	  param in name "hw" explicit_type "sp<const DisplayDevice>"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment " Updates the transform hint in our SurfaceFlingerConsumer to match
 the current orientation of the display device."
      end

      operation 186370 "getContentCrop"
	preserve_cpp_body_indent const public explicit_return_type "Rect"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "// ---------------------------------------------------------------------------
// h/w composer set-up
// ---------------------------------------------------------------------------

${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment "     * returns the rectangle that crops the content of the layer and scales it
     * to the layer's size."
      end

      operation 186498 "hasQueuedFrame"
	const cpp_inline public explicit_return_type "bool"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} { return mQueuedFrames > 0 || mSidebandStreamChanged; };
"
	
	
	
	
	comment "     * Returns if a frame is queued."
      end

      operation 186626 "clearWithOpenGL"
	preserve_cpp_body_indent const public explicit_return_type "void"
	nparams 2
	  param in name "hw" explicit_type "sp<const DisplayDevice>"
	  param in name "clip" explicit_type "Region"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}, const ${t1} & ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}, const ${t1} & ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment " -----------------------------------------------------------------------"
      end

      operation 186754 "setFiltering"
	preserve_cpp_body_indent public explicit_return_type "void"
	nparams 1
	  param in name "filtering" explicit_type "bool"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 186882 "getFiltering"
	preserve_cpp_body_indent const public explicit_return_type "bool"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 187010 "getActiveBuffer"
	const cpp_inline public explicit_return_type "sp<GraphicBuffer>"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}const ${type} & ${name}${(}${)}${const}${volatile}${throw}${abstract} { return mActiveBuffer; };
"
	
	
	
	
	comment " only for debugging"
      end

      operation 187138 "getDrawingState"
	const cpp_inline public return_type class_ref 150146 // State
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}const ${type} & ${name}${(}${)}${const}${volatile}${throw}${abstract} { return mDrawingState; };
"
	
	
	
	
      end

      operation 187266 "getCurrentState"
	const cpp_inline public return_type class_ref 150146 // State
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}const ${type} & ${name}${(}${)}${const}${volatile}${throw}${abstract} { return mCurrentState; };
"
	
	
	
	
      end

      operation 187394 "getCurrentState"
	cpp_inline public return_type class_ref 150146 // State
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} & ${name}${(}${)}${const}${volatile}${throw}${abstract} { return mCurrentState; };
"
	
	
	
	
      end

      operation 187522 "dump"
	preserve_cpp_body_indent const public explicit_return_type "void"
	nparams 2
	  param inout name "result" explicit_type "String8"
	  param inout name "colorizer" type class_ref 145026 // Colorizer
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} & ${p0}${v0}, ${t1} & ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "// ----------------------------------------------------------------------------
// debugging
// ----------------------------------------------------------------------------

${inline}${type} ${class}::${name}${(}${t0} & ${p0}, ${t1} & ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment " always call base class first "
      end

      operation 187650 "dumpFrameStats"
	preserve_cpp_body_indent const public explicit_return_type "void"
	nparams 1
	  param inout name "result" explicit_type "String8"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 187778 "clearFrameStats"
	preserve_cpp_body_indent public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 187906 "logFrameStats"
	preserve_cpp_body_indent public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 188034 "getFrameStats"
	preserve_cpp_body_indent const public explicit_return_type "void"
	nparams 1
	  param inout name "outStats" explicit_type "FrameStats"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} * ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      classrelation 143490 // mFlinger (<directional composition>)
	relation 143490 *-->
	  stereotype "sp"
	  a role_name "mFlinger" protected
	    comment " constant"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${stereotype}<${type}> ${name}${value};
"
	    classrelation_ref 143490 // mFlinger (<directional composition>)
	  b parent class_ref 144898 // SurfaceFlinger
      end

      operation 188162 "onFirstRef"
	preserve_cpp_body_indent cpp_virtual protected explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      class 150530 "LayerCleaner"
	visibility package 
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	java_decl ""
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	classrelation 143618 // mFlinger (<directional composition>)
	  relation 143618 *-->
	    stereotype "sp"
	    a role_name "mFlinger" private
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${stereotype}<${type}> ${name}${value};
"
	      classrelation_ref 143618 // mFlinger (<directional composition>)
	    b parent class_ref 144898 // SurfaceFlinger
	end

	classrelation 143746 // mLayer (<directional composition>)
	  relation 143746 *-->
	    stereotype "wp"
	    a role_name "mLayer" private
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${stereotype}<${type}> ${name}${value};
"
	      classrelation_ref 143746 // mLayer (<directional composition>)
	    b parent class_ref 144770 // Layer
	end

	operation 188290 "~LayerCleaner"
	  preserve_cpp_body_indent protected explicit_return_type ""
	  nparams 0
	  cpp_decl "    ${comment}${inline}${virtual}${name}${(}${)}${volatile}${throw};
"
	  cpp_def "${comment}${inline}${class}::${name}${(}${)}${throw}{
  ${body}}
"
	  
	  
	  
	  
	end

	operation 188418 "LayerCleaner"
	  preserve_cpp_body_indent public explicit_return_type ""
	  nparams 2
	    param in name "flinger" explicit_type "sp<SurfaceFlinger>"
	    param in name "layer" explicit_type "sp<Layer>"
	  cpp_decl "    ${comment}${inline}${name}${(}const ${t0} & ${p0}${v0}, const ${t1} & ${p1}${v1}${)}${volatile}${throw};
"
	  cpp_def "// ---------------------------------------------------------------------------

${inline}${class}::${name}${(}const ${t0} & ${p0}, const ${t1} & ${p1}${)}
    : mFlinger(flinger), mLayer(layer) ${throw}{
  ${body}}
"
	  
	  
	  
	  
	end
      end

      operation 188546 "onFrameAvailable"
	preserve_cpp_body_indent cpp_virtual private explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment " Interface implementation for SurfaceFlingerConsumer::ContentsChangedListener"
      end

      operation 188674 "onSidebandStreamChanged"
	preserve_cpp_body_indent cpp_virtual private explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 188802 "commitTransaction"
	preserve_cpp_body_indent private explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 188930 "needsFiltering"
	preserve_cpp_body_indent const private explicit_return_type "bool"
	nparams 1
	  param in name "hw" explicit_type "sp<const DisplayDevice>"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment " needsLinearFiltering - true if this surface's state requires filtering"
      end

      operation 189058 "getEffectiveUsage"
	preserve_cpp_body_indent const private explicit_return_type "uint32_t"
	nparams 1
	  param in name "usage" explicit_type "uint32_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 189186 "computeCrop"
	preserve_cpp_body_indent const private return_type class_ref 150658 // FloatRect
	nparams 1
	  param in name "hw" explicit_type "sp<const DisplayDevice>"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 189314 "isCropped"
	preserve_cpp_body_indent const private explicit_return_type "bool"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 189442 "getOpacityForFormat"
	class_operation preserve_cpp_body_indent private explicit_return_type "bool"
	nparams 1
	  param in name "format" explicit_type "uint32_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 189570 "clearWithOpenGL"
	preserve_cpp_body_indent const private explicit_return_type "void"
	nparams 6
	  param in name "hw" explicit_type "sp<const DisplayDevice>"
	  param in name "clip" explicit_type "Region"
	  param in name "red" explicit_type "float"
	  param in name "green" explicit_type "float"
	  param in name "blue" explicit_type "float"
	  param in name "alpha" explicit_type "float"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}, const ${t1} & ${p1}${v1}, ${t2} ${p2}${v2}, ${t3} ${p3}${v3}, ${t4} ${p4}${v4}, ${t5} ${p5}${v5}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}, const ${t1} & ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}${)}${const}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment " drawing"
      end

      operation 189698 "drawWithOpenGL"
	preserve_cpp_body_indent const private explicit_return_type "void"
	nparams 3
	  param in name "hw" explicit_type "sp<const DisplayDevice>"
	  param in name "clip" explicit_type "Region"
	  param in name "useIdentityTransform" explicit_type "bool"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}, const ${t1} & ${p1}${v1}, ${t2} ${p2}${v2}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}, const ${t1} & ${p1}, ${t2} ${p2}${)}${const}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 189826 "getProducerStickyTransform"
	preserve_cpp_body_indent const private explicit_return_type "uint32_t"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment " Temporary - Used only for LEGACY camera mode."
      end

      classrelation 143874 // mSurfaceFlingerConsumer (<directional composition>)
	relation 143874 *-->
	  stereotype "sp"
	  a role_name "mSurfaceFlingerConsumer" private
	    comment " -----------------------------------------------------------------------
 constants"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${stereotype}<${type}> ${name}${value};
"
	    classrelation_ref 143874 // mSurfaceFlingerConsumer (<directional composition>)
	  b parent class_ref 149634 // SurfaceFlingerConsumer
      end

      attribute 169986 "mProducer"
	private explicit_type "IGraphicBufferProducer"
	stereotype "sp"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${stereotype}<${type}> ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 170114 "mTextureName"
	private explicit_type "uint32_t"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " from GLES"
      end

      attribute 170242 "mPremultipliedAlpha"
	private explicit_type "bool"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 170370 "mName"
	private explicit_type "String8"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 170498 "mDebug"
	private explicit_type "bool"
	cpp_mutable cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 170626 "mFormat"
	private explicit_type "PixelFormat"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 144002 // mCurrentState (<directional composition>)
	relation 144002 *-->
	  a role_name "mCurrentState" private
	    comment " these are protected by an external lock"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	    classrelation_ref 144002 // mCurrentState (<directional composition>)
	  b parent class_ref 150146 // State
      end

      classrelation 144130 // mDrawingState (<directional composition>)
	relation 144130 *-->
	  a role_name "mDrawingState" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	    classrelation_ref 144130 // mDrawingState (<directional composition>)
	  b parent class_ref 150146 // State
      end

      attribute 170754 "mTransactionFlags"
	volatile private explicit_type "int32_t"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 170882 "mQueuedFrames"
	volatile private explicit_type "int32_t"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " thread-safe"
      end

      attribute 171010 "mSidebandStreamChanged"
	volatile private explicit_type "int32_t"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " used like an atomic boolean"
      end

      classrelation 144258 // mFrameTracker (<directional composition>)
	relation 144258 *-->
	  a role_name "mFrameTracker" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	    classrelation_ref 144258 // mFrameTracker (<directional composition>)
	  b parent class_ref 149122 // FrameTracker
      end

      attribute 171138 "mActiveBuffer"
	private explicit_type "GraphicBuffer"
	stereotype "sp"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${stereotype}<${type}> ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " main thread"
      end

      attribute 171266 "mSidebandStream"
	private explicit_type "NativeHandle"
	stereotype "sp"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${stereotype}<${type}> ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 171394 "mCurrentCrop"
	private explicit_type "Rect"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 171522 "mCurrentTransform"
	private explicit_type "uint32_t"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 171650 "mCurrentScalingMode"
	private explicit_type "uint32_t"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 171778 "mCurrentOpacity"
	private explicit_type "bool"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 171906 "mRefreshPending"
	private explicit_type "bool"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 172034 "mFrameLatencyNeeded"
	private explicit_type "bool"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 172162 "mFiltering"
	private explicit_type "bool"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Whether filtering is forced on or not"
      end

      attribute 172290 "mNeedsFiltering"
	private explicit_type "bool"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Whether filtering is needed b/c of the drawingstate"
      end

      classrelation 144386 // mMesh (<directional composition>)
	relation 144386 *-->
	  a role_name "mMesh" private
	    comment " The mesh used to draw the layer in GLES composition mode"
	    cpp mutable default "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	    classrelation_ref 144386 // mMesh (<directional composition>)
	  b parent class_ref 150274 // Mesh
      end

      classrelation 144514 // mTexture (<directional composition>)
	relation 144514 *-->
	  a role_name "mTexture" private
	    comment " The texture used to draw the layer in GLES composition mode"
	    cpp mutable default "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	    classrelation_ref 144514 // mTexture (<directional composition>)
	  b parent class_ref 150786 // Texture
      end

      attribute 172418 "mSecure"
	private explicit_type "bool"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " page-flip thread (currently main thread)
 no screenshots"
      end

      attribute 172546 "mProtectedByApp"
	private explicit_type "bool"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " application requires protected path to external sink"
      end

      attribute 172674 "mLock"
	private explicit_type "Mutex"
	cpp_mutable cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " protected by mLock"
      end

      attribute 172802 "mHasSurface"
	private explicit_type "bool"
	cpp_mutable cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Set to true once we've returned this surface's handle"
      end

      classrelation 144642 // mClientRef (<directional composition>)
	relation 144642 *-->
	  stereotype "wp"
	  a role_name "mClientRef" const_relation private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${stereotype}<${type}> ${name}${value};
"
	    classrelation_ref 144642 // mClientRef (<directional composition>)
	  b parent class_ref 144514 // Client
      end

      attribute 172930 "mPotentialCursor"
	private explicit_type "bool"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " This layer can be a cursor on some displays."
      end
    end

    class 144898 "SurfaceFlinger"
      visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl ""
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      classrelation 146178 // <generalisation>
	relation 146178 ---|>
	  a public
	    cpp default "${type}"
	    classrelation_ref 146178 // <generalisation>
	  b parent class_ref 152322 // typedef14
      end

      classrelation 146306 // <generalisation>
	relation 146306 ---|>
	  a private
	    cpp default "${type}"
	    classrelation_ref 146306 // <generalisation>
	  b parent class_ref 152450 // typedef15
      end

      classrelation 146434 // <generalisation>
	relation 146434 ---|>
	  a private
	    cpp default "${type}"
	    classrelation_ref 146434 // <generalisation>
	  b parent class_ref 152578 // EventHandler
      end

      operation 195714 "getServiceName"
	class_operation public explicit_return_type "char"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      class 160514 "LayerVector"
	visibility package 
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	java_decl ""
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
      end

      class 160642 "DisplayDeviceState"
	visibility package stereotype "struct"
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	java_decl ""
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
      end
    end

    class 145026 "Colorizer"
      visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl ""
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment " ---------------------------------------------------------------------------"
      attribute 156546 "mEnabled"
	private explicit_type "bool"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      class 145154 "color"
	visibility package stereotype "enum"
	cpp_decl "${comment}enum ${name} {
${items}
};
"
	java_decl ""
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	attribute 156674 "RED"
	  public type class_ref 145154 // color
	  init_value " 31"
	  cpp_decl "  ${name}${value},${comment}"
	  java_decl ""
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 156802 "GREEN"
	  public type class_ref 145154 // color
	  init_value " 32"
	  cpp_decl "  ${name}${value},${comment}"
	  java_decl ""
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 156930 "YELLOW"
	  public type class_ref 145154 // color
	  init_value " 33"
	  cpp_decl "  ${name}${value},${comment}"
	  java_decl ""
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 157058 "BLUE"
	  public type class_ref 145154 // color
	  init_value " 34"
	  cpp_decl "  ${name}${value},${comment}"
	  java_decl ""
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 157186 "MAGENTA"
	  public type class_ref 145154 // color
	  init_value " 35"
	  cpp_decl "  ${name}${value},${comment}"
	  java_decl ""
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 157314 "CYAN"
	  public type class_ref 145154 // color
	  init_value " 36"
	  cpp_decl "  ${name}${value},${comment}"
	  java_decl ""
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 157442 "WHITE"
	  public type class_ref 145154 // color
	  init_value " 37
    "
	  cpp_decl "  ${name}${value},${comment}"
	  java_decl ""
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end
      end

      operation 164610 "Colorizer"
	cpp_inline public explicit_return_type ""
	nparams 1
	  param in name "enabled" explicit_type "bool"
	cpp_decl "    ${comment}${inline}${name}${(}${t0} ${p0}${v0}${)}${volatile}${throw} : mEnabled(enabled) {
    };
"
	
	
	
	
      end

      operation 164738 "colorize"
	cpp_inline public explicit_return_type "void"
	nparams 2
	  param inout name "out" explicit_type "String8"
	  param in name "c" type class_ref 145154 // color
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} & ${p0}${v0}, ${t1} ${p1}${v1}${)}${const}${volatile}${throw}${abstract} {
        if (mEnabled) {
            out.appendFormat(\"\\e[%dm\", c);
        }
    };
"
	
	
	
	
      end

      operation 164866 "bold"
	cpp_inline public explicit_return_type "void"
	nparams 1
	  param inout name "out" explicit_type "String8"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract} {
        if (mEnabled) {
            out.append(\"\\e[1m\");
        }
    };
"
	
	
	
	
      end

      operation 164994 "reset"
	cpp_inline public explicit_return_type "void"
	nparams 1
	  param inout name "out" explicit_type "String8"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract} {
        if (mEnabled) {
            out.append(\"\\e[0m\");
        }
    };
"
	
	
	
	
      end
    end

    class 145282 "DdmConnection"
      visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl ""
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      operation 165122 "start"
	class_operation preserve_cpp_body_indent public explicit_return_type "void"
	nparams 1
	  param in name "name" explicit_type "char"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} * ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} * ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end
    end

    class 145410 "DisplayDevice"
      visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl ""
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      classrelation 140290 // <generalisation>
	relation 140290 ---|>
	  a public
	    cpp default "${type}"
	    classrelation_ref 140290 // <generalisation>
	  b parent class_ref 145538 // typedef2
      end

      attribute 157570 "dirtyRegion"
	public explicit_type "Region"
	cpp_mutable cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " region in layer-stack space"
      end

      attribute 157698 "swapRegion"
	public explicit_type "Region"
	cpp_mutable cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " region in screen space"
      end

      attribute 157826 "undefinedRegion"
	public explicit_type "Region"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " region in screen space"
      end

      attribute 157954 "lastCompositionHadVisibleLayers"
	public explicit_type "bool"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      class 145666 "DisplayType"
	visibility package stereotype "enum"
	cpp_decl "${comment}enum ${name} {
${items}
};
"
	java_decl ""
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	attribute 158082 "DISPLAY_ID_INVALID"
	  public type class_ref 145666 // DisplayType
	  init_value " -1"
	  cpp_decl "  ${name}${value},${comment}"
	  java_decl ""
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 158210 "DISPLAY_PRIMARY"
	  public type class_ref 145666 // DisplayType
	  init_value " HWC_DISPLAY_PRIMARY"
	  cpp_decl "  ${name}${value},${comment}"
	  java_decl ""
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 158338 "DISPLAY_EXTERNAL"
	  public type class_ref 145666 // DisplayType
	  init_value " HWC_DISPLAY_EXTERNAL"
	  cpp_decl "  ${name}${value},${comment}"
	  java_decl ""
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 158466 "DISPLAY_VIRTUAL"
	  public type class_ref 145666 // DisplayType
	  init_value " HWC_DISPLAY_VIRTUAL"
	  cpp_decl "  ${name}${value},${comment}"
	  java_decl ""
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 158594 "NUM_BUILTIN_DISPLAY_TYPES"
	  public type class_ref 145666 // DisplayType
	  init_value " HWC_NUM_PHYSICAL_DISPLAY_TYPES"
	  cpp_decl "  ${name}${value},${comment}"
	  java_decl ""
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end
      end

      class 145794 "anonymous2"
	visibility package stereotype "enum"
	cpp_decl "${comment}enum  {
${items}
};
"
	java_decl ""
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	attribute 158722 "PARTIAL_UPDATES"
	  public type class_ref 145794 // anonymous2
	  init_value " 0x00020000"
	  cpp_decl "  ${name}${value},${comment}"
	  java_decl ""
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 158850 "SWAP_RECTANGLE"
	  public type class_ref 145794 // anonymous2
	  init_value " 0x00080000"
	  cpp_decl "  ${name}${value},${comment}"
	  java_decl ""
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end
      end

      class 145922 "anonymous3"
	visibility package stereotype "enum"
	cpp_decl "${comment}enum  {
${items}
};
"
	java_decl ""
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	attribute 158978 "NO_LAYER_STACK"
	  public type class_ref 145922 // anonymous3
	  init_value " 0xFFFFFFFF"
	  cpp_decl "  ${name}${value},${comment}"
	  java_decl ""
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end
      end

      operation 165250 "DisplayDevice"
	preserve_cpp_body_indent public explicit_return_type ""
	nparams 9
	  param in name "flinger" explicit_type "sp<SurfaceFlinger>"
	  param in name "type" type class_ref 145666 // DisplayType
	  param in name "hwcId" explicit_type "int32_t"
	  param in name "format" explicit_type "int"
	  param in name "isSecure" explicit_type "bool"
	  param in name "displayToken" explicit_type "wp<IBinder>"
	  param in name "displaySurface" explicit_type "sp<DisplaySurface>"
	  param in name "producer" explicit_type "sp<IGraphicBufferProducer>"
	  param in name "config" explicit_type "EGLConfig"
	cpp_decl "    ${comment}${inline}${name}${(}const ${t0} & ${p0}${v0}, ${t1} ${p1}${v1}, ${t2} ${p2}${v2}, ${t3} ${p3}${v3}, ${t4} ${p4}${v4}, const ${t5} & ${p5}${v5}, const ${t6} & ${p6}${v6}, const ${t7} & ${p7}${v7}, ${t8} ${p8}${v8}${)}${volatile}${throw};
"
	cpp_def "// ----------------------------------------------------------------------------
// ----------------------------------------------------------------------------
//
// * Initialize the display to the specified values.
// *

${inline}${class}::${name}${(}const ${t0} & ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, const ${t5} & ${p5}, const ${t6} & ${p6}, const ${t7} & ${p7}, ${t8} ${p8}${)}
    : lastCompositionHadVisibleLayers(false),
      mFlinger(flinger),
      mType(type), mHwcDisplayId(hwcId),
      mDisplayToken(displayToken),
      mDisplaySurface(displaySurface),
      mDisplay(EGL_NO_DISPLAY),
      mSurface(EGL_NO_SURFACE),
      mDisplayWidth(), mDisplayHeight(), mFormat(),
      mFlags(),
      mPageFlipCount(),
      mIsSecure(isSecure),
      mSecureLayerVisible(false),
      mLayerStack(NO_LAYER_STACK),
      mOrientation(),
      mPowerMode(HWC_POWER_MODE_OFF),
      mActiveConfig(0)
${throw}{
  ${body}}
"
	
	
	
	
      end

      operation 165378 "~DisplayDevice"
	preserve_cpp_body_indent public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${virtual}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${throw}{
  ${body}}
"
	
	
	
	
      end

      operation 165506 "isValid"
	preserve_cpp_body_indent const public explicit_return_type "bool"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment " whether this is a valid object. An invalid DisplayDevice is returned
 when an non existing id is requested"
      end

      operation 165634 "isSecure"
	const cpp_inline public explicit_return_type "bool"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} { return mIsSecure; };
"
	
	
	
	
	comment " isSecure indicates whether this display can be trusted to display
 secure surfaces."
      end

      operation 165762 "flip"
	preserve_cpp_body_indent const public explicit_return_type "void"
	nparams 1
	  param in name "dirty" explicit_type "Region"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment " Flip the front and back buffers if the back buffer is \"dirty\".  Might
 be instantaneous, might involve copying the frame buffer around."
      end

      operation 165890 "getWidth"
	preserve_cpp_body_indent const public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 166018 "getHeight"
	preserve_cpp_body_indent const public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 166146 "getFormat"
	preserve_cpp_body_indent const public explicit_return_type "PixelFormat"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 166274 "getFlags"
	preserve_cpp_body_indent const public explicit_return_type "uint32_t"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 166402 "getEGLSurface"
	preserve_cpp_body_indent const public explicit_return_type "EGLSurface"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 166530 "setVisibleLayersSortedByZ"
	preserve_cpp_body_indent public explicit_return_type "void"
	nparams 1
	  param in name "layers" explicit_type "Vector< sp<Layer> >"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "// ----------------------------------------------------------------------------

${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 166658 "getVisibleLayersSortedByZ"
	preserve_cpp_body_indent const public explicit_return_type "Vector< sp<Layer> >"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}const ${type} & ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}const ${type} & ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 166786 "getSecureLayerVisible"
	preserve_cpp_body_indent const public explicit_return_type "bool"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 166914 "getDirtyRegion"
	preserve_cpp_body_indent const public explicit_return_type "Region"
	nparams 1
	  param in name "repaintEverything" explicit_type "bool"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 167042 "setLayerStack"
	preserve_cpp_body_indent public explicit_return_type "void"
	nparams 1
	  param in name "stack" explicit_type "uint32_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "// ----------------------------------------------------------------------------

${inline}${type} ${class}::${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 167170 "setDisplaySize"
	preserve_cpp_body_indent public explicit_return_type "void"
	nparams 2
	  param in name "newWidth" explicit_type "int"
	  param in name "newHeight" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} ${p0}${v0}, const ${t1} ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} ${p0}, const ${t1} ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 167298 "setProjection"
	preserve_cpp_body_indent public explicit_return_type "void"
	nparams 3
	  param in name "orientation" explicit_type "int"
	  param in name "newViewport" explicit_type "Rect"
	  param in name "newFrame" explicit_type "Rect"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, const ${t1} & ${p1}${v1}, const ${t2} & ${p2}${v2}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}, const ${t1} & ${p1}, const ${t2} & ${p2}${)}${const}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 167426 "getOrientation"
	const cpp_inline public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} { return mOrientation; };
"
	
	
	
	
      end

      operation 167554 "getOrientationTransform"
	preserve_cpp_body_indent const public explicit_return_type "uint32_t"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "// ----------------------------------------------------------------------------

${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 167682 "getTransform"
	const cpp_inline public return_type class_ref 146050 // Transform
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}const ${type} & ${name}${(}${)}${const}${volatile}${throw}${abstract} { return mGlobalTransform; };
"
	
	
	
	
      end

      operation 167810 "getViewport"
	const cpp_inline public explicit_return_type "Rect"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}const ${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} { return mViewport; };
"
	
	
	
	
      end

      operation 167938 "getFrame"
	const cpp_inline public explicit_return_type "Rect"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}const ${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} { return mFrame; };
"
	
	
	
	
      end

      operation 168066 "getScissor"
	const cpp_inline public explicit_return_type "Rect"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}const ${type} & ${name}${(}${)}${const}${volatile}${throw}${abstract} { return mScissor; };
"
	
	
	
	
      end

      operation 168194 "needsFiltering"
	const cpp_inline public explicit_return_type "bool"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} { return mNeedsFiltering; };
"
	
	
	
	
      end

      operation 168322 "getLayerStack"
	const cpp_inline public explicit_return_type "uint32_t"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} { return mLayerStack; };
"
	
	
	
	
      end

      operation 168450 "getDisplayType"
	const cpp_inline public explicit_return_type "int32_t"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} { return mType; };
"
	
	
	
	
      end

      operation 168578 "getHwcDisplayId"
	const cpp_inline public explicit_return_type "int32_t"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} { return mHwcDisplayId; };
"
	
	
	
	
      end

      operation 168706 "getDisplayToken"
	const cpp_inline public explicit_return_type "wp<IBinder>"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}const ${type} & ${name}${(}${)}${const}${volatile}${throw}${abstract} { return mDisplayToken; };
"
	
	
	
	
      end

      operation 168834 "beginFrame"
	preserve_cpp_body_indent const public explicit_return_type "status_t"
	nparams 1
	  param in name "mustRecompose" explicit_type "bool"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment " We pass in mustRecompose so we can keep VirtualDisplaySurface's state
 machine happy without actually queueing a buffer if nothing has changed"
      end

      operation 168962 "prepareFrame"
	preserve_cpp_body_indent const public explicit_return_type "status_t"
	nparams 1
	  param in name "hwc" type class_ref 146178 // HWComposer
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 169090 "swapBuffers"
	preserve_cpp_body_indent const public explicit_return_type "void"
	nparams 1
	  param inout name "hwc" type class_ref 146178 // HWComposer
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 169218 "compositionComplete"
	preserve_cpp_body_indent const public explicit_return_type "status_t"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 169346 "onSwapBuffersCompleted"
	preserve_cpp_body_indent const public explicit_return_type "void"
	nparams 1
	  param inout name "hwc" type class_ref 146178 // HWComposer
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment " called after h/w composer has completed its set() call"
      end

      operation 169474 "getBounds"
	const cpp_inline public explicit_return_type "Rect"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} {
        return Rect(mDisplayWidth, mDisplayHeight);
    };
"
	
	
	
	
      end

      operation 169602 "bounds"
	const cpp_inline public explicit_return_type "Rect"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} { return getBounds(); };
"
	
	
	
	
      end

      operation 169730 "setDisplayName"
	preserve_cpp_body_indent public explicit_return_type "void"
	nparams 1
	  param in name "displayName" explicit_type "String8"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 169858 "getDisplayName"
	const cpp_inline public explicit_return_type "String8"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}const ${type} & ${name}${(}${)}${const}${volatile}${throw}${abstract} { return mDisplayName; };
"
	
	
	
	
      end

      operation 169986 "makeCurrent"
	preserve_cpp_body_indent const public explicit_return_type "EGLBoolean"
	nparams 2
	  param in name "dpy" explicit_type "EGLDisplay"
	  param in name "ctx" explicit_type "EGLContext"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 170114 "setViewportAndProjection"
	preserve_cpp_body_indent const public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 170242 "getPowerMode"
	preserve_cpp_body_indent const public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment " ------------------------------------------------------------------------
     * Display power mode management."
      end

      operation 170370 "setPowerMode"
	preserve_cpp_body_indent public explicit_return_type "void"
	nparams 1
	  param in name "mode" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "// ----------------------------------------------------------------------------

${inline}${type} ${class}::${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 170498 "isDisplayOn"
	preserve_cpp_body_indent const public explicit_return_type "bool"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 170626 "getActiveConfig"
	preserve_cpp_body_indent const public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment " ------------------------------------------------------------------------
     * Display active config management."
      end

      operation 170754 "setActiveConfig"
	preserve_cpp_body_indent public explicit_return_type "void"
	nparams 1
	  param in name "mode" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "// ----------------------------------------------------------------------------

${inline}${type} ${class}::${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 170882 "disconnect"
	preserve_cpp_body_indent public explicit_return_type "void"
	nparams 1
	  param inout name "hwc" type class_ref 146178 // HWComposer
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment " release HWC resources (if any) for removable displays"
      end

      operation 171010 "getPageFlipCount"
	preserve_cpp_body_indent const public explicit_return_type "uint32_t"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment " ------------------------------------------------------------------------
     * Debugging"
      end

      operation 171138 "dump"
	preserve_cpp_body_indent const public explicit_return_type "void"
	nparams 1
	  param inout name "result" explicit_type "String8"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      classrelation 140418 // mFlinger (<directional composition>)
	relation 140418 *-->
	  stereotype "sp"
	  a role_name "mFlinger" private
	    comment "     *  Constants, set during initialization
     "
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${stereotype}<${type}> ${name}${value};
"
	    classrelation_ref 140418 // mFlinger (<directional composition>)
	  b parent class_ref 144898 // SurfaceFlinger
      end

      classrelation 140546 // mType (<directional composition>)
	relation 140546 *-->
	  a role_name "mType" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	    classrelation_ref 140546 // mType (<directional composition>)
	  b parent class_ref 145666 // DisplayType
      end

      attribute 159106 "mHwcDisplayId"
	private explicit_type "int32_t"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 159234 "mDisplayToken"
	private explicit_type "IBinder"
	stereotype "wp"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${stereotype}<${type}> ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 159362 "mNativeWindow"
	private explicit_type "ANativeWindow"
	stereotype "sp"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${stereotype}<${type}> ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " ANativeWindow this display is rendering into"
      end

      classrelation 140674 // mDisplaySurface (<directional composition>)
	relation 140674 *-->
	  stereotype "sp"
	  a role_name "mDisplaySurface" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${stereotype}<${type}> ${name}${value};
"
	    classrelation_ref 140674 // mDisplaySurface (<directional composition>)
	  b parent class_ref 146306 // DisplaySurface
      end

      attribute 159490 "mConfig"
	private explicit_type "EGLConfig"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 159618 "mDisplay"
	private explicit_type "EGLDisplay"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 159746 "mSurface"
	private explicit_type "EGLSurface"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 159874 "mDisplayWidth"
	private explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 160002 "mDisplayHeight"
	private explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 160130 "mFormat"
	private explicit_type "PixelFormat"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 160258 "mFlags"
	private explicit_type "uint32_t"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 160386 "mPageFlipCount"
	private explicit_type "uint32_t"
	cpp_mutable cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 160514 "mDisplayName"
	private explicit_type "String8"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 160642 "mIsSecure"
	private explicit_type "bool"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 160770 "mVisibleLayersSortedByZ"
	private explicit_type " sp<Layer> "
	stereotype "Vector"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${stereotype}<${type}> ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "     * Can only accessed from the main thread, these members
     * don't need synchronization.
     
 list of visible layers on that display"
      end

      attribute 160898 "mSecureLayerVisible"
	private explicit_type "bool"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Whether we have a visible secure layer on this display"
      end

      operation 171266 "orientationToTransfrom"
	class_operation preserve_cpp_body_indent private explicit_return_type "status_t"
	nparams 4
	  param in name "orientation" explicit_type "int"
	  param in name "w" explicit_type "int"
	  param in name "h" explicit_type "int"
	  param inout name "tr" type class_ref 146050 // Transform
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} ${p1}${v1}, ${t2} ${p2}${v2}, ${t3} * ${p3}${v3}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} * ${p3}${)}${const}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment "     * Transaction state"
      end

      attribute 161026 "mLayerStack"
	private explicit_type "uint32_t"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 161154 "mOrientation"
	private explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 161282 "mViewport"
	private explicit_type "Rect"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " user-provided visible area of the layer stack"
      end

      attribute 161410 "mFrame"
	private explicit_type "Rect"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " user-provided rectangle where mViewport gets mapped to"
      end

      attribute 161538 "mScissor"
	private explicit_type "Rect"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " pre-computed scissor to apply to the display"
      end

      classrelation 140802 // mGlobalTransform (<directional composition>)
	relation 140802 *-->
	  a role_name "mGlobalTransform" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	    classrelation_ref 140802 // mGlobalTransform (<directional composition>)
	  b parent class_ref 146050 // Transform
      end

      attribute 161666 "mNeedsFiltering"
	private explicit_type "bool"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 161794 "mPowerMode"
	private explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Current power mode"
      end

      attribute 161922 "mActiveConfig"
	private explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Current active config"
      end
    end

    class 145538 "typedef2"
      visibility package stereotype "typedef" explicit_base_type "LightRefBase<DisplayDevice>"
      cpp_decl "${comment}typedef ${type} ${name};
"
      java_decl ""
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
    end

    class 146050 "Transform"
      visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl ""
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment " ---------------------------------------------------------------------------"
      operation 197378 "Transform"
	preserve_cpp_body_indent public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "// ---------------------------------------------------------------------------
// ---------------------------------------------------------------------------

${inline}${class}::${name}${(}${)}${throw}{
  ${body}}
"
	
	
	
	
      end

      operation 197506 "Transform"
	preserve_cpp_body_indent public explicit_return_type ""
	nparams 1
	  param in name "other" type class_ref 146050 // Transform
	cpp_decl "    ${comment}${inline}${name}${(}const ${t0} & ${p0}${v0}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}const ${t0} & ${p0}${)}
    : mMatrix(other.mMatrix), mType(other.mType) ${throw}{
  ${body}}
"
	
	
	
	
      end

      operation 197634 "Transform"
	preserve_cpp_body_indent public explicit_return_type ""
	nparams 1
	  param in name "orientation" explicit_type "uint32_t"
	cpp_decl "    ${comment}${inline}explicit ${name}${(}${t0} ${p0}${v0}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${t0} ${p0}${)}${throw}{
  ${body}}
"
	
	
	
	
      end

      operation 197762 "~Transform"
	preserve_cpp_body_indent public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${virtual}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${throw}{
  ${body}}
"
	
	
	
	
      end

      class 153346 "orientation_flags"
	visibility package stereotype "enum"
	cpp_decl "${comment}enum ${name} {
${items}
};
"
	java_decl ""
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	attribute 175362 "ROT_0"
	  public type class_ref 153346 // orientation_flags
	  init_value " 0x00000000"
	  cpp_decl "  ${name}${value},${comment}"
	  java_decl ""
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 175490 "FLIP_H"
	  public type class_ref 153346 // orientation_flags
	  init_value " HAL_TRANSFORM_FLIP_H"
	  cpp_decl "  ${name}${value},${comment}"
	  java_decl ""
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 175618 "FLIP_V"
	  public type class_ref 153346 // orientation_flags
	  init_value " HAL_TRANSFORM_FLIP_V"
	  cpp_decl "  ${name}${value},${comment}"
	  java_decl ""
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 175746 "ROT_90"
	  public type class_ref 153346 // orientation_flags
	  init_value " HAL_TRANSFORM_ROT_90"
	  cpp_decl "  ${name}${value},${comment}"
	  java_decl ""
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 175874 "ROT_180"
	  public type class_ref 153346 // orientation_flags
	  init_value " FLIP_H|FLIP_V"
	  cpp_decl "  ${name}${value},${comment}"
	  java_decl ""
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 176002 "ROT_270"
	  public type class_ref 153346 // orientation_flags
	  init_value " ROT_180|ROT_90"
	  cpp_decl "  ${name}${value},${comment}"
	  java_decl ""
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 176130 "ROT_INVALID"
	  public type class_ref 153346 // orientation_flags
	  init_value " 0x80
            "
	  cpp_decl "  ${name}${value},${comment}"
	  java_decl ""
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end
      end

      class 153474 "type_mask"
	visibility package stereotype "enum"
	cpp_decl "${comment}enum ${name} {
${items}
};
"
	java_decl ""
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	attribute 176258 "IDENTITY"
	  public type class_ref 153474 // type_mask
	  init_value " 0"
	  cpp_decl "  ${name}${value},${comment}"
	  java_decl ""
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 176386 "TRANSLATE"
	  public type class_ref 153474 // type_mask
	  init_value " 0x1"
	  cpp_decl "  ${name}${value},${comment}"
	  java_decl ""
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 176514 "ROTATE"
	  public type class_ref 153474 // type_mask
	  init_value " 0x2"
	  cpp_decl "  ${name}${value},${comment}"
	  java_decl ""
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 176642 "SCALE"
	  public type class_ref 153474 // type_mask
	  init_value " 0x4"
	  cpp_decl "  ${name}${value},${comment}"
	  java_decl ""
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 176770 "UNKNOWN"
	  public type class_ref 153474 // type_mask
	  init_value " 0x8
            "
	  cpp_decl "  ${name}${value},${comment}"
	  java_decl ""
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end
      end

      operation 197890 "transformed"
	preserve_cpp_body_indent const public explicit_return_type "bool"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment " query the transform"
      end

      operation 198018 "preserveRects"
	preserve_cpp_body_indent const public explicit_return_type "bool"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 198146 "getType"
	preserve_cpp_body_indent const public explicit_return_type "uint32_t"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 198274 "getOrientation"
	preserve_cpp_body_indent const public explicit_return_type "uint32_t"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 198402 "operator []"
	preserve_cpp_body_indent const public explicit_return_type "vec3"
	nparams 1
	  param in name "i" explicit_type "size_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}const ${type} & ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}const ${type} & ${class}::${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 198530 "tx"
	preserve_cpp_body_indent const public explicit_return_type "float"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment " returns column i"
      end

      operation 198658 "ty"
	preserve_cpp_body_indent const public explicit_return_type "float"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 198786 "reset"
	preserve_cpp_body_indent public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment " modify the transform"
      end

      operation 198914 "set"
	preserve_cpp_body_indent public explicit_return_type "void"
	nparams 2
	  param in name "tx" explicit_type "float"
	  param in name "ty" explicit_type "float"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 199042 "set"
	preserve_cpp_body_indent public explicit_return_type "void"
	nparams 4
	  param in name "a" explicit_type "float"
	  param in name "b" explicit_type "float"
	  param in name "c" explicit_type "float"
	  param in name "d" explicit_type "float"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} ${p1}${v1}, ${t2} ${p2}${v2}, ${t3} ${p3}${v3}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${const}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 199170 "set"
	preserve_cpp_body_indent public explicit_return_type "status_t"
	nparams 3
	  param in name "flags" explicit_type "uint32_t"
	  param in name "w" explicit_type "float"
	  param in name "h" explicit_type "float"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} ${p1}${v1}, ${t2} ${p2}${v2}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${const}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 199298 "makeBounds"
	preserve_cpp_body_indent const public explicit_return_type "Rect"
	nparams 2
	  param in name "w" explicit_type "int"
	  param in name "h" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment " transform data"
      end

      operation 199426 "transform"
	preserve_cpp_body_indent const public explicit_return_type "vec2"
	nparams 2
	  param in name "x" explicit_type "int"
	  param in name "y" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 199554 "transform"
	preserve_cpp_body_indent const public explicit_return_type "Region"
	nparams 1
	  param in name "reg" explicit_type "Region"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 199682 "transform"
	preserve_cpp_body_indent const public explicit_return_type "Rect"
	nparams 1
	  param in name "bounds" explicit_type "Rect"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 199810 "operator *"
	preserve_cpp_body_indent const public return_type class_ref 146050 // Transform
	nparams 1
	  param in name "rhs" type class_ref 146050 // Transform
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 199938 "inverse"
	preserve_cpp_body_indent const public return_type class_ref 146050 // Transform
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 200066 "dump"
	preserve_cpp_body_indent const public explicit_return_type "void"
	nparams 1
	  param in name "name" explicit_type "char"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} * ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} * ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment " for debugging"
      end

      class 153602 "mat33"
	visibility package stereotype "struct"
	cpp_decl "${comment}${template}struct ${name}${inherit} {
${members}};
${inlines}
"
	java_decl ""
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	attribute 176898 "v"
	  public explicit_type "vec3"
	  multiplicity "[3]"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${multiplicity}${value};
"
	  java_decl ""
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	operation 200194 "operator []"
	  const cpp_inline public explicit_return_type "vec3"
	  nparams 1
	    param in name "i" explicit_type "int"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}const ${type} & ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract} { return v[i]; };
"
	  
	  
	  
	  
	end

	operation 200322 "operator []"
	  cpp_inline public explicit_return_type "vec3"
	  nparams 1
	    param in name "i" explicit_type "int"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} & ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract} { return v[i]; };
"
	  
	  
	  
	  
	end
      end

      class 153730 "anonymous16"
	visibility package stereotype "enum"
	cpp_decl "${comment}enum  {
${items}
};
"
	java_decl ""
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	attribute 177026 "UNKNOWN_TYPE"
	  public type class_ref 153730 // anonymous16
	  init_value " 0x80000000 "
	  cpp_decl "  ${name}${value},${comment}"
	  java_decl ""
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end
      end

      operation 200450 "transform"
	preserve_cpp_body_indent const private explicit_return_type "vec2"
	nparams 1
	  param in name "v" explicit_type "vec2"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment " assumes the last row is < 0 , 0 , 1 >"
      end

      operation 200578 "transform"
	preserve_cpp_body_indent const private explicit_return_type "vec3"
	nparams 1
	  param in name "v" explicit_type "vec3"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 200706 "type"
	preserve_cpp_body_indent const private explicit_return_type "uint32_t"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 200834 "absIsOne"
	class_operation preserve_cpp_body_indent private explicit_return_type "bool"
	nparams 1
	  param in name "f" explicit_type "float"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 200962 "isZero"
	class_operation preserve_cpp_body_indent private explicit_return_type "bool"
	nparams 1
	  param in name "f" explicit_type "float"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      classrelation 147074 // mMatrix (<directional composition>)
	relation 147074 *-->
	  a role_name "mMatrix" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	    classrelation_ref 147074 // mMatrix (<directional composition>)
	  b parent class_ref 153602 // mat33
      end

      attribute 177154 "mType"
	private explicit_type "uint32_t"
	cpp_mutable cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end
    end

    class 146434 "DispSync"
      visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl ""
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment " DispSync maintains a model of the periodic hardware-based vsync events of a
 display and uses that model to execute period callbacks at specific phase
 offsets from the hardware vsync events.  The model is constructed by
 feeding consecutive hardware event timestamps to the DispSync object via
 the addResyncSample method.

 The model is validated using timestamps from Fence objects that are passed
 to the DispSync object via the addPresentFence method.  These fence
 timestamps should correspond to a hardware vsync event, but they need not
 be consecutive hardware vsync times.  If this method determines that the
 current model accurately represents the hardware event times it will return
 false to indicate that a resynchronization (via addResyncSample) is not
 needed."
      class 146562 "Callback"
	abstract visibility package 
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	java_decl ""
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	classrelation 140930 // <generalisation>
	  relation 140930 ---|>
	    a public
	      cpp default "${type}"
	      classrelation_ref 140930 // <generalisation>
	    b parent class_ref 146690 // typedef3
	end

	classrelation 141058 // <generalisation>
	  relation 141058 ---|>
	    a private
	      cpp default "${type}"
	      classrelation_ref 141058 // <generalisation>
	    b parent class_ref 146818 // typedef4
	end

	operation 171394 "~Callback"
	  cpp_virtual cpp_inline public explicit_return_type ""
	  nparams 0
	  cpp_decl "    ${comment}${inline}${virtual}${name}${(}${)}${volatile}${throw} {};
"
	  
	  
	  
	  
	end

	operation 171522 "onDispSyncEvent"
	  abstract cpp_virtual public explicit_return_type "void"
	  nparams 1
	    param in name "when" explicit_type "nsecs_t"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	  
	  
	  
	  
	end
      end

      class 146690 "typedef3"
	visibility package stereotype "typedef" explicit_base_type "virtual"
	cpp_decl "${comment}typedef ${type} ${name};
"
	java_decl ""
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
      end

      class 146818 "typedef4"
	visibility package stereotype "typedef" explicit_base_type "RefBase"
	cpp_decl "${comment}typedef ${type} ${name};
"
	java_decl ""
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
      end

      operation 171650 "DispSync"
	preserve_cpp_body_indent public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)} :
        mRefreshSkipCount(0),
        mThread(new DispSyncThread()) ${throw}{
  ${body}}
"
	
	
	
	
      end

      operation 171778 "~DispSync"
	preserve_cpp_body_indent public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${virtual}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${throw}{
  ${body}}
"
	
	
	
	
      end

      operation 171906 "reset"
	preserve_cpp_body_indent public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment " reset clears the resync samples and error value."
      end

      operation 172034 "addPresentFence"
	preserve_cpp_body_indent public explicit_return_type "bool"
	nparams 1
	  param in name "fence" explicit_type "sp<Fence>"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment " addPresentFence adds a fence for use in validating the current vsync
 event model.  The fence need not be signaled at the time
 addPresentFence is called.  When the fence does signal, its timestamp
 should correspond to a hardware vsync event.  Unlike the
 addResyncSample method, the timestamps of consecutive fences need not
 correspond to consecutive hardware vsync events.

 This method should be called with the retire fence from each HWComposer
 set call that affects the display."
      end

      operation 172162 "beginResync"
	preserve_cpp_body_indent public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment " The beginResync, addResyncSample, and endResync methods are used to re-
 synchronize the DispSync's model to the hardware vsync events.  The re-
 synchronization process involves first calling beginResync, then
 calling addResyncSample with a sequence of consecutive hardware vsync
 event timestamps, and finally calling endResync when addResyncSample
 indicates that no more samples are needed by returning false.

 This resynchronization process should be performed whenever the display
 is turned on (i.e. once immediately after it's turned on) and whenever
 addPresentFence returns true indicating that the model has drifted away
 from the hardware vsync events."
      end

      operation 172290 "addResyncSample"
	preserve_cpp_body_indent public explicit_return_type "bool"
	nparams 1
	  param in name "timestamp" explicit_type "nsecs_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 172418 "endResync"
	preserve_cpp_body_indent public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 172546 "setPeriod"
	preserve_cpp_body_indent public explicit_return_type "void"
	nparams 1
	  param in name "period" explicit_type "nsecs_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment " The setPeriod method sets the vsync event model's period to a specific
 value.  This should be used to prime the model when a display is first
 turned on.  It should NOT be used after that."
      end

      operation 172674 "getPeriod"
	preserve_cpp_body_indent public explicit_return_type "nsecs_t"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment " The getPeriod method returns the current vsync period."
      end

      operation 172802 "setRefreshSkipCount"
	preserve_cpp_body_indent public explicit_return_type "void"
	nparams 1
	  param in name "count" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment " setRefreshSkipCount specifies an additional number of refresh
 cycles to skip.  For example, on a 60Hz display, a skip count of 1
 will result in events happening at 30Hz.  Default is zero.  The idea
 is to sacrifice smoothness for battery life."
      end

      operation 172930 "addEventListener"
	preserve_cpp_body_indent public explicit_return_type "status_t"
	nparams 2
	  param in name "phase" explicit_type "nsecs_t"
	  param in name "callback" explicit_type "sp<Callback>"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, const ${t1} & ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}, const ${t1} & ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment " addEventListener registers a callback to be called repeatedly at the
 given phase offset from the hardware vsync events.  The callback is
 called from a separate thread and it should return reasonably quickly
 (i.e. within a few hundred microseconds)."
      end

      operation 173058 "removeEventListener"
	preserve_cpp_body_indent public explicit_return_type "status_t"
	nparams 1
	  param in name "callback" explicit_type "sp<Callback>"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment " removeEventListener removes an already-registered event callback.  Once
 this method returns that callback will no longer be called by the
 DispSync object."
      end

      operation 173186 "computeNextRefresh"
	preserve_cpp_body_indent const public explicit_return_type "nsecs_t"
	nparams 1
	  param in name "periodOffset" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment " computeNextRefresh computes when the next refresh is expected to begin.
 The periodOffset value can be used to move forward or backward; an
 offset of zero is the next refresh, -1 is the previous refresh, 1 is
 the refresh after next. etc."
      end

      operation 173314 "dump"
	preserve_cpp_body_indent const public explicit_return_type "void"
	nparams 1
	  param inout name "result" explicit_type "String8"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment " dump appends human-readable debug info to the result string."
      end

      operation 173442 "updateModelLocked"
	preserve_cpp_body_indent private explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 173570 "updateErrorLocked"
	preserve_cpp_body_indent private explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 173698 "resetErrorLocked"
	preserve_cpp_body_indent private explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      class 146946 "anonymous4"
	visibility package stereotype "enum"
	cpp_decl "${comment}enum  {
${items}
};
"
	java_decl ""
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	attribute 162050 "MAX_RESYNC_SAMPLES"
	  public type class_ref 146946 // anonymous4
	  init_value " 32 "
	  cpp_decl "  ${name}${value},${comment}"
	  java_decl ""
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end
      end

      class 147074 "anonymous5"
	visibility package stereotype "enum"
	cpp_decl "${comment}enum  {
${items}
};
"
	java_decl ""
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	attribute 162178 "MIN_RESYNC_SAMPLES_FOR_UPDATE"
	  public type class_ref 147074 // anonymous5
	  init_value " 3 "
	  cpp_decl "  ${name}${value},${comment}"
	  java_decl ""
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end
      end

      class 147202 "anonymous6"
	visibility package stereotype "enum"
	cpp_decl "${comment}enum  {
${items}
};
"
	java_decl ""
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	attribute 162306 "NUM_PRESENT_SAMPLES"
	  public type class_ref 147202 // anonymous6
	  init_value " 8 "
	  cpp_decl "  ${name}${value},${comment}"
	  java_decl ""
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end
      end

      class 147330 "anonymous7"
	visibility package stereotype "enum"
	cpp_decl "${comment}enum  {
${items}
};
"
	java_decl ""
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	attribute 162434 "MAX_RESYNC_SAMPLES_WITHOUT_PRESENT"
	  public type class_ref 147330 // anonymous7
	  init_value " 12 "
	  cpp_decl "  ${name}${value},${comment}"
	  java_decl ""
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end
      end

      attribute 162562 "mPeriod"
	private explicit_type "nsecs_t"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " mPeriod is the computed period of the modeled vsync events in
 nanoseconds."
      end

      attribute 162690 "mPhase"
	private explicit_type "nsecs_t"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " mPhase is the phase offset of the modeled vsync events.  It is the
 number of nanoseconds from time 0 to the first vsync event."
      end

      attribute 162818 "mError"
	private explicit_type "nsecs_t"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " mError is the computed model error.  It is based on the difference
 between the estimated vsync event times and those observed in the
 mPresentTimes array."
      end

      attribute 162946 "mResyncSamples"
	private explicit_type "nsecs_t"
	multiplicity "[MAX_RESYNC_SAMPLES]"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${multiplicity}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " These member variables are the state used during the resynchronization
 process to store information about the hardware vsync event times used
 to compute the model."
      end

      attribute 163074 "mFirstResyncSample"
	private explicit_type "size_t"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 163202 "mNumResyncSamples"
	private explicit_type "size_t"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 163330 "mNumResyncSamplesSincePresent"
	private explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 163458 "mPresentFences"
	private explicit_type "Fence"
	multiplicity "[NUM_PRESENT_SAMPLES]"
	stereotype "sp"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${stereotype}<${type}> ${name}${multiplicity}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " These member variables store information about the present fences used
 to validate the currently computed model."
      end

      attribute 163586 "mPresentTimes"
	private explicit_type "nsecs_t"
	multiplicity "[NUM_PRESENT_SAMPLES]"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${multiplicity}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 163714 "mPresentSampleOffset"
	private explicit_type "size_t"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 163842 "mRefreshSkipCount"
	private explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 141186 // mThread (<directional composition>)
	relation 141186 *-->
	  stereotype "sp"
	  a role_name "mThread" private
	    comment " mThread is the thread from which all the callbacks are called."
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${stereotype}<${type}> ${name}${value};
"
	    classrelation_ref 141186 // mThread (<directional composition>)
	  b parent class_ref 147458 // DispSyncThread
      end

      attribute 163970 "mMutex"
	private explicit_type "Mutex"
	cpp_mutable cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " mMutex is used to protect access to all member variables."
      end
    end

    class 147458 "DispSyncThread"
      visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl ""
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      classrelation 152450 // <generalisation>
	relation 152450 ---|>
	  a public
	    cpp default "${type}"
	    classrelation_ref 152450 // <generalisation>
	  b parent class_ref 147714 // typedef5
      end

      operation 241794 "DispSyncThread"
	cpp_inline public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw} :
            mStop(false),
            mPeriod(0),
            mPhase(0),
            mWakeupLatency(0) {
    };
"
	
	
	
	
      end

      operation 241922 "~DispSyncThread"
	cpp_virtual cpp_inline public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${virtual}${name}${(}${)}${volatile}${throw} {};
"
	
	
	
	
      end

      operation 242050 "updateModel"
	cpp_inline public explicit_return_type "void"
	nparams 2
	  param in name "period" explicit_type "nsecs_t"
	  param in name "phase" explicit_type "nsecs_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} ${p1}${v1}${)}${const}${volatile}${throw}${abstract} {
        Mutex::Autolock lock(mMutex);
        mPeriod = period;
        mPhase = phase;
        mCond.signal();
    };
"
	
	
	
	
      end

      operation 242178 "stop"
	cpp_inline public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} {
        Mutex::Autolock lock(mMutex);
        mStop = true;
        mCond.signal();
    };
"
	
	
	
	
      end

      operation 242306 "threadLoop"
	cpp_virtual cpp_inline public explicit_return_type "bool"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} {
        status_t err;
        nsecs_t now = systemTime(SYSTEM_TIME_MONOTONIC);
        nsecs_t nextEventTime = 0;

        while (true) {
            Vector<CallbackInvocation> callbackInvocations;

            nsecs_t targetTime = 0;

            { // Scope for lock
                Mutex::Autolock lock(mMutex);

                if (mStop) {
                    return false;
                }

                if (mPeriod == 0) {
                    err = mCond.wait(mMutex);
                    if (err != NO_ERROR) {
                        ALOGE(\"error waiting for new events: %s (%d)\",
                                strerror(-err), err);
                        return false;
                    }
                    continue;
                }

                nextEventTime = computeNextEventTimeLocked(now);
                targetTime = nextEventTime;

                bool isWakeup = false;

                if (now < targetTime) {
                    err = mCond.waitRelative(mMutex, targetTime - now);

                    if (err == TIMED_OUT) {
                        isWakeup = true;
                    } else if (err != NO_ERROR) {
                        ALOGE(\"error waiting for next event: %s (%d)\",
                                strerror(-err), err);
                        return false;
                    }
                }

                now = systemTime(SYSTEM_TIME_MONOTONIC);

                if (isWakeup) {
                    mWakeupLatency = ((mWakeupLatency * 63) +
                            (now - targetTime)) / 64;
                    if (mWakeupLatency > 500000) {
                        // Don't correct by more than 500 us
                        mWakeupLatency = 500000;
                    }
                    if (kTraceDetailedInfo) {
                        ATRACE_INT64(\"DispSync:WakeupLat\", now - nextEventTime);
                        ATRACE_INT64(\"DispSync:AvgWakeupLat\", mWakeupLatency);
                    }
                }

                callbackInvocations = gatherCallbackInvocationsLocked(now);
            }

            if (callbackInvocations.size() > 0) {
                fireCallbackInvocations(callbackInvocations);
            }
        }

        return false;
    };
"
	
	
	
	
      end

      operation 242434 "addEventListener"
	cpp_inline public explicit_return_type "status_t"
	nparams 2
	  param in name "phase" explicit_type "nsecs_t"
	  param in name "callback" explicit_type "sp<DispSync::Callback>"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, const ${t1} & ${p1}${v1}${)}${const}${volatile}${throw}${abstract} {
        Mutex::Autolock lock(mMutex);

        for (size_t i = 0; i < mEventListeners.size(); i++) {
            if (mEventListeners[i].mCallback == callback) {
                return BAD_VALUE;
            }
        }

        EventListener listener;
        listener.mPhase = phase;
        listener.mCallback = callback;

        // We want to allow the firstmost future event to fire without
        // allowing any past events to fire.  Because
        // computeListenerNextEventTimeLocked filters out events within a half
        // a period of the last event time, we need to initialize the last
        // event time to a half a period in the past.
        listener.mLastEventTime = systemTime(SYSTEM_TIME_MONOTONIC) - mPeriod / 2;

        mEventListeners.push(listener);

        mCond.signal();

        return NO_ERROR;
    };
"
	
	
	
	
      end

      operation 242562 "removeEventListener"
	cpp_inline public explicit_return_type "status_t"
	nparams 1
	  param in name "callback" explicit_type "sp<DispSync::Callback>"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract} {
        Mutex::Autolock lock(mMutex);

        for (size_t i = 0; i < mEventListeners.size(); i++) {
            if (mEventListeners[i].mCallback == callback) {
                mEventListeners.removeAt(i);
                mCond.signal();
                return NO_ERROR;
            }
        }

        return BAD_VALUE;
    };
"
	
	
	
	
      end

      operation 242690 "hasAnyEventListeners"
	cpp_inline public explicit_return_type "bool"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} {
        Mutex::Autolock lock(mMutex);
        return !mEventListeners.empty();
    };
"
	
	
	
	
	comment " This method is only here to handle the kIgnorePresentFences case."
      end

      class 159618 "EventListener"
	visibility package stereotype "struct"
	cpp_decl "${comment}${template}struct ${name}${inherit} {
${members}};
${inlines}
"
	java_decl ""
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	attribute 199682 "mPhase"
	  public explicit_type "nsecs_t"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl ""
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 199810 "mLastEventTime"
	  public explicit_type "nsecs_t"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl ""
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	classrelation 152578 // mCallback (<directional composition>)
	  relation 152578 *-->
	    stereotype "sp"
	    a role_name "mCallback" public
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${stereotype}<${type}> ${name}${value};
"
	      classrelation_ref 152578 // mCallback (<directional composition>)
	    b parent class_ref 146562 // Callback
	end
      end

      class 159746 "CallbackInvocation"
	visibility package stereotype "struct"
	cpp_decl "${comment}${template}struct ${name}${inherit} {
${members}};
${inlines}
"
	java_decl ""
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	classrelation 152706 // mCallback (<directional composition>)
	  relation 152706 *-->
	    stereotype "sp"
	    a role_name "mCallback" public
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${stereotype}<${type}> ${name}${value};
"
	      classrelation_ref 152706 // mCallback (<directional composition>)
	    b parent class_ref 146562 // Callback
	end

	attribute 199938 "mEventTime"
	  public explicit_type "nsecs_t"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl ""
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end
      end

      operation 242818 "computeNextEventTimeLocked"
	cpp_inline private explicit_return_type "nsecs_t"
	nparams 1
	  param in name "now" explicit_type "nsecs_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract} {
        nsecs_t nextEventTime = INT64_MAX;
        for (size_t i = 0; i < mEventListeners.size(); i++) {
            nsecs_t t = computeListenerNextEventTimeLocked(mEventListeners[i],
                    now);

            if (t < nextEventTime) {
                nextEventTime = t;
            }
        }

        return nextEventTime;
    };
"
	
	
	
	
      end

      operation 242946 "gatherCallbackInvocationsLocked"
	cpp_inline private explicit_return_type "Vector<CallbackInvocation>"
	nparams 1
	  param in name "now" explicit_type "nsecs_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract} {
        Vector<CallbackInvocation> callbackInvocations;
        nsecs_t ref = now - mPeriod;

        for (size_t i = 0; i < mEventListeners.size(); i++) {
            nsecs_t t = computeListenerNextEventTimeLocked(mEventListeners[i],
                    ref);

            if (t < now) {
                CallbackInvocation ci;
                ci.mCallback = mEventListeners[i].mCallback;
                ci.mEventTime = t;
                callbackInvocations.push(ci);
                mEventListeners.editItemAt(i).mLastEventTime = t;
            }
        }

        return callbackInvocations;
    };
"
	
	
	
	
      end

      operation 243074 "computeListenerNextEventTimeLocked"
	cpp_inline private explicit_return_type "nsecs_t"
	nparams 2
	  param in name "listener" type class_ref 159618 // EventListener
	  param in name "ref" explicit_type "nsecs_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}, ${t1} ${p1}${v1}${)}${const}${volatile}${throw}${abstract} {

        nsecs_t lastEventTime = listener.mLastEventTime;
        if (ref < lastEventTime) {
            ref = lastEventTime;
        }

        nsecs_t phase = mPhase + listener.mPhase;
        nsecs_t t = (((ref - phase) / mPeriod) + 1) * mPeriod + phase;

        if (t - listener.mLastEventTime < mPeriod / 2) {
            t += mPeriod;
        }

        return t;
    };
"
	
	
	
	
      end

      operation 243202 "fireCallbackInvocations"
	cpp_inline private explicit_return_type "void"
	nparams 1
	  param in name "callbacks" explicit_type "Vector<CallbackInvocation>"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract} {
        for (size_t i = 0; i < callbacks.size(); i++) {
            callbacks[i].mCallback->onDispSyncEvent(callbacks[i].mEventTime);
        }
    };
"
	
	
	
	
      end

      attribute 200066 "mStop"
	private explicit_type "bool"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 200194 "mPeriod"
	private explicit_type "nsecs_t"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 200322 "mPhase"
	private explicit_type "nsecs_t"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 200450 "mWakeupLatency"
	private explicit_type "nsecs_t"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 152834 // mEventListeners (<directional composition>)
	relation 152834 *-->
	  stereotype "Vector"
	  a role_name "mEventListeners" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${stereotype}<${type}> ${name}${value};
"
	    classrelation_ref 152834 // mEventListeners (<directional composition>)
	  b parent class_ref 159618 // EventListener
      end

      attribute 200578 "mMutex"
	private explicit_type "Mutex"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 200706 "mCond"
	private explicit_type "Condition"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end
    end

    class 147586 "EventControlThread"
      visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl ""
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      classrelation 141314 // <generalisation>
	relation 141314 ---|>
	  a public
	    cpp default "${type}"
	    classrelation_ref 141314 // <generalisation>
	  b parent class_ref 147714 // typedef5
      end

      operation 173826 "EventControlThread"
	preserve_cpp_body_indent public explicit_return_type ""
	nparams 1
	  param in name "flinger" explicit_type "sp<SurfaceFlinger>"
	cpp_decl "    ${comment}${inline}${name}${(}const ${t0} & ${p0}${v0}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}const ${t0} & ${p0}${)}:
        mFlinger(flinger),
        mVsyncEnabled(false) ${throw}{
  ${body}}
"
	
	
	
	
      end

      operation 173954 "~EventControlThread"
	cpp_virtual cpp_inline public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${virtual}${name}${(}${)}${volatile}${throw} {};
"
	
	
	
	
      end

      operation 174082 "setVsyncEnabled"
	preserve_cpp_body_indent public explicit_return_type "void"
	nparams 1
	  param in name "enabled" explicit_type "bool"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 174210 "threadLoop"
	preserve_cpp_body_indent cpp_virtual public explicit_return_type "bool"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      classrelation 141442 // mFlinger (<directional composition>)
	relation 141442 *-->
	  stereotype "sp"
	  a role_name "mFlinger" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${stereotype}<${type}> ${name}${value};
"
	    classrelation_ref 141442 // mFlinger (<directional composition>)
	  b parent class_ref 144898 // SurfaceFlinger
      end

      attribute 164098 "mVsyncEnabled"
	private explicit_type "bool"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 164226 "mMutex"
	private explicit_type "Mutex"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 164354 "mCond"
	private explicit_type "Condition"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end
    end

    class 147714 "typedef5"
      visibility package stereotype "typedef" explicit_base_type "Thread"
      cpp_decl "${comment}typedef ${type} ${name};
"
      java_decl ""
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
    end

    class 147842 "VSyncSource"
      abstract visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl ""
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment " ---------------------------------------------------------------------------"
      classrelation 141570 // <generalisation>
	relation 141570 ---|>
	  a public
	    cpp default "${type}"
	    classrelation_ref 141570 // <generalisation>
	  b parent class_ref 147970 // typedef6
      end

      classrelation 141698 // <generalisation>
	relation 141698 ---|>
	  a private
	    cpp default "${type}"
	    classrelation_ref 141698 // <generalisation>
	  b parent class_ref 148098 // typedef7
      end

      class 148226 "Callback"
	abstract visibility package 
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	java_decl ""
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	classrelation 141826 // <generalisation>
	  relation 141826 ---|>
	    a public
	      cpp default "${type}"
	      classrelation_ref 141826 // <generalisation>
	    b parent class_ref 148354 // typedef8
	end

	classrelation 141954 // <generalisation>
	  relation 141954 ---|>
	    a private
	      cpp default "${type}"
	      classrelation_ref 141954 // <generalisation>
	    b parent class_ref 148482 // typedef9
	end

	operation 174338 "~Callback"
	  cpp_virtual cpp_inline public explicit_return_type ""
	  nparams 0
	  cpp_decl "    ${comment}${inline}${virtual}${name}${(}${)}${volatile}${throw} {};
"
	  
	  
	  
	  
	end

	operation 174466 "onVSyncEvent"
	  abstract cpp_virtual public explicit_return_type "void"
	  nparams 1
	    param in name "when" explicit_type "nsecs_t"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	  
	  
	  
	  
	end
      end

      class 148354 "typedef8"
	visibility package stereotype "typedef" explicit_base_type "virtual"
	cpp_decl "${comment}typedef ${type} ${name};
"
	java_decl ""
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
      end

      class 148482 "typedef9"
	visibility package stereotype "typedef" explicit_base_type "RefBase"
	cpp_decl "${comment}typedef ${type} ${name};
"
	java_decl ""
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
      end

      operation 174594 "~VSyncSource"
	cpp_virtual cpp_inline public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${virtual}${name}${(}${)}${volatile}${throw} {};
"
	
	
	
	
      end

      operation 174722 "setVSyncEnabled"
	abstract cpp_virtual public explicit_return_type "void"
	nparams 1
	  param in name "enable" explicit_type "bool"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	
	
	
	
      end

      operation 174850 "setCallback"
	abstract cpp_virtual public explicit_return_type "void"
	nparams 1
	  param in name "callback" explicit_type "sp<Callback>"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	
	
	
	
      end
    end

    class 147970 "typedef6"
      visibility package stereotype "typedef" explicit_base_type "virtual"
      cpp_decl "${comment}typedef ${type} ${name};
"
      java_decl ""
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
    end

    class 148098 "typedef7"
      visibility package stereotype "typedef" explicit_base_type "RefBase"
      cpp_decl "${comment}typedef ${type} ${name};
"
      java_decl ""
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
    end

    class 148610 "EventThread"
      visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl ""
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      classrelation 142082 // <generalisation>
	relation 142082 ---|>
	  a public
	    cpp default "${type}"
	    classrelation_ref 142082 // <generalisation>
	  b parent class_ref 147714 // typedef5
      end

      classrelation 142210 // <generalisation>
	relation 142210 ---|>
	  a private
	    cpp default "${type}"
	    classrelation_ref 142210 // <generalisation>
	  b parent class_ref 148226 // Callback
      end

      class 148738 "Connection"
	visibility package 
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	java_decl ""
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	classrelation 142338 // <generalisation>
	  relation 142338 ---|>
	    a public
	      cpp default "${type}"
	      classrelation_ref 142338 // <generalisation>
	    b parent class_ref 148866 // typedef10
	end

	operation 174978 "Connection"
	  preserve_cpp_body_indent public explicit_return_type ""
	  nparams 1
	    param in name "eventThread" explicit_type "sp<EventThread>"
	  cpp_decl "    ${comment}${inline}${name}${(}const ${t0} & ${p0}${v0}${)}${volatile}${throw};
"
	  cpp_def "// ---------------------------------------------------------------------------

${inline}${class}::${name}${(}const ${t0} & ${p0}${)}
    : count(-1), mEventThread(eventThread), mChannel(new BitTube())
${throw}{
  ${body}}
"
	  
	  
	  
	  
	end

	operation 175106 "postEvent"
	  preserve_cpp_body_indent public explicit_return_type "status_t"
	  nparams 1
	    param in name "event" explicit_type "DisplayEventReceiver::Event"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  
	  
	  
	  
	end

	attribute 164482 "count"
	  public explicit_type "int32_t"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl ""
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  comment " count >= 1 : continuous event. count is the vsync rate
 count == 0 : one-shot event that has not fired
 count ==-1 : one-shot event that fired this round / disabled"
	end

	operation 175234 "~Connection"
	  preserve_cpp_body_indent cpp_virtual private explicit_return_type ""
	  nparams 0
	  cpp_decl "    ${comment}${inline}${virtual}${name}${(}${)}${volatile}${throw};
"
	  cpp_def "${comment}${inline}${class}::${name}${(}${)}${throw}{
  ${body}}
"
	  
	  
	  
	  
	end

	operation 175362 "onFirstRef"
	  preserve_cpp_body_indent cpp_virtual private explicit_return_type "void"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  
	  
	  
	  
	end

	operation 175490 "getDataChannel"
	  preserve_cpp_body_indent const cpp_virtual private explicit_return_type "sp<BitTube>"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  
	  
	  
	  
	end

	operation 175618 "setVsyncRate"
	  preserve_cpp_body_indent cpp_virtual private explicit_return_type "void"
	  nparams 1
	    param in name "count" explicit_type "uint32_t"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  
	  
	  
	  
	end

	operation 175746 "requestNextVsync"
	  preserve_cpp_body_indent cpp_virtual private explicit_return_type "void"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  
	  
	  
	  
	end

	classrelation 142466 // mEventThread (<directional composition>)
	  relation 142466 *-->
	    stereotype "sp"
	    a role_name "mEventThread" const_relation private
	      comment " asynchronous"
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${stereotype}<${type}> ${name}${value};
"
	      classrelation_ref 142466 // mEventThread (<directional composition>)
	    b parent class_ref 148610 // EventThread
	end

	attribute 164610 "mChannel"
	  const_attribute private explicit_type "BitTube"
	  stereotype "sp"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${stereotype}<${type}> ${name}${value};
"
	  java_decl ""
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end
      end

      class 148866 "typedef10"
	visibility package stereotype "typedef" explicit_base_type "BnDisplayEventConnection"
	cpp_decl "${comment}typedef ${type} ${name};
"
	java_decl ""
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
      end

      operation 175874 "EventThread"
	preserve_cpp_body_indent public explicit_return_type ""
	nparams 1
	  param in name "src" explicit_type "sp<VSyncSource>"
	cpp_decl "    ${comment}${inline}${name}${(}const ${t0} & ${p0}${v0}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}const ${t0} & ${p0}${)}
    : mVSyncSource(src),
      mUseSoftwareVSync(false),
      mVsyncEnabled(false),
      mDebugVsyncEnabled(false),
      mVsyncHintSent(false) ${throw}{
  ${body}}
"
	
	
	
	
      end

      operation 176002 "createEventConnection"
	preserve_cpp_body_indent const public explicit_return_type "sp<Connection>"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 176130 "registerDisplayEventConnection"
	public explicit_return_type "status_t"
	nparams 1
	  param in name "connection" explicit_type "sp<Connection>"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 176258 "setVsyncRate"
	public explicit_return_type "void"
	nparams 2
	  param in name "count" explicit_type "uint32_t"
	  param in name "connection" explicit_type "sp<Connection>"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, const ${t1} & ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}, const ${t1} & ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 176386 "requestNextVsync"
	public explicit_return_type "void"
	nparams 1
	  param in name "connection" explicit_type "sp<Connection>"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 176514 "onScreenReleased"
	preserve_cpp_body_indent public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment " called before the screen is turned off from main thread"
      end

      operation 176642 "onScreenAcquired"
	preserve_cpp_body_indent public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment " called after the screen is turned on from main thread"
      end

      operation 176770 "onHotplugReceived"
	preserve_cpp_body_indent public explicit_return_type "void"
	nparams 2
	  param in name "type" explicit_type "int"
	  param in name "connected" explicit_type "bool"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment " called when receiving a hotplug event"
      end

      operation 176898 "waitForEvent"
	preserve_cpp_body_indent public explicit_return_type "Vector< sp<EventThread::Connection> >"
	nparams 1
	  param inout name "event" explicit_type "DisplayEventReceiver::Event"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "// This will return when (1) a vsync event has been received, and (2) there was
// at least one connection interested in receiving it when we started waiting.

${inline}${type} ${class}::${name}${(}${t0} * ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 177026 "dump"
	preserve_cpp_body_indent const public explicit_return_type "void"
	nparams 1
	  param inout name "result" explicit_type "String8"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 177154 "sendVsyncHintOff"
	preserve_cpp_body_indent public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 177282 "threadLoop"
	preserve_cpp_body_indent cpp_virtual private explicit_return_type "bool"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 177410 "onFirstRef"
	preserve_cpp_body_indent cpp_virtual private explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 177538 "onVSyncEvent"
	preserve_cpp_body_indent cpp_virtual private explicit_return_type "void"
	nparams 1
	  param in name "timestamp" explicit_type "nsecs_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 177666 "removeDisplayEventConnection"
	private explicit_return_type "void"
	nparams 1
	  param in name "connection" explicit_type "wp<Connection>"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 177794 "enableVSyncLocked"
	preserve_cpp_body_indent private explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 177922 "disableVSyncLocked"
	preserve_cpp_body_indent private explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 178050 "sendVsyncHintOnLocked"
	preserve_cpp_body_indent private explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      classrelation 142594 // mVSyncSource (<directional composition>)
	relation 142594 *-->
	  stereotype "sp"
	  a role_name "mVSyncSource" private
	    comment " constants"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${stereotype}<${type}> ${name}${value};
"
	    classrelation_ref 142594 // mVSyncSource (<directional composition>)
	  b parent class_ref 147842 // VSyncSource
      end

      classrelation 142722 // mPowerHAL (<directional composition>)
	relation 142722 *-->
	  a role_name "mPowerHAL" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	    classrelation_ref 142722 // mPowerHAL (<directional composition>)
	  b parent class_ref 148994 // PowerHAL
      end

      attribute 164738 "mLock"
	private explicit_type "Mutex"
	cpp_mutable cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 164866 "mCondition"
	private explicit_type "Condition"
	cpp_mutable cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 164994 "mDisplayEventConnections"
	private explicit_type " wp<Connection> "
	stereotype "SortedVector"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${stereotype}<${type}> ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " protected by mLock"
      end

      attribute 165122 "mPendingEvents"
	private explicit_type " DisplayEventReceiver::Event "
	stereotype "Vector"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${stereotype}<${type}> ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 165250 "mVSyncEvent"
	private explicit_type "DisplayEventReceiver::Event"
	multiplicity "[DisplayDevice::NUM_BUILTIN_DISPLAY_TYPES]"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${multiplicity}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 165378 "mUseSoftwareVSync"
	private explicit_type "bool"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 165506 "mVsyncEnabled"
	private explicit_type "bool"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 165634 "mDebugVsyncEnabled"
	private explicit_type "bool"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " for debugging"
      end

      attribute 165762 "mVsyncHintSent"
	private explicit_type "bool"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 165890 "mTimerId"
	private explicit_type "timer_t"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end
    end

    class 149122 "FrameTracker"
      visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl ""
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment " FrameTracker tracks information about the most recently rendered frames. It
 uses a circular buffer of frame records, and is *NOT* thread-safe -
 mutexing must be done at a higher level if multi-threaded access is
 possible.

 Some of the time values tracked may be set either as a specific timestamp
 or a fence.  When a non-NULL fence is set for a given time value, the
 signal time of that fence is used instead of the timestamp."
      class 149250 "anonymous8"
	visibility package stereotype "enum"
	cpp_decl "${comment}enum  {
${items}
};
"
	java_decl ""
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	attribute 166018 "NUM_FRAME_RECORDS"
	  public type class_ref 149250 // anonymous8
	  init_value " 128 "
	  cpp_decl "  ${name}${value},${comment}"
	  java_decl ""
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end
      end

      class 149378 "anonymous9"
	visibility package stereotype "enum"
	cpp_decl "${comment}enum  {
${items}
};
"
	java_decl ""
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	attribute 166146 "NUM_FRAME_BUCKETS"
	  public type class_ref 149378 // anonymous9
	  init_value " 7 "
	  cpp_decl "  ${name}${value},${comment}"
	  java_decl ""
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end
      end

      operation 178178 "FrameTracker"
	preserve_cpp_body_indent public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)} :
        mOffset(0),
        mNumFences(0),
        mDisplayPeriod(0) ${throw}{
  ${body}}
"
	
	
	
	
      end

      operation 178306 "setDesiredPresentTime"
	preserve_cpp_body_indent public explicit_return_type "void"
	nparams 1
	  param in name "presentTime" explicit_type "nsecs_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment " setDesiredPresentTime sets the time at which the current frame
 should be presented to the user under ideal (i.e. zero latency)
 conditions."
      end

      operation 178434 "setFrameReadyTime"
	preserve_cpp_body_indent public explicit_return_type "void"
	nparams 1
	  param in name "readyTime" explicit_type "nsecs_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment " setFrameReadyTime sets the time at which the current frame became ready
 to be presented to the user.  For example, if the frame contents is
 being written to memory by some asynchronous hardware, this would be
 the time at which those writes completed."
      end

      operation 178562 "setFrameReadyFence"
	preserve_cpp_body_indent public explicit_return_type "void"
	nparams 1
	  param in name "readyFence" explicit_type "sp<Fence>"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment " setFrameReadyFence sets the fence that is used to get the time at which
 the current frame became ready to be presented to the user."
      end

      operation 178690 "setActualPresentTime"
	preserve_cpp_body_indent public explicit_return_type "void"
	nparams 1
	  param in name "presentTime" explicit_type "nsecs_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment " setActualPresentTime sets the timestamp at which the current frame became
 visible to the user."
      end

      operation 178818 "setActualPresentFence"
	preserve_cpp_body_indent public explicit_return_type "void"
	nparams 1
	  param in name "readyFence" explicit_type "sp<Fence>"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment " setActualPresentFence sets the fence that is used to get the time
 at which the current frame became visible to the user."
      end

      operation 178946 "setDisplayRefreshPeriod"
	preserve_cpp_body_indent public explicit_return_type "void"
	nparams 1
	  param in name "displayPeriod" explicit_type "nsecs_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment " setDisplayRefreshPeriod sets the display refresh period in nanoseconds.
 This is used to compute frame presentation duration statistics relative
 to this period."
      end

      operation 179074 "advanceFrame"
	preserve_cpp_body_indent public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment " advanceFrame advances the frame tracker to the next frame."
      end

      operation 179202 "clearStats"
	preserve_cpp_body_indent public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment " clearStats clears the tracked frame stats."
      end

      operation 179330 "getStats"
	preserve_cpp_body_indent const public explicit_return_type "void"
	nparams 1
	  param inout name "outStats" explicit_type "FrameStats"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} * ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment " getStats gets the tracked frame stats."
      end

      operation 179458 "logAndResetStats"
	preserve_cpp_body_indent public explicit_return_type "void"
	nparams 1
	  param in name "name" explicit_type "String8"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment " logAndResetStats dumps the current statistics to the binary event log
 and then resets the accumulated statistics to their initial values."
      end

      operation 179586 "dumpStats"
	preserve_cpp_body_indent const public explicit_return_type "void"
	nparams 1
	  param inout name "result" explicit_type "String8"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment " dumpStats dump appends the current frame display time history to the result string."
      end

      class 149506 "FrameRecord"
	visibility package stereotype "struct"
	cpp_decl "${comment}${template}struct ${name}${inherit} {
${members}};
${inlines}
"
	java_decl ""
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	operation 179714 "FrameRecord"
	  cpp_inline public explicit_return_type ""
	  nparams 0
	  cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw} :
            desiredPresentTime(0),
            frameReadyTime(0),
            actualPresentTime(0) {};
"
	  
	  
	  
	  
	end

	attribute 166274 "desiredPresentTime"
	  public explicit_type "nsecs_t"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl ""
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 166402 "frameReadyTime"
	  public explicit_type "nsecs_t"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl ""
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 166530 "actualPresentTime"
	  public explicit_type "nsecs_t"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl ""
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 166658 "frameReadyFence"
	  public explicit_type "Fence"
	  stereotype "sp"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${stereotype}<${type}> ${name}${value};
"
	  java_decl ""
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 166786 "actualPresentFence"
	  public explicit_type "Fence"
	  stereotype "sp"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${stereotype}<${type}> ${name}${value};
"
	  java_decl ""
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end
      end

      operation 179842 "processFencesLocked"
	preserve_cpp_body_indent const private explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment " processFences iterates over all the frame records that have a fence set
 and replaces that fence with a timestamp if the fence has signaled.  If
 the fence is not signaled the record's displayTime is set to INT64_MAX.

 This method is const because although it modifies the frame records it
 does so in such a way that the information represented should not
 change.  This allows it to be called from the dump method."
      end

      operation 179970 "updateStatsLocked"
	preserve_cpp_body_indent const private explicit_return_type "void"
	nparams 1
	  param in name "newFrameIdx" explicit_type "size_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment " updateStatsLocked updates the running statistics that are gathered
 about the frame times."
      end

      operation 180098 "resetFrameCountersLocked"
	preserve_cpp_body_indent private explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment " resetFrameCounteresLocked sets all elements of the mNumFrames array to
 0."
      end

      operation 180226 "logStatsLocked"
	preserve_cpp_body_indent const private explicit_return_type "void"
	nparams 1
	  param in name "name" explicit_type "String8"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment " logStatsLocked dumps the current statistics to the binary event log."
      end

      operation 180354 "isFrameValidLocked"
	preserve_cpp_body_indent const private explicit_return_type "bool"
	nparams 1
	  param in name "idx" explicit_type "size_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment " isFrameValidLocked returns true if the data for the given frame index is
 valid and has all arrived (i.e. there are no oustanding fences)."
      end

      classrelation 142850 // mFrameRecords (<directional composition>)
	relation 142850 *-->
	  a role_name "mFrameRecords" multiplicity "[NUM_FRAME_RECORDS]" private
	    comment " mFrameRecords is the circular buffer storing the tracked data for each
 frame."
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${multiplicity}${value};
"
	    classrelation_ref 142850 // mFrameRecords (<directional composition>)
	  b parent class_ref 149506 // FrameRecord
      end

      attribute 166914 "mOffset"
	private explicit_type "size_t"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " mOffset is the offset into mFrameRecords of the current frame."
      end

      attribute 167042 "mNumFences"
	private explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " mNumFences is the total number of fences set in the frame records.  It
 is incremented each time a fence is added and decremented each time a
 signaled fence is removed in processFences or if advanceFrame clobbers
 a fence.

 The number of fences is tracked so that the run time of processFences
 doesn't grow with NUM_FRAME_RECORDS."
      end

      attribute 167170 "mNumFrames"
	private explicit_type "int32_t"
	multiplicity "[NUM_FRAME_BUCKETS]"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${multiplicity}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " mNumFrames keeps a count of the number of frames with a duration in a
 particular range of vsync periods.  Element n of the array stores the
 number of frames with duration in the half-inclusive range
 [2^n, 2^(n+1)).  The last element of the array contains the count for
 all frames with duration greater than 2^(NUM_FRAME_BUCKETS-1)."
      end

      attribute 167298 "mDisplayPeriod"
	private explicit_type "nsecs_t"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " mDisplayPeriod is the display refresh period of the display for which
 this FrameTracker is gathering information."
      end

      attribute 167426 "mMutex"
	private explicit_type "Mutex"
	cpp_mutable cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " mMutex is used to protect access to all member variables."
      end
    end

    class 149634 "SurfaceFlingerConsumer"
      visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl ""
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment " ----------------------------------------------------------------------------

 * This is a thin wrapper around GLConsumer."
      class 149762 "ContentsChangedListener"
	abstract visibility package stereotype "struct"
	cpp_decl "${comment}${template}struct ${name}${inherit} {
${members}};
${inlines}
"
	java_decl ""
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	classrelation 146690 // <generalisation>
	  relation 146690 ---|>
	    a public
	      cpp default "${type}"
	      classrelation_ref 146690 // <generalisation>
	    b parent class_ref 153090 // typedef17
	end

	operation 195842 "onSidebandStreamChanged"
	  abstract cpp_virtual public explicit_return_type "void"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  
	  
	  
	  
	end
      end

      classrelation 146562 // <generalisation>
	relation 146562 ---|>
	  a public
	    cpp default "${type}"
	    classrelation_ref 146562 // <generalisation>
	  b parent class_ref 152962 // typedef16
      end

      class 153090 "typedef17"
	visibility package stereotype "typedef" explicit_base_type "FrameAvailableListener"
	cpp_decl "${comment}typedef ${type} ${name};
"
	java_decl ""
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
      end

      operation 195970 "SurfaceFlingerConsumer"
	cpp_inline public explicit_return_type ""
	nparams 2
	  param in name "consumer" explicit_type "sp<IGraphicBufferConsumer>"
	  param in name "tex" explicit_type "uint32_t"
	cpp_decl "    ${comment}${inline}${name}${(}const ${t0} & ${p0}${v0}, ${t1} ${p1}${v1}${)}${volatile}${throw} : GLConsumer(consumer, tex, GLConsumer::TEXTURE_EXTERNAL, false, false),
          mTransformToDisplayInverse(false)
    {};
"
	
	
	
	
      end

      class 153218 "BufferRejecter"
	abstract visibility package 
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	java_decl ""
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	classrelation 146818 // <dependency>
	  relation 146818 -_->
	    stereotype "friend"
	    a default
	      cpp default "${type}"
	      classrelation_ref 146818 // <dependency>
	    b parent class_ref 149634 // SurfaceFlingerConsumer
	end

	operation 196098 "reject"
	  abstract cpp_virtual private explicit_return_type "bool"
	  nparams 2
	    param in name "buf" explicit_type "sp<GraphicBuffer>"
	    param in name "item" explicit_type "IGraphicBufferConsumer::BufferItem"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}, const ${t1} & ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	  
	  
	  
	  
	end

	operation 196226 "~BufferRejecter"
	  cpp_virtual cpp_inline protected explicit_return_type ""
	  nparams 0
	  cpp_decl "    ${comment}${inline}${virtual}${name}${(}${)}${volatile}${throw} { };
"
	  
	  
	  
	  
	end
      end

      operation 196354 "acquireBufferLocked"
	preserve_cpp_body_indent cpp_virtual public explicit_return_type "status_t"
	nparams 2
	  param inout name "item" explicit_type "BufferQueue::BufferItem"
	  param in name "presentWhen" explicit_type "nsecs_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}, ${t1} ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} * ${p0}, ${t1} ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 196482 "updateTexImage"
	preserve_cpp_body_indent public explicit_return_type "status_t"
	nparams 2
	  param inout name "rejecter" type class_ref 153218 // BufferRejecter
	  param in name "dispSync" type class_ref 146434 // DispSync
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}, const ${t1} & ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "// ---------------------------------------------------------------------------

${inline}${type} ${class}::${name}${(}${t0} * ${p0}, const ${t1} & ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment " This version of updateTexImage() takes a functor that may be used to
 reject the newly acquired buffer.  Unlike the GLConsumer version,
 this does not guarantee that the buffer has been bound to the GL
 texture."
      end

      operation 196610 "bindTextureImage"
	preserve_cpp_body_indent public explicit_return_type "status_t"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment " See GLConsumer::bindTextureImageLocked()."
      end

      operation 196738 "getTransformToDisplayInverse"
	preserve_cpp_body_indent const public explicit_return_type "bool"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment " must be called from SF main thread"
      end

      operation 196866 "setContentsChangedListener"
	preserve_cpp_body_indent public explicit_return_type "void"
	nparams 1
	  param in name "listener" explicit_type "wp<ContentsChangedListener>"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment " Sets the contents changed listener. This should be used instead of
 ConsumerBase::setFrameAvailableListener()."
      end

      operation 196994 "getSidebandStream"
	preserve_cpp_body_indent const public explicit_return_type "sp<NativeHandle>"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 197122 "computeExpectedPresent"
	preserve_cpp_body_indent private explicit_return_type "nsecs_t"
	nparams 1
	  param in name "dispSync" type class_ref 146434 // DispSync
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "// We need to determine the time when a buffer acquired now will be
// displayed.  This can be calculated:
//   time when previous buffer's actual-present fence was signaled
//    + current display refresh rate * HWC latency
//    + a little extra padding
//
// Buffer producers are expected to set their desired presentation time
// based on choreographer time stamps, which (coming from vsync events)
// will be slightly later then the actual-present timing.  If we get a
// desired-present time that is unintentionally a hair after the next
// vsync, we'll hold the frame when we really want to display it.  We
// need to take the offset between actual-present and reported-vsync
// into account.
//
// If the system is configured without a DispSync phase offset for the app,
// we also want to throw in a bit of padding to avoid edge cases where we
// just barely miss.  We want to do it here, not in every app.  A major
// source of trouble is the app's use of the display's ideal refresh time
// (via Display.getRefreshRate()), which could be off of the actual refresh
// by a few percent, with the error multiplied by the number of frames
// between now and when the buffer should be displayed.
//
// If the refresh reported to the app has a phase offset, we shouldn't need
// to tweak anything here.

${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 197250 "onSidebandStreamChanged"
	preserve_cpp_body_indent cpp_virtual private explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      classrelation 146946 // mContentsChangedListener (<directional composition>)
	relation 146946 *-->
	  stereotype "wp"
	  a role_name "mContentsChangedListener" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${stereotype}<${type}> ${name}${value};
"
	    classrelation_ref 146946 // mContentsChangedListener (<directional composition>)
	  b parent class_ref 149762 // ContentsChangedListener
      end

      attribute 175234 "mTransformToDisplayInverse"
	private explicit_type "bool"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Indicates this buffer must be transformed by the inverse transform of the screen
 it is displayed onto. This is applied after GLConsumer::mCurrentTransform.
 This must be set/read from SurfaceFlinger's main thread."
      end
    end

    class 150914 "LayerDim"
      visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl ""
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment " ---------------------------------------------------------------------------"
      classrelation 144770 // <generalisation>
	relation 144770 ---|>
	  a public
	    cpp default "${type}"
	    classrelation_ref 144770 // <generalisation>
	  b parent class_ref 144770 // Layer
      end

      operation 189954 "LayerDim"
	preserve_cpp_body_indent public explicit_return_type ""
	nparams 6
	  param inout name "flinger" type class_ref 144898 // SurfaceFlinger
	  param in name "client" explicit_type "sp<Client>"
	  param in name "name" explicit_type "String8"
	  param in name "w" explicit_type "uint32_t"
	  param in name "h" explicit_type "uint32_t"
	  param in name "flags" explicit_type "uint32_t"
	cpp_decl "    ${comment}${inline}${name}${(}${t0} * ${p0}${v0}, const ${t1} & ${p1}${v1}, const ${t2} & ${p2}${v2}, ${t3} ${p3}${v3}, ${t4} ${p4}${v4}, ${t5} ${p5}${v5}${)}${volatile}${throw};
"
	cpp_def "// ---------------------------------------------------------------------------

${inline}${class}::${name}${(}${t0} * ${p0}, const ${t1} & ${p1}, const ${t2} & ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}${)}
    : Layer(flinger, client, name, w, h, flags) ${throw}{
  ${body}}
"
	
	
	
	
      end

      operation 190082 "~LayerDim"
	preserve_cpp_body_indent cpp_virtual public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${virtual}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${throw}{
  ${body}}
"
	
	
	
	
      end

      operation 190210 "getTypeId"
	const cpp_virtual cpp_inline public explicit_return_type "char"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}const ${type} * ${name}${(}${)}${const}${volatile}${throw}${abstract} { return \"LayerDim\"; };
"
	
	
	
	
      end

      operation 190338 "onDraw"
	preserve_cpp_body_indent const cpp_virtual public explicit_return_type "void"
	nparams 3
	  param in name "hw" explicit_type "sp<const DisplayDevice>"
	  param in name "clip" explicit_type "Region"
	  param in name "useIdentityTransform" explicit_type "bool"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}, const ${t1} & ${p1}${v1}, ${t2} ${p2}${v2}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}, const ${t1} & ${p1}, ${t2} ${p2}${)}${const}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 190466 "isOpaque"
	const cpp_virtual cpp_inline public explicit_return_type "bool"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} { return false; };
"
	
	
	
	
      end

      operation 190594 "isSecure"
	const cpp_virtual cpp_inline public explicit_return_type "bool"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} { return false; };
"
	
	
	
	
      end

      operation 190722 "isFixedSize"
	const cpp_virtual cpp_inline public explicit_return_type "bool"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} { return true; };
"
	
	
	
	
      end

      operation 190850 "isVisible"
	preserve_cpp_body_indent const cpp_virtual public explicit_return_type "bool"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end
    end

    class 151042 "MessageBase"
      abstract visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl ""
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment " ---------------------------------------------------------------------------"
      classrelation 144898 // <generalisation>
	relation 144898 ---|>
	  a public
	    cpp default "${type}"
	    classrelation_ref 144898 // <generalisation>
	  b parent class_ref 151170 // typedef11
      end

      operation 190978 "MessageBase"
	preserve_cpp_body_indent public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "// ---------------------------------------------------------------------------

${inline}${class}::${name}${(}${)}
    : MessageHandler() ${throw}{
  ${body}}
"
	
	
	
	
      end

      operation 191106 "handler"
	abstract cpp_virtual public explicit_return_type "bool"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	
	
	
	
	comment " return true if message has a handler"
      end

      operation 191234 "wait"
	const cpp_inline public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} { barrier.wait(); };
"
	
	
	
	
	comment " waits for the handler to be processed"
      end

      operation 191362 "~MessageBase"
	preserve_cpp_body_indent cpp_virtual protected explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${virtual}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${throw}{
  ${body}}
"
	
	
	
	
      end

      operation 191490 "handleMessage"
	preserve_cpp_body_indent cpp_virtual private explicit_return_type "void"
	nparams 1
	  param in name "message" explicit_type "Message"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      classrelation 145026 // barrier (<directional composition>)
	relation 145026 *-->
	  a role_name "barrier" private
	    cpp mutable default "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	    classrelation_ref 145026 // barrier (<directional composition>)
	  b parent class_ref 144258 // Barrier
      end
    end

    class 151170 "typedef11"
      visibility package stereotype "typedef" explicit_base_type "MessageHandler"
      cpp_decl "${comment}typedef ${type} ${name};
"
      java_decl ""
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
    end

    class 151298 "MessageQueue"
      visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl ""
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment " ---------------------------------------------------------------------------"
      class 151426 "Handler"
	visibility package 
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	java_decl ""
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	classrelation 145154 // <generalisation>
	  relation 145154 ---|>
	    a public
	      cpp default "${type}"
	      classrelation_ref 145154 // <generalisation>
	    b parent class_ref 151554 // typedef12
	end

	class 151682 "anonymous11"
	  visibility package stereotype "enum"
	  cpp_decl "${comment}enum  {
${items}
};
"
	  java_decl ""
	  php_decl ""
	  python_2_2 python_decl ""
	  idl_decl ""
	  explicit_switch_type ""
	  
	  attribute 173058 "eventMaskInvalidate"
	    public type class_ref 151682 // anonymous11
	    init_value " 0x1"
	    cpp_decl "  ${name}${value},${comment}"
	    java_decl ""
	    php_decl ""
	    python_decl ""
	    idl_decl ""
	  end

	  attribute 173186 "eventMaskRefresh"
	    public type class_ref 151682 // anonymous11
	    init_value " 0x2"
	    cpp_decl "  ${name}${value},${comment}"
	    java_decl ""
	    php_decl ""
	    python_decl ""
	    idl_decl ""
	  end

	  attribute 173314 "eventMaskTransaction"
	    public type class_ref 151682 // anonymous11
	    init_value " 0x4
        "
	    cpp_decl "  ${name}${value},${comment}"
	    java_decl ""
	    php_decl ""
	    python_decl ""
	    idl_decl ""
	  end
	end

	classrelation 145282 // mQueue (<unidirectional association>)
	  relation 145282 --->
	    a role_name "mQueue" private
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} & ${name}${value};
"
	      classrelation_ref 145282 // mQueue (<unidirectional association>)
	    b parent class_ref 151298 // MessageQueue
	end

	attribute 173442 "mEventMask"
	  private explicit_type "int32_t"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl ""
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	operation 191618 "Handler"
	  cpp_inline public explicit_return_type ""
	  nparams 1
	    param inout name "queue" type class_ref 151298 // MessageQueue
	  cpp_decl "    ${comment}${inline}${name}${(}${t0} & ${p0}${v0}${)}${volatile}${throw} : mQueue(queue), mEventMask(0) { };
"
	  
	  
	  
	  
	end

	operation 191746 "handleMessage"
	  preserve_cpp_body_indent cpp_virtual public explicit_return_type "void"
	  nparams 1
	    param in name "message" explicit_type "Message"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  
	  
	  
	  
	end

	operation 191874 "dispatchRefresh"
	  preserve_cpp_body_indent public explicit_return_type "void"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "// ---------------------------------------------------------------------------

${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  
	  
	  
	  
	end

	operation 192002 "dispatchInvalidate"
	  preserve_cpp_body_indent public explicit_return_type "void"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  
	  
	  
	  
	end

	operation 192130 "dispatchTransaction"
	  preserve_cpp_body_indent public explicit_return_type "void"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  
	  
	  
	  
	end
      end

      class 151554 "typedef12"
	visibility package stereotype "typedef" explicit_base_type "MessageHandler"
	cpp_decl "${comment}typedef ${type} ${name};
"
	java_decl ""
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
      end

      classrelation 145410 // <dependency>
	relation 145410 -_->
	  stereotype "friend"
	  a default
	    cpp default "${type}"
	    classrelation_ref 145410 // <dependency>
	  b parent class_ref 151426 // Handler
      end

      classrelation 145538 // mFlinger (<directional composition>)
	relation 145538 *-->
	  stereotype "sp"
	  a role_name "mFlinger" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${stereotype}<${type}> ${name}${value};
"
	    classrelation_ref 145538 // mFlinger (<directional composition>)
	  b parent class_ref 144898 // SurfaceFlinger
      end

      attribute 173570 "mLooper"
	private explicit_type "Looper"
	stereotype "sp"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${stereotype}<${type}> ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 145666 // mEventThread (<directional composition>)
	relation 145666 *-->
	  stereotype "sp"
	  a role_name "mEventThread" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${stereotype}<${type}> ${name}${value};
"
	    classrelation_ref 145666 // mEventThread (<directional composition>)
	  b parent class_ref 148610 // EventThread
      end

      attribute 173698 "mEvents"
	private explicit_type "IDisplayEventConnection"
	stereotype "sp"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${stereotype}<${type}> ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 173826 "mEventTube"
	private explicit_type "BitTube"
	stereotype "sp"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${stereotype}<${type}> ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 145794 // mHandler (<directional composition>)
	relation 145794 *-->
	  stereotype "sp"
	  a role_name "mHandler" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${stereotype}<${type}> ${name}${value};
"
	    classrelation_ref 145794 // mHandler (<directional composition>)
	  b parent class_ref 151426 // Handler
      end

      operation 192258 "cb_eventReceiver"
	class_operation preserve_cpp_body_indent private explicit_return_type "int"
	nparams 3
	  param in name "fd" explicit_type "int"
	  param in name "events" explicit_type "int"
	  param inout name "data" explicit_type "void"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} ${p1}${v1}, ${t2} * ${p2}${v2}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} * ${p2}${)}${const}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 192386 "eventReceiver"
	preserve_cpp_body_indent private explicit_return_type "int"
	nparams 2
	  param in name "fd" explicit_type "int"
	  param in name "events" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      class 151810 "anonymous12"
	visibility package stereotype "enum"
	cpp_decl "${comment}enum  {
${items}
};
"
	java_decl ""
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	attribute 173954 "INVALIDATE"
	  public type class_ref 151810 // anonymous12
	  init_value " 0"
	  cpp_decl "  ${name}${value},${comment}"
	  java_decl ""
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 174082 "REFRESH"
	  public type class_ref 151810 // anonymous12
	  init_value " 1"
	  cpp_decl "  ${name}${value},${comment}"
	  java_decl ""
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 174210 "TRANSACTION"
	  public type class_ref 151810 // anonymous12
	  init_value " 2
    "
	  cpp_decl "  ${name}${value},${comment}"
	  java_decl ""
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end
      end

      operation 192514 "MessageQueue"
	preserve_cpp_body_indent public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "// ---------------------------------------------------------------------------

${inline}${class}::${name}${(}${)}${throw}{
  ${body}}
"
	
	
	
	
      end

      operation 192642 "~MessageQueue"
	preserve_cpp_body_indent public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${virtual}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${throw}{
  ${body}}
"
	
	
	
	
      end

      operation 192770 "init"
	preserve_cpp_body_indent public explicit_return_type "void"
	nparams 1
	  param in name "flinger" explicit_type "sp<SurfaceFlinger>"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 192898 "setEventThread"
	preserve_cpp_body_indent public explicit_return_type "void"
	nparams 1
	  param in name "eventThread" explicit_type "sp<EventThread>"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 193026 "waitMessage"
	preserve_cpp_body_indent public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 193154 "postMessage"
	preserve_cpp_body_indent public explicit_return_type "status_t"
	nparams 2
	  param in name "messageHandler" explicit_type "sp<MessageBase>"
	  param in name "relTime" explicit_type "nsecs_t"
	    defaultvalue "0"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}, ${t1} ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}, ${t1} ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 193282 "invalidate"
	preserve_cpp_body_indent public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment " sends INVALIDATE message at next VSYNC"
      end

      operation 193410 "refresh"
	preserve_cpp_body_indent public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment " sends REFRESH message at next VSYNC"
      end

      operation 193538 "invalidateTransactionNow"
	preserve_cpp_body_indent public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment " sends TRANSACTION message immediately"
      end
    end

    class 151938 "MonitoredProducer"
      visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl ""
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment " MonitoredProducer wraps an IGraphicBufferProducer so that SurfaceFlinger will
 be notified upon its destruction"
      classrelation 145922 // <generalisation>
	relation 145922 ---|>
	  a public
	    cpp default "${type}"
	    classrelation_ref 145922 // <generalisation>
	  b parent class_ref 152066 // typedef13
      end

      operation 193666 "MonitoredProducer"
	preserve_cpp_body_indent public explicit_return_type ""
	nparams 2
	  param in name "producer" explicit_type "sp<IGraphicBufferProducer>"
	  param in name "flinger" explicit_type "sp<SurfaceFlinger>"
	cpp_decl "    ${comment}${inline}${name}${(}const ${t0} & ${p0}${v0}, const ${t1} & ${p1}${v1}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}const ${t0} & ${p0}, const ${t1} & ${p1}${)} :
    mProducer(producer),
    mFlinger(flinger) ${throw}{
  ${body}}
"
	
	
	
	
      end

      operation 193794 "~MonitoredProducer"
	preserve_cpp_body_indent cpp_virtual public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${virtual}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${throw}{
  ${body}}
"
	
	
	
	
      end

      operation 193922 "requestBuffer"
	preserve_cpp_body_indent cpp_virtual public explicit_return_type "status_t"
	nparams 2
	  param in name "slot" explicit_type "int"
	  param inout name "buf" explicit_type "sp<GraphicBuffer>"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} * ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}, ${t1} * ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment " From IGraphicBufferProducer"
      end

      operation 194050 "setBufferCount"
	preserve_cpp_body_indent cpp_virtual public explicit_return_type "status_t"
	nparams 1
	  param in name "bufferCount" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 194178 "dequeueBuffer"
	preserve_cpp_body_indent cpp_virtual public explicit_return_type "status_t"
	nparams 7
	  param inout name "slot" explicit_type "int"
	  param inout name "fence" explicit_type "sp<Fence>"
	  param in name "async" explicit_type "bool"
	  param in name "w" explicit_type "uint32_t"
	  param in name "h" explicit_type "uint32_t"
	  param in name "format" explicit_type "uint32_t"
	  param in name "usage" explicit_type "uint32_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}, ${t1} * ${p1}${v1}, ${t2} ${p2}${v2}, ${t3} ${p3}${v3}, ${t4} ${p4}${v4}, ${t5} ${p5}${v5}, ${t6} ${p6}${v6}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} * ${p0}, ${t1} * ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}, ${t6} ${p6}${)}${const}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 194306 "detachBuffer"
	preserve_cpp_body_indent cpp_virtual public explicit_return_type "status_t"
	nparams 1
	  param in name "slot" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 194434 "detachNextBuffer"
	preserve_cpp_body_indent cpp_virtual public explicit_return_type "status_t"
	nparams 2
	  param inout name "outBuffer" explicit_type "sp<GraphicBuffer>"
	  param inout name "outFence" explicit_type "sp<Fence>"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}, ${t1} * ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} * ${p0}, ${t1} * ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 194562 "attachBuffer"
	preserve_cpp_body_indent cpp_virtual public explicit_return_type "status_t"
	nparams 2
	  param inout name "outSlot" explicit_type "int"
	  param in name "buffer" explicit_type "sp<GraphicBuffer>"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}, const ${t1} & ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} * ${p0}, const ${t1} & ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 194690 "queueBuffer"
	preserve_cpp_body_indent cpp_virtual public explicit_return_type "status_t"
	nparams 3
	  param in name "slot" explicit_type "int"
	  param in name "input" explicit_type "QueueBufferInput"
	  param inout name "output" explicit_type "QueueBufferOutput"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, const ${t1} & ${p1}${v1}, ${t2} * ${p2}${v2}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}, const ${t1} & ${p1}, ${t2} * ${p2}${)}${const}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 194818 "cancelBuffer"
	preserve_cpp_body_indent cpp_virtual public explicit_return_type "void"
	nparams 2
	  param in name "slot" explicit_type "int"
	  param in name "fence" explicit_type "sp<Fence>"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, const ${t1} & ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}, const ${t1} & ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 194946 "query"
	preserve_cpp_body_indent cpp_virtual public explicit_return_type "int"
	nparams 2
	  param in name "what" explicit_type "int"
	  param inout name "value" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} * ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}, ${t1} * ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 195074 "connect"
	preserve_cpp_body_indent cpp_virtual public explicit_return_type "status_t"
	nparams 4
	  param in name "listener" explicit_type "sp<IProducerListener>"
	  param in name "api" explicit_type "int"
	  param in name "producerControlledByApp" explicit_type "bool"
	  param inout name "output" explicit_type "QueueBufferOutput"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}, ${t1} ${p1}${v1}, ${t2} ${p2}${v2}, ${t3} * ${p3}${v3}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} * ${p3}${)}${const}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 195202 "disconnect"
	preserve_cpp_body_indent cpp_virtual public explicit_return_type "status_t"
	nparams 1
	  param in name "api" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 195330 "setSidebandStream"
	preserve_cpp_body_indent cpp_virtual public explicit_return_type "status_t"
	nparams 1
	  param in name "stream" explicit_type "sp<NativeHandle>"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 195458 "allocateBuffers"
	preserve_cpp_body_indent cpp_virtual public explicit_return_type "void"
	nparams 5
	  param in name "async" explicit_type "bool"
	  param in name "width" explicit_type "uint32_t"
	  param in name "height" explicit_type "uint32_t"
	  param in name "format" explicit_type "uint32_t"
	  param in name "usage" explicit_type "uint32_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} ${p1}${v1}, ${t2} ${p2}${v2}, ${t3} ${p3}${v3}, ${t4} ${p4}${v4}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${const}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 195586 "onAsBinder"
	preserve_cpp_body_indent cpp_virtual public explicit_return_type "IBinder"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} * ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} * ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      attribute 174338 "mProducer"
	private explicit_type "IGraphicBufferProducer"
	stereotype "sp"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${stereotype}<${type}> ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 146050 // mFlinger (<directional composition>)
	relation 146050 *-->
	  stereotype "sp"
	  a role_name "mFlinger" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${stereotype}<${type}> ${name}${value};
"
	    classrelation_ref 146050 // mFlinger (<directional composition>)
	  b parent class_ref 144898 // SurfaceFlinger
      end
    end

    class 152066 "typedef13"
      visibility package stereotype "typedef" explicit_base_type "IGraphicBufferProducer"
      cpp_decl "${comment}typedef ${type} ${name};
"
      java_decl ""
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
    end

    class 152322 "typedef14"
      visibility package stereotype "typedef" explicit_base_type "BnSurfaceComposer"
      cpp_decl "${comment}typedef ${type} ${name};
"
      java_decl ""
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
    end

    class 152450 "typedef15"
      visibility package stereotype "typedef" explicit_base_type "IBinder::DeathRecipient"
      cpp_decl "${comment}typedef ${type} ${name};
"
      java_decl ""
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
    end

    class 152962 "typedef16"
      visibility package stereotype "typedef" explicit_base_type "GLConsumer"
      cpp_decl "${comment}typedef ${type} ${name};
"
      java_decl ""
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
    end

    class 159874 "ZeroPhaseTracer"
      visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl ""
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      classrelation 152962 // <generalisation>
	relation 152962 ---|>
	  a public
	    cpp default "${type}"
	    classrelation_ref 152962 // <generalisation>
	  b parent class_ref 146562 // Callback
      end

      operation 243330 "ZeroPhaseTracer"
	cpp_inline public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw} : mParity(false) {};
"
	
	
	
	
      end

      operation 243458 "onDispSyncEvent"
	cpp_virtual cpp_inline public explicit_return_type "void"
	nparams 1
	  param in name "" explicit_type "nsecs_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract} {
        mParity = !mParity;
        ATRACE_INT(\"ZERO_PHASE_VSYNC\", mParity ? 1 : 0);
    };
"
	
	
	
	
      end

      attribute 200834 "mParity"
	private explicit_type "bool"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end
    end

    class 160002 "DispSyncSource"
      visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl ""
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      classrelation 153090 // <generalisation>
	relation 153090 ---|>
	  a public
	    cpp default "${type}"
	    classrelation_ref 153090 // <generalisation>
	  b parent class_ref 147842 // VSyncSource
      end

      classrelation 153218 // <generalisation>
	relation 153218 ---|>
	  a private
	    cpp default "${type}"
	    classrelation_ref 153218 // <generalisation>
	  b parent class_ref 146562 // Callback
      end

      operation 243586 "DispSyncSource"
	cpp_inline public explicit_return_type ""
	nparams 4
	  param inout name "dispSync" type class_ref 146434 // DispSync
	  param in name "phaseOffset" explicit_type "nsecs_t"
	  param in name "traceVsync" explicit_type "bool"
	  param in name "label" explicit_type "char"
	cpp_decl "    ${comment}${inline}${name}${(}${t0} * ${p0}${v0}, ${t1} ${p1}${v1}, ${t2} ${p2}${v2}, const ${t3} * ${p3}${v3}${)}${volatile}${throw} :
            mValue(0),
            mPhaseOffset(phaseOffset),
            mTraceVsync(traceVsync),
            mVsyncOnLabel(String8::format(\"VsyncOn-%s\", label)),
            mVsyncEventLabel(String8::format(\"VSYNC-%s\", label)),
            mDispSync(dispSync) {};
"
	
	
	
	
      end

      operation 243714 "~DispSyncSource"
	cpp_virtual cpp_inline public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${virtual}${name}${(}${)}${volatile}${throw} {};
"
	
	
	
	
      end

      operation 243842 "setVSyncEnabled"
	cpp_virtual cpp_inline public explicit_return_type "void"
	nparams 1
	  param in name "enable" explicit_type "bool"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract} {
        // Do NOT lock the mutex here so as to avoid any mutex ordering issues
        // with locking it in the onDispSyncEvent callback.
        if (enable) {
            status_t err = mDispSync->addEventListener(mPhaseOffset,
                    static_cast<DispSync::Callback*>(this));
            if (err != NO_ERROR) {
                ALOGE(\"error registering vsync callback: %s (%d)\",
                        strerror(-err), err);
            }
            //ATRACE_INT(mVsyncOnLabel.string(), 1);
        } else {
            status_t err = mDispSync->removeEventListener(
                    static_cast<DispSync::Callback*>(this));
            if (err != NO_ERROR) {
                ALOGE(\"error unregistering vsync callback: %s (%d)\",
                        strerror(-err), err);
            }
            //ATRACE_INT(mVsyncOnLabel.string(), 0);
        }
    };
"
	
	
	
	
      end

      operation 243970 "setCallback"
	cpp_virtual cpp_inline public explicit_return_type "void"
	nparams 1
	  param in name "callback" explicit_type "sp<VSyncSource::Callback>"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract} {
        Mutex::Autolock lock(mMutex);
        mCallback = callback;
    };
"
	
	
	
	
      end

      operation 244098 "onDispSyncEvent"
	cpp_virtual cpp_inline private explicit_return_type "void"
	nparams 1
	  param in name "when" explicit_type "nsecs_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract} {
        sp<VSyncSource::Callback> callback;
        {
            Mutex::Autolock lock(mMutex);
            callback = mCallback;

            if (mTraceVsync) {
                mValue = (mValue + 1) % 2;
                ATRACE_INT(mVsyncEventLabel.string(), mValue);
            }
        }

        if (callback != NULL) {
            callback->onVSyncEvent(when);
        }
    };
"
	
	
	
	
      end

      attribute 200962 "mValue"
	private explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 201090 "mPhaseOffset"
	const_attribute private explicit_type "nsecs_t"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 201218 "mTraceVsync"
	const_attribute private explicit_type "bool"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 201346 "mVsyncOnLabel"
	const_attribute private explicit_type "String8"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 201474 "mVsyncEventLabel"
	const_attribute private explicit_type "String8"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 153346 // mDispSync (<unidirectional association>)
	relation 153346 --->
	  a role_name "mDispSync" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    classrelation_ref 153346 // mDispSync (<unidirectional association>)
	  b parent class_ref 146434 // DispSync
      end

      classrelation 153474 // mCallback (<directional composition>)
	relation 153474 *-->
	  stereotype "sp"
	  a role_name "mCallback" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${stereotype}<${type}> ${name}${value};
"
	    classrelation_ref 153474 // mCallback (<directional composition>)
	  b parent class_ref 148226 // Callback
      end

      attribute 201602 "mMutex"
	private explicit_type "Mutex"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end
    end

    class 160130 "GraphicProducerWrapper"
      visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl ""
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment " ---------------------------------------------------------------------------
 Capture screen into an IGraphiBufferProducer
 ---------------------------------------------------------------------------
 The code below is here to handle b/8734824
 *
 * We create a IGraphicBufferProducer wrapper that forwards all calls
 * from the surfaceflinger thread to the calling binder thread, where they
 * are executed. This allows the calling thread in the calling process to be
 * reused and not depend on having \"enough\" binder threads to handle the
 * requests."
      classrelation 153602 // <generalisation>
	relation 153602 ---|>
	  a public
	    cpp default "${type}"
	    classrelation_ref 153602 // <generalisation>
	  b parent class_ref 160258 // typedef26
      end

      classrelation 153730 // <generalisation>
	relation 153730 ---|>
	  a public
	    cpp default "${type}"
	    classrelation_ref 153730 // <generalisation>
	  b parent class_ref 151170 // typedef11
      end

      attribute 201730 "impl"
	private explicit_type "IGraphicBufferProducer"
	stereotype "sp"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${stereotype}<${type}> ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Parts of GraphicProducerWrapper are run on two different threads,
     * communicating by sending messages via Looper but also by shared member
     * data. Coherence maintenance is subtle and in places implicit (ugh).
     *
     * Don't rely on Looper's sendMessage/handleMessage providing
     * release/acquire semantics for any data not actually in the Message.
     * Data going from surfaceflinger to binder threads needs to be
     * synchronized explicitly.
     *
     * Barrier open/wait do provide release/acquire semantics. This provides
     * implicit synchronization for data coming back from binder to
     * surfaceflinger threads.
     "
      end

      attribute 201858 "looper"
	private explicit_type "Looper"
	stereotype "sp"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${stereotype}<${type}> ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 201986 "result"
	private explicit_type "status_t"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 202114 "exitPending"
	private explicit_type "bool"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 202242 "exitRequested"
	private explicit_type "bool"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 153858 // barrier (<directional composition>)
	relation 153858 *-->
	  a role_name "barrier" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	    classrelation_ref 153858 // barrier (<directional composition>)
	  b parent class_ref 144258 // Barrier
      end

      attribute 202370 "code"
	private explicit_type "uint32_t"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 202498 "data"
	const_attribute private explicit_type "Parcel"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 202626 "reply"
	private explicit_type "Parcel"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      class 160386 "anonymous23"
	visibility package stereotype "enum"
	cpp_decl "${comment}enum  {
${items}
};
"
	java_decl ""
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	attribute 202754 "MSG_API_CALL"
	  public type class_ref 160386 // anonymous23
	  cpp_decl "  ${name}${value},${comment}"
	  java_decl ""
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 202882 "MSG_EXIT"
	  public type class_ref 160386 // anonymous23
	  cpp_decl "  ${name}${value},${comment}"
	  java_decl ""
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end
      end

      operation 244226 "transact"
	cpp_virtual cpp_inline private explicit_return_type "status_t"
	nparams 4
	  param in name "code" explicit_type "uint32_t"
	  param in name "data" explicit_type "Parcel"
	  param inout name "reply" explicit_type "Parcel"
	  param in name "" explicit_type "uint32_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, const ${t1} & ${p1}${v1}, ${t2} * ${p2}${v2}, ${t3} ${p3}${v3}${)}${const}${volatile}${throw}${abstract} {
        this->code = code;
        this->data = &data;
        this->reply = reply;
        if (exitPending) {
            // if we've exited, we run the message synchronously right here.
            // note (JH): as far as I can tell from looking at the code, this
            // never actually happens. if it does, i'm not sure if it happens
            // on the surfaceflinger or binder thread.
            handleMessage(Message(MSG_API_CALL));
        } else {
            barrier.close();
            // Prevent stores to this->{code, data, reply} from being
            // reordered later than the construction of Message.
            atomic_thread_fence(memory_order_release);
            looper->sendMessage(this, Message(MSG_API_CALL));
            barrier.wait();
        }
        return result;
    };
"
	
	
	
	
	comment "     * Called on surfaceflinger thread. This is called by our \"fake\"
     * BpGraphicBufferProducer. We package the data and reply Parcel and
     * forward them to the binder thread."
      end

      operation 244354 "handleMessage"
	cpp_virtual cpp_inline private explicit_return_type "void"
	nparams 1
	  param in name "message" explicit_type "Message"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract} {
        int what = message.what;
        // Prevent reads below from happening before the read from Message
        atomic_thread_fence(memory_order_acquire);
        if (what == MSG_API_CALL) {
            result = impl->asBinder()->transact(code, data[0], reply);
            barrier.open();
        } else if (what == MSG_EXIT) {
            exitRequested = true;
        }
    };
"
	
	
	
	
	comment "     * here we run on the binder thread. All we've got to do is
     * call the real BpGraphicBufferProducer."
      end

      operation 244482 "GraphicProducerWrapper"
	cpp_inline public explicit_return_type ""
	nparams 1
	  param in name "impl" explicit_type "sp<IGraphicBufferProducer>"
	cpp_decl "    ${comment}${inline}${name}${(}const ${t0} & ${p0}${v0}${)}${volatile}${throw} :   impl(impl),
        looper(new Looper(true)),
        exitPending(false),
        exitRequested(false)
    {};
"
	
	
	
	
      end

      operation 244610 "waitForResponse"
	cpp_inline public explicit_return_type "status_t"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} {
        do {
            looper->pollOnce(-1);
        } while (!exitRequested);
        return result;
    };
"
	
	
	
	
	comment " Binder thread"
      end

      operation 244738 "exit"
	cpp_inline public explicit_return_type "void"
	nparams 1
	  param in name "result" explicit_type "status_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract} {
        this->result = result;
        exitPending = true;
        // Ensure this->result is visible to the binder thread before it
        // handles the message.
        atomic_thread_fence(memory_order_release);
        looper->sendMessage(this, Message(MSG_EXIT));
    };
"
	
	
	
	
	comment " Client thread"
      end
    end

    class 160258 "typedef26"
      visibility package stereotype "typedef" explicit_base_type "BBinder"
      cpp_decl "${comment}typedef ${type} ${name};
"
      java_decl ""
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
    end

  end

  deploymentview 134914 "surfaceflinger"
    //deployment diagram settings
    package_name_in_tab default show_context default write_horizontally default auto_label_position default draw_all_relations default shadow default
    draw_component_as_icon default show_component_req_prov default show_component_rea default show_stereotype_properties default
    artifact 141698 "Barrier"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      associated_classes
	class_ref 144258 // Barrier
      end
    end

    artifact 141826 "Client"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      associated_classes
	class_ref 144642 // typedef1
	class_ref 144514 // Client
      end
    end

    artifact 141954 "Colorizer"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      associated_classes
	class_ref 145026 // Colorizer
      end
    end

    artifact 142082 "DdmConnection"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      associated_classes
	class_ref 145282 // DdmConnection
      end
    end

    artifact 142210 "DisplayDevice"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      associated_classes
	class_ref 145538 // typedef2
	class_ref 145410 // DisplayDevice
      end
    end

    artifact 142338 "DispSync"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      associated_classes
	class_ref 146434 // DispSync
      end
    end

    artifact 142466 "EventControlThread"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      associated_classes
	class_ref 147714 // typedef5
	class_ref 147586 // EventControlThread
      end
    end

    artifact 142594 "EventThread"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      associated_classes
	class_ref 147970 // typedef6
	class_ref 148098 // typedef7
	class_ref 147842 // VSyncSource
	class_ref 148610 // EventThread
      end
    end

    artifact 142722 "FrameTracker"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      associated_classes
	class_ref 149122 // FrameTracker
      end
    end

    artifact 142850 "Layer"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      associated_classes
	class_ref 144770 // Layer
      end
    end

    artifact 142978 "LayerDim"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      associated_classes
	class_ref 150914 // LayerDim
      end
    end

    artifact 143106 "MessageQueue"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      associated_classes
	class_ref 151170 // typedef11
	class_ref 151042 // MessageBase
	class_ref 151298 // MessageQueue
      end
    end

    artifact 143234 "MonitoredProducer"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      associated_classes
	class_ref 152066 // typedef13
	class_ref 151938 // MonitoredProducer
      end
    end

    artifact 143490 "SurfaceFlinger"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      associated_classes
	class_ref 152322 // typedef14
	class_ref 152450 // typedef15
	class_ref 144898 // SurfaceFlinger
      end
    end

    artifact 143618 "SurfaceFlingerConsumer"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      associated_classes
	class_ref 152962 // typedef16
	class_ref 149634 // SurfaceFlingerConsumer
      end
    end

    artifact 143746 "Transform"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      associated_classes
	class_ref 146050 // Transform
      end
    end

    artifact 146178 "DispSyncThread"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      associated_classes
	class_ref 147458 // DispSyncThread
      end
    end

    artifact 146306 "ZeroPhaseTracer"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      associated_classes
	class_ref 159874 // ZeroPhaseTracer
      end
    end

    artifact 146562 "DispSyncSource"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      associated_classes
	class_ref 160002 // DispSyncSource
      end
    end

    artifact 146690 "typedef26"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      associated_classes
	class_ref 160258 // typedef26
      end
    end

    artifact 146818 "GraphicProducerWrapper"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      associated_classes
	class_ref 160130 // GraphicProducerWrapper
      end
    end
  end

  package_ref 135042 // DisplayHardware

  package_ref 135170 // RenderEngine

  package_ref 135298 // surfaceflinger

  package_ref 135426 // Effects

  package_ref 135554 // EventLog

  package_ref 135682 // tests
end
